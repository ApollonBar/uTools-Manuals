{ "intro.html": "介绍", "functions.html": "内置函数", "constants.html": "内置常量", "stdtypes.html": "内置类型", "exceptions.html": "内置异常", "text.html": "文字处理服务", "string.html": "字符串操作", "re.html": "正则表达式操作", "difflib.html": "计算delta的帮助", "textwrap.html": "文字换行和填充", "unicodedata.html": "Unicode 数据库", "stringprep.html": "互联网字符串制备", "readline.html": "GNU readline 接口", "rlcompleter.html": "GNU readline的完成功能", "binary.html": "二进制数据服务", "struct.html": "格式化解析bytes", "codecs.html": "Codec注册表和基类", "datatypes.html": "数据类型", "datetime.html": "基本日期时间类型", "calendar.html": "与日历相关的一般函数", "collections.html": "容器", "collections.abc.html": "抽象基类容器", "heapq.html": "堆队列算法", "bisect.html": "数组分割算法", "array.html": "高效的数值数组", "weakref.html": "弱引用", "types.html": "创建动态类型和内置类型的名称", "copy.html": "浅层和深层复制操作", "pprint.html": "打印整洁的数据", "reprlib.html": "备用 repr() 执行", "enum.html": "支持枚举类型", "numeric.html": "数字和数学模块", "numbers.html": "数字抽象基类", "math.html": "数学函数", "cmath.html": "数学函数，用于复数", "decimal.html": "十进制固定和浮点算术", "fractions.html": "有理数", "random.html": "生成伪随机数", "statistics.html": "数理统计函数", "functional.html": "函数编程模块", "itertools.html": "功能创建迭代器高效循环", "functools.html": "高阶函数和可调用对象的操作", "operator.html": "标准运算符作为函数", "filesys.html": "文件与目录的访问", "pathlib.html": "面向对象的文件系统路径", "os.path.html": "常见的路径名称操作", "fileinput.html": "从多个输入流中迭代", "stat.html": "解释stat()结果", "filecmp.html": "文件和目录比较", "tempfile.html": "生成临时文件和目录", "glob.html": "Unix样式路径名模式扩展", "fnmatch.html": "Unix文件名匹配模式", "linecache.html": "文字行缓存", "shutil.html": "高级文件操作", "macpath.html": "Mac OS 9路径处理函数", "persistence.html": "数据持久性", "pickle.html": "Python对象序列化", "copyreg.html": "注册pickle支持功能", "shelve.html": "Python对象持久性", "marshal.html": "内部Python对象序列化", "dbm.html": "与Unix“数据库”的接口", "sqlite3.html": "SQLite数据库的DB-API 0接口", "archiving.html": "数据压缩和归档", "zlib.html": "兼容 gzip 压缩", "gzip.html": "支持 gzip 文件", "bz2.html": "支持 bzip2 压缩", "lzma.html": "基于LZMA算法的压缩", "zipfile.html": "ZIP归档访问", "tarfile.html": "读取与压缩tar文件", "fileformats.html": "文件格式", "csv.html": "CSV 文件的读写", "configparser.html": "配置文件解析器", "netrc.html": "netrc文件处理", "xdrlib.html": "对XDR数据进行编码和解码", "plistlib.html": "生成并解析Mac OS X ", "crypto.html": "加密服务", "hashlib.html": "安全哈希和消息摘要", "hmac.html": "用于消息验证的加密哈希", "allos.html": "通用操作系统服务", "os.html": "操作系统的各种接口", "io.html": "以流方式处理打开的核心工具", "time.html": "时间存取和转换", "argparse.html": "解析命令行参数的Parser工具", "getopt.html": "命令行选项的C样式解析器", "logging.html": "Python日志记录工具", "logging.config.html": "日志配置", "logging.handlers.html": "日志处理程序", "getpass.html": "便携式密码输入", "curses.html": "字符单元显示的终端处理", "curses.ascii.html": "ASCII字符的实用工具", "curses.panel.html": "curses的面板集扩展", "platform.html": "访问底层平台的识别数据", "errno.html": "标准errno系统符号", "ctypes.html": "Python的外部函数库", "concurrency.html": "并发执行", "threading.html": "基于线程的并行", "multiprocessing.html": "基于进程的并行", "concurrent.html": "concurrent", "concurrent.futures.html": "启动并行任务", "subprocess.html": "子进程管理", "sched.html": "事件调度程序", "queue.html": "同步队列类", "dummy_threading.html": "threading模块的插入替换", "_thread.html": "低级线程API", "_dummy_thread.html": "替换_thread模块", "ipc.html": "进程间通信和联网", "socket.html": "低级网络接口", "ssl.html": "套接字对象的TLS / SSL包装器", "select.html": "等待I / O完成", "selectors.html": "高级I / O复用", "asyncio.html": "异步 I/O、 事件循环、 协同程序和任务", "asyncore.html": "异步套接字处理程序", "asynchat.html": "异步套接字命令/响应处理程序", "signal.html": "设置异步事件处理程序", "mmap.html": "内存映射文件支持 0>", "netdata.html": "互联网数据处理", "email.html": "电子邮件和MIME处理包", "json.html": "JSON 编码与解码", "mailcap.html": "Mailcap文件处理", "mailbox.html": "以各种格式处理邮箱", "mimetypes.html": "将文件名映射到MIME类型", "base64.html": "Base16、Base32、Base64、Base85数据编码", "binhex.html": "编码和解码binhex4文件", "binascii.html": "在二进制和ASCII之间转换", "quopri.html": "编码和解码MIME可引用的数据", "uu.html": "对uuencode文件进行编码和解码", "markup.html": "结构化标记处理工具", "html.html": "超文本标记语言的支持", "html.parser.html": "简单的HTML和XHTML解析器", "html.entities.html": "HTML一般实体的定义", "xml.html": "XML处理模块", "xml.etree.elementtree.html": "ElementTree XML API", "xml.dom.html": "文档对象模型API", "xml.dom.minidom.html": "最小DOM实现", "xml.dom.pulldom.html": "支持构建部分DOM树", "xml.sax.html": "支持SAX2解析器", "xml.sax.handler.html": "SAX处理程序的基类", "xml.sax.utils.html": "SAX实用程序", "xml.sax.reader.html": "XML解析器接口", "pyexpat.html": "使用Expat进行快速XML解析", "internet.html": "网络协议与支持", "webbrowser.html": "方便的 Web 浏览器控制器", "cgi.html": "通用网关接口支持", "cgitb.html": "CGI 脚本的回馈错误管理", "wsgiref.html": "WSGI Utilities和参考实现", "urllib.html": "URL 处理模块", "urllib.request.html": "可扩展的开放Url类", "urllib.parse.html": "将网址解析到组件", "urllib.error.html": "由urllib", "urllib.robotparser.html": "用于robots", "http.html": "HTTP模块", "http.client.html": "HTTP 协议客户端", "ftplib.html": "FTP 协议客户端", "poplib.html": "POP3 协议客户端", "imaplib.html": "IMAP4 协议客户端", "nntplib.html": "NNTP 协议客户端", "smtplib.html": "SMTP 协议客户端", "smtpd.html": "SMTP 服务", "telnetlib.html": "Telnet 客户端", "uuid.html": "根据RFC 4122的UUID对象", "socketserver.html": "网络服务器框架", "http.server.html": "HTTP服务器", "http.cookies.html": "HTTP状态管理", "http.cookiejar.html": "HTTP客户端的Cookie处理", "xmlrpc.html": "XMLRPC服务器和客户端模块", "xmlrpc.client.html": "XML-RPC客户端访问", "xmlrpc.server.html": "基本XML-RPC服务器", "ipaddress.html": "IPv4 / IPv6操作库", "mm.html": "多媒体服务", "audioop.html": "处理原始音频数据", "aifc.html": "读写AIFF和AIFC文件", "sunau.html": "读写Sun AU文件", "wave.html": "读取和写入WAV文件", "chunk.html": "读取IFF分块数据", "colorsys.html": "颜色系统之间的转换", "imghdr.html": "确定图像的类型", "sndhdr.html": "确定声音文件的类型", "ossaudiodev.html": "访问与OSS兼容的音频设备", "i18n.html": "国际化", "gettext.html": "多语言国际化服务", "locale.html": "国际化服务", "frameworks.html": "程序框架", "turtle.html": "Turtle graphics(图像)", "cmd.html": "支持面向行的命令解释器", "shlex.html": "简单词法分析", "tk.html": "TK图形用户接口", "tkinter.html": "Tcl/Tk的python接口", "tkinter.ttk.html": "Tk主题化部件", "tkinter.tix.html": "Tk扩展控件", "tkinter.scrolledtext.html": "滚动文本控件", "idle.html": "集成开发与学习环境", "othergui.html": "其他图形用户接口包", "development.html": "开发工具", "typing.html": "支持类型提示", "pydoc.html": "文档生成器和联机帮助系统", "doctest.html": "测试交互式 Python 示例", "unittest.html": "单元测试框架", "unittest.mock.html": "模拟对象库", "unittest.mock-examples.html": "开始使用", "2to3.html": "2to3-Python 2 到 3 代码自动转化", "test.html": "回归测试包为 Python", "debug.html": "调试和分析", "bdb.html": "调试器框架", "faulthandler.html": "转储Python回溯", "pdb.html": "The Python Debugger", "profile.html": "Python分析器", "timeit.html": "测量小代码片段的执行时间", "trace.html": "跟踪或跟踪 Python 语句执行", "tracemalloc.html": "跟踪内存分配", "distribution.html": "软件包装及分销", "distutils.html": "建立和安装的 Python 模块", "ensurepip.html": "引导 pip 安装程序", "venv.html": "创建虚拟环境", "zipapp.html": "管理可执行 python zip档案", "python.html": "Python 运行时服务", "sys.html": "系统特定参数和函数", "sysconfig.html": "提供对 Python 的配置信息的访问", "builtins.html": "内置对象", "__main__.html": "顶级脚本环境", "warnings.html": "警告控制", "contextlib.html": "with语句的上下文实用程序", "abc.html": "抽象基类", "atexit.html": "退出处理程序", "traceback.html": "打印或检索堆栈跟踪", "__future__.html": "未来语句定义", "gc.html": "垃圾回收器接口", "inspect.html": "检查活跃的对象", "site.html": "网站特定的配置挂钩", "fpectl.html": "浮点异常控制", "custominterp.html": "自定义 Python 解释器", "code.html": "解释器基类", "codeop.html": "编译 Python 代码", "modules.html": "导入模块", "zipimport.html": "从 Zip 存档导入模块", "pkgutil.html": "软件包扩展程序", "modulefinder.html": "查找脚本使用的模块", "runpy.html": "定位和执行Python模块", "importlib.html": "执行import", "language.html": "Python 语言服务", "parser.html": "访问 Python 语法树", "ast.html": "抽象语法树", "symtable.html": "访问编译器的符号表", "symbol.html": "常数用 Python 语法树", "token.html": "常数用 Python 语法树", "keyword.html": "测试Python关键字", "tokenize.html": "适用于Python源代码的Tokenizer", "tabnanny.html": "检测模糊缩进", "pyclbr.html": "Python类浏览器支持", "py_compile.html": "编译Python源文件", "compileall.html": "字节编译Python库", "dis.html": "Python 字节码反汇编器", "pickletools.html": "pickle 开发工具", "misc.html": "杂项服务", "formatter.html": "通用输出格式", "windows.html": "MS Windows 专用服务", "msilib.html": "读写Microsoft安装程序文件", "msvcrt.html": "从MS VC ++运行时的有用例程", "winreg.html": "注册表访问", "winsound.html": "Windows的声音播放接口", "unix.html": "Unix 专用服务", "posix.html": "最常见的POSIX系统调用", "pwd.html": "密码数据库", "spwd.html": "影子密码数据库", "grp.html": "群组数据库", "crypt.html": "检查Unix密码的功能", "termios.html": "POSIX style tty control", "tty.html": "终端控制功能", "pty.html": "伪终端实用程序", "fcntl.html": "fcntl和ioctl系统调用", "pipes.html": "shell管道接口", "resource.html": "资源使用信息", "nis.html": "Sun的NIS（黄页）接口", "syslog.html": "Unix syslog库例程", "superseded.html": "废弃的模块", "optparse.html": "解析命令行选项", "imp.html": "访问import内部", "BeautifulSoup.html": "一个HTML或XML的解析库,可以用它来方便的从网页中提取数据", "Pillow(PIL).html": "功能强大的图像处理库", "requests(basic).html": "强大、便捷的HTTP库（基础）", "requests(advance).html": "强大、便捷的HTTP库（进阶）", "Scrapy.html": "一个快速、高层次的屏幕抓取和web抓取框架，用于抓取web站点并从页面中提取结构化的数据", "abc.html#abc.abstractmethod": "装饰器指示抽象方法", "abc.html#abc.abstractclassmethod": "内建classmethod()的子类，表示抽象类方法", "abc.html#abc.abstractstaticmethod": "内建staticmethod()的子类，表示抽象静态方法", "abc.html#abc.abstractproperty": "内建property()的子类，表示一个抽象属性", "abc.html#abc.get_cache_token": "返回当前抽象基类缓存令牌", "aifc.html#aifc.open": "打开AIFF或AIFF-C文件并返回对象实例，方法如下所述", "array.html#array.typecodes": "包含所有可用类型代码的字符串", "ast.html#ast.parse": "将源解析为AST节点", "ast.html#ast.literal_eval": "安全计算表达式节点或包含Python字面值或容器显示的字符串", "ast.html#ast.get_docstring": "Return the docstring of the given node (which must be a FunctionDef, ClassDef or Module node), or None if it has no docstring", "ast.html#ast.fix_missing_locations": "当使用compile()编译节点树时，编译器对于支持它们的每个节点都需要lineno和col_offset属性", "ast.html#ast.increment_lineno": "从节点开始，通过n增加树中每个节点的行号", "ast.html#ast.copy_location": "如果可能，将源位置（lineno和col_offset）从old_node复制到new_node，然后返回new_node ", "ast.html#ast.iter_fields": "Yield a tuple of (fieldname, value) for each field in node", "ast.html#ast.iter_child_nodes": "产生节点的所有直接子节点，即作为节点的所有字段和作为节点列表的所有字段项", "ast.html#ast.walk": "递归地以节点（包括节点本身）开始生成树中的所有后代节点，没有指定顺序", "ast.html#ast.dump": "在节点中返回树的格式化转储", "asynchat.html#asynchat.async_chat.ac_in_buffer_size": "异步输入缓冲区大小（默认值4096）", "asynchat.html#asynchat.async_chat.ac_out_buffer_size": "异步输出缓冲区大小（默认值4096）", "asyncore.html#asyncore.loop": "输入轮询循环，在计数过程或所有打开的通道关闭后终止循环", "atexit.html#atexit.register": "将func寄存器作为要在终止时执行的函数", "atexit.html#atexit.unregister": "从要在解释器关机运行的函数列表中删除func", "audioop.html#audioop.add": "返回一个片段，它是作为参数传递的两个样本的相加", "audioop.html#audioop.adpcm2lin": "将Intel / DVI ADPCM编码片段解码为线性片段", "audioop.html#audioop.alaw2lin": "将a-LAW编码中的声音片段转换为线性编码的声音片段", "audioop.html#audioop.avg": "返回片段中所有样本的平均值", "audioop.html#audioop.avgpp": "返回片段中所有样本的平均峰 - 峰值", "audioop.html#audioop.bias": "返回作为原始片段的片段，并向每个样本添加偏差", "audioop.html#audioop.byteswap": "“Byteswap”片段中的所有样本，并返回修改的片段", "audioop.html#audioop.cross": "返回作为参数传递的片段中的零交叉的数量", "audioop.html#audioop.findfactor": "返回因子F使得rms（add（fragment， mul（reference， -F））） t4>是最小的，即返回要乘以参考的因子，以使其与片段尽可能匹配", "audioop.html#audioop.findfit": "尝试将引用与片段（应为更长的片段）的一部分匹配", "audioop.html#audioop.findmax": "搜索片段获取长度长度的切片（不是字节！）with maximum energy, i", "audioop.html#audioop.getsample": "返回样本index的值", "audioop.html#audioop.lin2adpcm": "将采样转换为4位Intel / DVI ADPCM编码", "audioop.html#audioop.lin2alaw": "将音频片段中的样本转换为a-LAW编码，并将其作为字节对象返回", "audioop.html#audioop.lin2lin": "以1-，2-，3-和4字节格式转换样本", "audioop.html#audioop.lin2ulaw": "将音频片段中的样本转换为u-LAW编码，并将其作为字节对象返回", "audioop.html#audioop.max": "返回片段中所有样本的绝对值的最大值", "audioop.html#audioop.maxpp": "返回声音片段中的最大峰 - 峰值", "audioop.html#audioop.minmax": "返回由声音片段中所有样本的最小值和最大值组成的元组", "audioop.html#audioop.mul": "返回具有原始片段中的所有样本乘以浮点值因子的片段", "audioop.html#audioop.ratecv": "转换输入片段的帧速率", "audioop.html#audioop.reverse": "反转片段中的样本，并返回修改的片段", "audioop.html#audioop.rms": "返回片段的均方根，即sqrt(sum(S_i^2)/n)", "audioop.html#audioop.tomono": "将立体声片段转换为单声道片段", "audioop.html#audioop.tostereo": "从单声道片段生成立体声片段", "audioop.html#audioop.ulaw2lin": "将u-LAW编码中的声音片段转换为线性编码的声音片段", "base64.html#base64.b64encode": "使用Base64编码类字节对象s，并返回编码后的字节", "base64.html#base64.b64decode": "解码Base64编码的类字节对象或ASCII字符串s并返回解码的字节", "base64.html#base64.standard_b64encode": "使用标准的Base64字母表编码类字节对象 s并返回编码的字节", "base64.html#base64.standard_b64decode": "使用标准的Base64字母表解码类字节对象或ASCII字符串s并返回解码的字节", "base64.html#base64.urlsafe_b64encode": "使用URL和文件系统安全的字母表编码类字节对象s，它用-和_分别替换标准的Base64字母表中的+和/，并返回编码的字节", "base64.html#base64.urlsafe_b64decode": "使用URL及文件系统安全的字母表解码类字节对象或ASCII字符串s，它将标准Base64字母表中的+替换为-、/替换为_，并返回解码后的字节", "base64.html#base64.b32encode": "使用Base32编码类字节对象s并返回编码后的字节", "base64.html#base64.b32decode": "解码Base32编码的bytes-like object或ASCII字符串s并返回解码的bytes", "base64.html#base64.b16encode": "使用Base16编码bytes-like object s并返回编码的bytes", "base64.html#base64.b16decode": "解码Base16编码的bytes-like object或ASCII字符串s并返回解码的bytes", "base64.html#base64.a85encode": "使用Ascii85编码bytes-like object b并返回编码的bytes", "base64.html#base64.a85decode": "解码Ascii85编码的bytes-like object或ASCII字符串b并返回解码的bytes", "base64.html#base64.b85encode": "使用base85编码bytes-like object b（如git-style binary diffs）并返回编码的bytes", "base64.html#base64.b85decode": "解码base85编码的bytes-like object或ASCII字符串b并返回解码的bytes", "base64.html#base64.decode": "解码二进制输入文件的内容，并将生成的二进制数据写入输出文件", "base64.html#base64.decodebytes": "解码bytes-like object s，其中必须包含一行或多行base64编码数据，并返回解码的bytes", "base64.html#base64.encode": "编码二进制输入文件的内容，并将生成的base64编码数据写入输出文件", "base64.html#base64.encodebytes": "编码类字节对象s，它可以包含任意二进制数据，并返回base64编码数据的字节，根据RFC 2045 （MIME），在输出的每76个字节之后插入换行符（b'\\n'），并确保末尾有一个换行符", "bdb.html#bdb.checkfuncname": "检查我们是否应该在这里断开，这取决于断点b设置的方式", "bdb.html#bdb.effective": "确定此行代码是否存在有效（活动）断点", "bdb.html#bdb.set_trace": "使用调用者框架中的Bdb实例开始调试", "binascii.html#binascii.a2b_uu": "将单行的uuencoded数据转换回二进制并返回二进制数据", "binascii.html#binascii.b2a_uu": "将二进制数据转换为一行ASCII字符，返回值是转换后的行，包括换行符", "binascii.html#binascii.a2b_base64": "将一个base64数据块转换回二进制并返回二进制数据", "binascii.html#binascii.b2a_base64": "在base64编码中将二进制数据转换为一行ASCII字符", "binascii.html#binascii.a2b_qp": "将一组引用可打印数据转换回二进制并返回二进制数据", "binascii.html#binascii.b2a_qp": "将二进制数据转换为带引号的可打印编码中的ASCII字符行", "binascii.html#binascii.a2b_hqx": "将binhex4格式的ASCII数据转换为二进制，不进行RLE解压缩", "binascii.html#binascii.rledecode_hqx": "按照binhex4标准对数据执行RLE解压缩", "binascii.html#binascii.rlecode_hqx": "对数据执行binhex4样式RLE压缩并返回结果", "binascii.html#binascii.b2a_hqx": "执行hexbin4二进制到ASCII的转换并返回结果字符串", "binascii.html#binascii.crc_hqx": "计算数据的binhex4 crc值，以值开始作为初始crc，并返回结果", "binascii.html#binascii.crc32": "以值的初始CRC开始，计算数据的32位校验和CRC-32", "binascii.html#binascii.b2a_hex": "返回二进制数据的十六进制表示", "binascii.html#binascii.a2b_hex": "返回由十六进制字符串hexstr表示的二进制数据", "binhex.html#binhex.binhex": "将文件名输入的二进制文件转换为binhex文件输出", "binhex.html#binhex.hexbin": "解码binhex文件输入", "bisect.html#bisect.bisect_left": "在a中找到x的插入点以保持排序顺序", "bisect.html#bisect.bisect_right": "类似于bisect_left()，但返回在a中x的任何现有条目之后（右侧）的插入点", "bisect.html#bisect.insort_left": "以排序顺序在a中插入x", "bisect.html#bisect.insort_right": "类似于insort_left()，但在x的任何现有条目后在a中插入x", "bz2.html#bz2.open": "在二进制或文本模式下打开bzip2压缩文件，返回file object", "bz2.html#bz2.compress": "压缩数据", "bz2.html#bz2.decompress": "解压缩数据", "calendar.html#calendar.setfirstweekday": "设置每周开始的工作日（0是星期一，6是星期日）", "calendar.html#calendar.firstweekday": "返回为平日的当前设置，每个星期开始", "calendar.html#calendar.isleap": "如果年是闰年，则返回True，否则False", "calendar.html#calendar.leapdays": "返回闰年的数目范围内从y1到y2 （专用）， y1和y2是几年", "calendar.html#calendar.weekday": "返回年（1970 -", "calendar.html#calendar.weekheader": "返回包含缩写的星期几名称的标头", "calendar.html#calendar.monthrange": "返回月份，为指定的年、月中的工作日的天数，每月的第一天", "calendar.html#calendar.monthcalendar": "返回一个矩阵，代表一个月的日历", "calendar.html#calendar.prmonth": "打印由month()返回的一个月的日历", "calendar.html#calendar.month": "使用TextCalendar类的formatmonth()返回多行字符串中的一个月的日历", "calendar.html#calendar.prcal": "打印由calendar()返回的整年的日历", "calendar.html#calendar.calendar": "使用TextCalendar类的formatyear()）作为多行字符串返回整年的3列日历", "calendar.html#calendar.timegm": "一个不相关但方便的函数，它需要一个时间元组，例如由time模块中的gmtime()函数返回，并返回相应的Unix时间戳值， 1970，和POSIX编码", "calendar.html#calendar.day_name": "一个数组，表示当前的区域设置中的星期数", "calendar.html#calendar.day_abbr": "一个数组，表示当前的区域设置中的缩写的星期数", "calendar.html#calendar.month_name": "一个数组，表示今年的几个月中的当前区域设置", "calendar.html#calendar.month_abbr": "一个数组，表示今年的缩写个月中的当前区域设置", "cgi.html#cgi.parse": "在环境或文件中解析查询（文件默认为sys", "cgi.html#cgi.parse_qs": "此模块中已弃用此函数", "cgi.html#cgi.parse_qsl": "此模块中已弃用此函数", "cgi.html#cgi.parse_multipart": "解析类型multipart / form-data的输入（用于文件上传）", "cgi.html#cgi.parse_header": "将MIME标头（例如Content-Type）解析为主值和参数字典", "cgi.html#cgi.test": "稳健的测试CGI脚本，可用作主程序", "cgi.html#cgi.print_environ": "在HTML中格式化shell环境", "cgi.html#cgi.print_form": "在HTML中格式化表单", "cgi.html#cgi.print_directory": "使用HTML格式化当前目录", "cgi.html#cgi.print_environ_usage": "在HTML中打印有用（由CGI使用）环境变量的列表", "cgi.html#cgi.escape": "将字符串s中的字符'&'，'<'和'>'如果您需要显示可能在HTML中包含此类字符的文本，请使用此选项", "cgitb.html#cgitb.enable": "此函数使cgitb模块通过设置sys", "cgitb.html#cgitb.handler": "此函数使用默认设置处理异常 （也即是，在浏览器中显示错误小心但不记录到一个文件中小心）", "cmath.html#cmath.phase": "返回阶段的x （也被称为参数的x），作为一个浮点数", "cmath.html#cmath.polar": "返回在极坐标系中的x表示", "cmath.html#cmath.rect": "返回复数x用极坐标r和phi", "cmath.html#cmath.exp": "返回指数值e**x", "cmath.html#cmath.log": "返回给定基的x的对数", "cmath.html#cmath.log10": "返回x的对数", "cmath.html#cmath.sqrt": "返回x的平方根", "cmath.html#cmath.acos": "返回x的反余弦", "cmath.html#cmath.asin": "返回x的反正弦值", "cmath.html#cmath.atan": "返回x的反正切值", "cmath.html#cmath.cos": "返回x的余弦值", "cmath.html#cmath.sin": "返回x的正弦值", "cmath.html#cmath.tan": "返回x的正切值", "cmath.html#cmath.acosh": "返回x的反双曲余弦值", "cmath.html#cmath.asinh": "返回x的反双曲正弦值", "cmath.html#cmath.atanh": "返回x的反双曲正切值", "cmath.html#cmath.cosh": "返回x的双曲余弦值", "cmath.html#cmath.sinh": "返回x的双曲正弦值", "cmath.html#cmath.tanh": "返回x的双曲正切值", "cmath.html#cmath.isfinite": "如果x的实部和虚部都是有限的，则返回True，否则返回False", "cmath.html#cmath.isinf": "如果x的实部或虚部是无穷大，而False则返回True", "cmath.html#cmath.isnan": "如果x的实部或虚部是NaN，而False则返回True", "cmath.html#cmath.isclose": "如果a和b的值彼此接近，而False则返回True", "cmath.html#cmath.pi": "数学常量π，作为一个浮点数", "cmath.html#cmath.e": "数学常数e，作为一个浮点数", "code.html#code.interact": "便利功能运行读取 - 打印回路", "code.html#code.compile_command": "这个函数对于想要模拟Python的解释器主循环（a", "codecs.html#codecs.encode": "使用为编码注册的编解码器编码obj", "codecs.html#codecs.decode": "使用为编码注册的编解码器解码obj", "codecs.html#codecs.lookup": "在Python编解码器注册表中查找编解码器信息，并返回如下定义的CodecInfo对象", "codecs.html#codecs.getencoder": "查找给定编码的编解码器并返回其编码器功能", "codecs.html#codecs.getdecoder": "查找给定编码的编解码器并返回其解码器功能", "codecs.html#codecs.getincrementalencoder": "查找给定编码的编解码器并返回其增量编码器类或工厂功能", "codecs.html#codecs.getincrementaldecoder": "查找给定编码的编解码器并返回其增量解码器类或工厂功能", "codecs.html#codecs.getreader": "查找给定编码的编解码器并返回它的StreamReader类或工厂函数", "codecs.html#codecs.getwriter": "查找给定编码的编解码器并返回它的StreamWriter类或工厂函数", "codecs.html#codecs.register": "注册编解码器搜索功能", "codecs.html#codecs.open": "使用给定的模式打开编码文件并返回StreamReaderWriter的实例，从而提供透明的编码/解码", "codecs.html#codecs.EncodedFile": "返回一个StreamRecoder实例，它提供了透明代码转换的文件的包装版本", "codecs.html#codecs.iterencode": "使用增量编码器迭代编码迭代器提供的输入", "codecs.html#codecs.iterdecode": "使用增量式解码器迭代解码迭代器提供的输入", "codecs.html#codecs.register_error": "在名称name下注册错误处理函数error_handler", "codecs.html#codecs.lookup_error": "返回之前在名称name下注册的错误处理程序", "codecs.html#codecs.strict_errors": "实现'strict'错误处理：每个编码或解码错误都会引发一个UnicodeError", "codecs.html#codecs.replace_errors": "实现'replace'错误处理（仅用于text encodings）：替换'?' for encoding errors (to be encoded by the codec), and '\\ufffd' (the Unicode replacement character) for decoding errors", "codecs.html#codecs.ignore_errors": "实现'ignore'错误处理：忽略格式错误的数据，继续编码或解码，恕不另行通知", "codecs.html#codecs.xmlcharrefreplace_errors": "实现'xmlcharrefreplace'错误处理（仅适用于使用text encodings编码）：将不可编码字符替换为适当的XML字符引用", "codecs.html#codecs.backslashreplace_errors": "实现'backslashreplace'错误处理（仅适用于text encodings）：格式错误的数据被替换为反斜杠转义序列", "codecs.html#codecs.namereplace_errors": "实现'namereplace'错误处理（仅适用于使用text encodings编码）：不可编码字符被替换为\\N{", "codecs.html#encodings.idna.nameprep": "返回标签的名称准备版本", "codecs.html#encodings.idna.ToASCII": "按照 RFC 3490的规定将标签转换为ASCII", "codecs.html#encodings.idna.ToUnicode": "按照 RFC 3490的规定将标签转换为Unicode", "codecs.html#codecs.BOM": "这些常量定义了各种字节序列，即多个编码的Unicode字节顺序标记（BOM）", "codeop.html#codeop.compile_command": "尝试编译源，它应是一个Python代码字符串，并且如果source是有效的Python代码，则返回一个代码对象", "collections.html#collections.namedtuple": "返回一个叫做typename的新的元组子类", "colorsys.html#colorsys.rgb_to_yiq": "将颜色从RGB坐标转换为YIQ坐标", "colorsys.html#colorsys.yiq_to_rgb": "将颜色从YIQ坐标转换为RGB坐标", "colorsys.html#colorsys.rgb_to_hls": "将颜色从RGB坐标转换为HLS坐标", "colorsys.html#colorsys.hls_to_rgb": "将颜色从HLS坐标转换为RGB坐标", "colorsys.html#colorsys.rgb_to_hsv": "将颜色从RGB坐标转换为HSV坐标", "colorsys.html#colorsys.hsv_to_rgb": "将颜色从HSV坐标转换为RGB坐标", "compileall.html#compileall.compile_dir": "递归地下降由dir命名的目录树，编译所有", "compileall.html#compileall.compile_file": "使用路径fullname编译文件", "compileall.html#compileall.compile_path": "字节编译沿sys", "concurrent.futures.html#concurrent.futures.wait": "等待由fs给出的Future实例（可能由不同的Executor实例创建）完成", "concurrent.futures.html#concurrent.futures.as_completed": "在多个Future实例（可能由不同的Executor实例创建）上的迭代器（iterator）将会被返回，这些Future实例由fs完成（结束或者被停止）时产生（译者注：fs可以是隐含有一系列Future实例以及其他普通值的组合，返回的迭代器迭代的是那些Future实例，不包含普通的值）", "configparser.html#configparser.MAX_INTERPOLATION_DEPTH": "当raw参数为false时，get()的递归插值的最大深度", "constants.html#False": "bool类型的假值", "constants.html#True": "bool类型的真值", "constants.html#None": "NoneType 类型的唯一值", "constants.html#NotImplemented": "应该由特殊的二元方法返回的特殊值（例如__eq__(), __lt__(), __add__(), __rsub__()等）以指示没有相对于另一类型实现所述操作；可以通过就地二进制特殊方法（例如，__imul__()，__iand__()等）为同一目的", "constants.html#Ellipsis": "与", "constants.html#__debug__": "如果Python未使用-O选项启动，则此常数为true", "constants.html#quit": "打印时打印对象，打印一条消息，如“退出()”或Ctrl-D（即“EOF）退出，并且在调用时，使用指定的退出代码提升SystemExit", "constants.html#copyright": "当打印这些对象时，打印一条类似“Type license() to see the full license text”的信息，当调用它们时，则以分页的方式（一次一个屏幕）显示相应的文本", "contextlib.html#contextlib.contextmanager": "这个函数是一个装饰器，它可以用来一个工厂函数用于with语句上下文管理器，而不需要创建一个类或单独的__enter__()和__exit__()方法", "contextlib.html#contextlib.closing": "返回一个上下文管理器，在块完成后关闭事", "contextlib.html#contextlib.suppress": "返回上下文管理器，如果它们出现在with语句的主体中，则禁止任何指定的异常，然后使用with语句结束后的第一个语句恢复执行", "contextlib.html#contextlib.redirect_stdout": "上下文管理器用于将sys", "contextlib.html#contextlib.redirect_stderr": "与redirect_stdout()类似，但将sys", "copy.html#copy.copy": "返回x的浅拷贝", "copy.html#copy.deepcopy": "返回x的深度副本", "copyreg.html#copyreg.constructor": "将对象声明为有效的构造函数", "copyreg.html#copyreg.pickle": "声明函数应用作类型类型的对象的“缩减”函数", "crypt.html#crypt.crypt": "字通常是在提示或图形界面中输入的用户密码", "crypt.html#crypt.mksalt": "返回指定方法的随机生成的盐", "crypt.html#crypt.METHOD_SHA512": "一个16字符盐和86字符散列的模块化地址格式方法", "crypt.html#crypt.METHOD_SHA256": "另一个模块化地址格式方法，具有16个字符的盐和43个字符的哈希", "crypt.html#crypt.METHOD_MD5": "另一个模块化地址格式方法，具有8个字符的盐和22个字符的哈希", "crypt.html#crypt.METHOD_CRYPT": "传统方法使用2个字符的盐和13个字符的哈希", "csv.html#csv.reader": "返回一个读取器对象，它将在给定的csvfile中迭代", "csv.html#csv.writer": "返回一个writer对象，负责将用户的数据转换为给定类文件对象上的分隔字符串", "csv.html#csv.register_dialect": "将方言与名称相关联", "csv.html#csv.unregister_dialect": "从方言注册表中删除与名称关联的方言", "csv.html#csv.get_dialect": "返回与名称关联的方言", "csv.html#csv.list_dialects": "返回所有注册方言的名称", "csv.html#csv.field_size_limit": "返回解析器允许的当前最大字段大小", "csv.html#csv.QUOTE_ALL": "指示writer对象引用所有字段", "csv.html#csv.QUOTE_MINIMAL": "指示writer对象仅引用包含特殊字符（如分隔符，quotechar或lineterminator t5>", "csv.html#csv.QUOTE_NONNUMERIC": "指示writer对象引用所有非数字字段", "csv.html#csv.QUOTE_NONE": "指示writer对象从不引用字段", "ctypes.html#ctypes.CFUNCTYPE": "返回的函数原型创建使用标准C调用约定的函数", "ctypes.html#ctypes.WINFUNCTYPE": "仅Windows：返回的函数原型创建使用stdcall调用约定的函数，除了在Windows CE上，WINFUNCTYPE()与CFUNCTYPE()该功能将在通话过程中释放GIL", "ctypes.html#ctypes.PYFUNCTYPE": "返回的函数原型创建使用Python调用约定的函数", "ctypes.html#ctypes.addressof": "以整数形式返回内存缓冲区的地址", "ctypes.html#ctypes.alignment": "返回ctypes类型的对齐要求", "ctypes.html#ctypes.byref": "返回指向obj的轻量级指针，该指针必须是ctypes类型的实例", "ctypes.html#ctypes.cast": "该函数与C中的cast操作符类似", "ctypes.html#ctypes.create_string_buffer": "这个函数创建一个可变的字符缓冲区", "ctypes.html#ctypes.create_unicode_buffer": "这个函数创建一个可变的unicode字符缓冲区", "ctypes.html#ctypes.DllCanUnloadNow": "仅Windows：这个函数是一个钩子，它允许实现具有ctypes的进程内COM服务器", "ctypes.html#ctypes.DllGetClassObject": "仅Windows：这个函数是一个钩子，它允许实现具有ctypes的进程内COM服务器", "ctypes.html#ctypes.util.find_library": "尝试找到一个库并返回一个路径名", "ctypes.html#ctypes.util.find_msvcrt": "仅Windows：返回Python使用的VC运行时库的文件名，以及扩展模块", "ctypes.html#ctypes.FormatError": "仅限Windows：返回错误代码代码的文本描述", "ctypes.html#ctypes.GetLastError": "仅Windows：返回调用线程中由Windows设置的最后一个错误代码", "ctypes.html#ctypes.memmove": "与标准C memmove库函数相同：将count个字节从src复制到dst", "ctypes.html#ctypes.memset": "与标准C memset库函数相同：使用值c的count字节填充地址dst处的存储器块", "ctypes.html#ctypes.POINTER": "这个工厂函数创建并返回一个新的ctypes指针类型", "ctypes.html#ctypes.pointer": "这个函数创建一个新的指针实例，指向obj", "ctypes.html#ctypes.resize": "此函数调整obj的内部缓冲区，该缓冲区必须是ctypes类型的实例", "ctypes.html#ctypes.sizeof": "返回ctypes类型或实例内存缓冲区的大小（以字节为单位）", "ctypes.html#ctypes.string_at": "此函数返回从内存地址address开始的C字符串作为字节对象", "ctypes.html#ctypes.WinError": "仅Windows：这个函数可能是ctypes中命名最差的东西", "ctypes.html#ctypes.wstring_at": "该函数以字符串的形式返回从内存地址地址开始的宽字符串", "curses.ascii.html#curses.ascii.isalnum": "检查ASCII字母数字字符；它等同于isalpha（c） 或 isdigit（c）", "curses.ascii.html#curses.ascii.isalpha": "检查ASCII字母字符；它等于isupper（c） 或 islower（c）", "curses.ascii.html#curses.ascii.isascii": "检查符合7位ASCII集的字符值", "curses.ascii.html#curses.ascii.isblank": "检查ASCII空格字符；空间或水平制表符", "curses.ascii.html#curses.ascii.iscntrl": "检查ASCII控制字符（范围为0x00到0x1f或0x7f）", "curses.ascii.html#curses.ascii.isdigit": "检查ASCII十进制数字，'0'到'9'", "curses.ascii.html#curses.ascii.isgraph": "检查ASCII任何可打印字符（空格除外）", "curses.ascii.html#curses.ascii.islower": "检查ASCII小写字符", "curses.ascii.html#curses.ascii.isprint": "检查任何ASCII可打印字符（包括空格）", "curses.ascii.html#curses.ascii.ispunct": "检查任何可打印的ASCII字符，它不是空格或字母数字字符", "curses.ascii.html#curses.ascii.isspace": "检查ASCII空格字符；空格，换行，回车，换页，水平制表，垂直制表", "curses.ascii.html#curses.ascii.isupper": "检查ASCII大写字母", "curses.ascii.html#curses.ascii.isxdigit": "检查ASCII十六进制数字", "curses.ascii.html#curses.ascii.isctrl": "检查ASCII控制字符（序数值0到31）", "curses.ascii.html#curses.ascii.ismeta": "检查非ASCII字符（序数值为0x80及以上）", "curses.ascii.html#curses.ascii.ascii": "返回对应于c的低7位的ASCII值", "curses.ascii.html#curses.ascii.ctrl": "返回与给定字符相对应的控制字符（字符位值按位和0x1f）", "curses.ascii.html#curses.ascii.alt": "返回与给定ASCII字符相对应的8位字符（字符位值以0x80为单位）", "curses.ascii.html#curses.ascii.unctrl": "返回ASCII字符c的字符串表示形式", "curses.ascii.html#curses.ascii.controlnames": "一个33个元素的字符串数组，包含从0（NUL）到0x1f（US）的32个ASCII控制字符的ASCII助记符，加上空格字符的助记符SP", "curses.html#curses.baudrate": "以每秒位数返回终端的输出速度", "curses.html#curses.beep": "发出短注意的声音", "curses.html#curses.can_change_color": "返回 True 或者 False, 具体取决于是否程序员可以更改显示的颜色由终端", "curses.html#curses.cbreak": "进入 cbreak 模式", "curses.html#curses.color_content": "返回一组红绿蓝RGB的颜色强度分量color_number,其值要介于 0 和 COLORS", "curses.html#curses.color_pair": "返回在指定的颜色显示文本的属性值", "curses.html#curses.curs_set": "设置光标的状态", "curses.html#curses.def_prog_mode": "作为&quot;程序&quot;模式，模式正在运行的程序使用curss时保存当前的终端模式", "curses.html#curses.def_shell_mode": "作为&quot;shell&quot;模式，模式正在运行的程序不使用curses时保存当前的终端模式", "curses.html#curses.delay_output": "插入一个 ms 毫秒的暂停再输出上", "curses.html#curses.doupdate": "更新物理屏幕", "curses.html#curses.echo": "进入echo模型", "curses.html#curses.endwin": "取消初始化库，和终端回到正常状态", "curses.html#curses.erasechar": "返回用户当前的擦除字符", "curses.html#curses.filter": "必须在调用initscr()之前调用filter()例程（如果使用）", "curses.html#curses.flash": "闪烁屏幕", "curses.html#curses.flushinp": "刷新所有输入缓冲区", "curses.html#curses.getmouse": "After getch() returns KEY_MOUSE to signal a mouse event, this method should be call to retrieve the queued mouse event, represented as a 5-tuple (id, x, y, z, bstate)", "curses.html#curses.getsyx": "返回y和x中虚拟屏幕光标的当前坐标", "curses.html#curses.getwin": "通过前面的putwin()调用读取存储在文件中的窗口相关数据", "curses.html#curses.has_colors": "如果终端可以显示颜色，则返回True；否则，返回False", "curses.html#curses.has_ic": "如果终端具有插入和删除字符功能，则返回True", "curses.html#curses.has_il": "如果终端具有插入和删除行功能，或者可以使用滚动区域模拟它们，则返回True", "curses.html#curses.has_key": "如果当前终端类型识别出具有该值的关键字，则获取关键值ch，并返回True", "curses.html#curses.halfdelay": "用于半延时模式，类似于Cbreak模式，因为用户键入的字符可立即用于程序", "curses.html#curses.init_color": "改变颜色的定义，取出要改变的颜色的数字，后面跟着三个RGB值（红色，绿色和蓝色成分的数量）", "curses.html#curses.init_pair": "更改颜色对的定义", "curses.html#curses.initscr": "初始化库", "curses.html#curses.is_term_resized": "如果resize_term()会修改窗口结构，则返回True否则返回False", "curses.html#curses.isendwin": "如果调用了endwin()（即，curses库已被初始化），则返回True", "curses.html#curses.keyname": "返回编号为k的密钥的名称", "curses.html#curses.killchar": "返回用户的当前行杀死字符", "curses.html#curses.longname": "返回一个字符串，其中包含描述当前终端的terminfo长名称字段", "curses.html#curses.meta": "如果是是1，则允许输入8位字符", "curses.html#curses.mouseinterval": "设置按下和释放事件之间可以经过的最大时间（以毫秒为单位），以便将它们识别为点击，并返回上一个间隔值", "curses.html#curses.mousemask": "设置要报告的鼠标事件，并返回一个元组（availmask， oldmask）", "curses.html#curses.napms": "Sleep for ms milliseconds", "curses.html#curses.newpad": "创建并返回指向具有给定行数和列数的新Pad数据结构的指针", "curses.html#curses.newwin": "返回一个新的窗口，其左上角位于（begin_y， begin_x），其高度/宽度为nlines < / T3> /  NCOLS  T4>", "curses.html#curses.nl": "进入换行模式", "curses.html#curses.nocbreak": "离开cbreak模式", "curses.html#curses.noecho": "留下回声模式", "curses.html#curses.nonl": "离开换行模式", "curses.html#curses.noqiflush": "当使用noqiflush()例程时，与INTR，QUIT和SUSP字符关联的输入和输出队列的正常刷新将不会完成", "curses.html#curses.noraw": "保持原始模式", "curses.html#curses.pair_content": "返回包含请求颜色对的颜色的元组（fg， bg）", "curses.html#curses.pair_number": "返回由属性值attr设置的颜色对的编号", "curses.html#curses.putp": "Equivalent to tputs(str, 1, putchar); emit the value of a specified terminfo capability for the current terminal", "curses.html#curses.qiflush": "如果flag为False，则效果与调用noqiflush()相同", "curses.html#curses.raw": "进入原始模式", "curses.html#curses.reset_prog_mode": "如之前由def_prog_mode()保存，将终端恢复到“编程”模式", "curses.html#curses.reset_shell_mode": "如以前由def_shell_mode()保存的，将终端恢复到“shell”模式", "curses.html#curses.resetty": "将终端模式的状态恢复到最后一次调用savetty()时的状态", "curses.html#curses.resize_term": "Backend function used by resizeterm(), performing most of the work; when resizing the windows, resize_term() blank-fills the areas that are extended", "curses.html#curses.resizeterm": "将标准窗口和当前窗口调整为指定尺寸，并调整由记录窗口尺寸的curses库（特别是SIGWINCH处理程序）使用的其他簿记数据", "curses.html#curses.savetty": "将终端模式的当前状态保存在缓冲区中，可由resetty()使用", "curses.html#curses.setsyx": "将虚拟屏幕光标设置为y，x", "curses.html#curses.setupterm": "初始化终端", "curses.html#curses.start_color": "如果程序员想要使用颜色，并且在任何其他颜色操作例程被调用之前必须被调用", "curses.html#curses.termattrs": "返回终端支持的所有视频属性的逻辑OR", "curses.html#curses.termname": "返回环境变量 TERM的值，截断为14个字符", "curses.html#curses.tigetflag": "返回与terminfo能力名称capname对应的布尔能力的值", "curses.html#curses.tigetnum": "返回与terminfo能力名称capname对应的数字能力的值", "curses.html#curses.tigetstr": "返回与terminfo能力名称capname对应的字符串能力的值", "curses.html#curses.tparm": "使用提供的参数实例化字符串str，其中str应该是从terminfo数据库获得的参数化字符串", "curses.html#curses.typeahead": "指定文件描述符fd用于键入检查", "curses.html#curses.unctrl": "返回一个字符串，它是字符ch的可打印表示", "curses.html#curses.ungetch": "按ch，下一个getch()将返回它", "curses.html#curses.update_lines_cols": "更新 LINES和 COLS", "curses.html#curses.unget_wch": "按ch，下一个get_wch()将返回它", "curses.html#curses.ungetmouse": "将KEY_MOUSE事件推入输入队列，将给定的状态数据与它关联", "curses.html#curses.use_env": "如果使用，应该在调用initscr()或newterm之前调用此函数", "curses.html#curses.use_default_colors": "允许在支持此功能的终端上使用颜色的默认值", "curses.html#curses.wrapper": "初始化curses并调用另一个可调用的对象，func，它应该是您的curses使用应用程序的其余部分", "curses.html#curses.textpad.rectangle": "绘制一个矩形", "curses.html#curses.ERR": "某些返回整数的curses例程（如getch()）会在失败时返回ERR", "curses.html#curses.OK": "某些返回整数的curses例程（如napms()）会在成功时返回OK", "curses.html#curses.version": "代表模块当前版本的字符串", "curses.panel.html#curses.panel.bottom_panel": "返回面板集中的底部面板", "curses.panel.html#curses.panel.new_panel": "返回面板对象，将其与给定窗口win关联", "curses.panel.html#curses.panel.top_panel": "返回面板集中的顶部面板", "curses.panel.html#curses.panel.update_panels": "在面板集中更改后更新虚拟屏幕", "datetime.html#datetime.MINYEAR": "date和datetime对象中允许的最小年份", "datetime.html#datetime.MAXYEAR": "date和datetime对象中允许的最大年份数", "dbm.html#dbm.whichdb": "此函数尝试猜测几个简单数据库模块中的哪一个可用 -  dbm", "dbm.html#dbm.open": "打开数据库文件文件并返回相应的对象", "dbm.html#dbm.gnu.open": "打开gdbm数据库并返回一个gdbm对象", "dbm.html#dbm.ndbm.open": "打开dbm数据库并返回ndbm对象", "dbm.html#dbm.dumb.open": "打开dumbdbm数据库并返回dumbdbm对象", "dbm.html#dbm.ndbm.library": "使用的ndbm实施库的名称", "decimal.html#decimal.getcontext": "返回活动线程的当前上下文", "decimal.html#decimal.setcontext": "将活动线程的当前上下文设置为c", "decimal.html#decimal.localcontext": "返回一个上下文管理器，它将活动线程的当前上下文设置为ctx的副本，并在退出with-statement时恢复前一个上下文", "decimal.html#decimal.HAVE_THREADS": "默认值是True", "decimal.html#decimal.ROUND_CEILING": "向Infinity展开", "decimal.html#decimal.ROUND_DOWN": "向零回合", "decimal.html#decimal.ROUND_FLOOR": "向-Infinity回合", "decimal.html#decimal.ROUND_HALF_DOWN": "将关系向最接近零的方向调整", "decimal.html#decimal.ROUND_HALF_EVEN": "以最接近的偶数整数将关系舍入到最近", "decimal.html#decimal.ROUND_HALF_UP": "离领带最近的距离为零", "decimal.html#decimal.ROUND_UP": "从零开始回合", "decimal.html#decimal.ROUND_05UP": "如果舍入到零后的最后一位数字为0或5，则从零开始舍去；否则向零回合", "difflib.html#difflib.context_diff": "比较a和b（字符串列表）；在上下文差异格式中返回Δ（生成Δ行的generator）", "difflib.html#difflib.get_close_matches": "返回一个最佳的&quot;足够好&quot;匹配列表", "difflib.html#difflib.ndiff": "比较（字符串列表）a和b；返回 Differ 风格的差异（一个生成差异行的 generator）", "difflib.html#difflib.restore": "返回两个序列生成一个三角洲之一", "difflib.html#difflib.unified_diff": "比较a和b（字符串列表）；以统一差分格式返回增量（generator生成增量线）", "difflib.html#difflib.diff_bytes": "使用dfunc比较a和b（字节对象列表）；以dfunc返回的格式生成一个delta行（也是字节）序列", "difflib.html#difflib.IS_LINE_JUNK": "返回 true 可忽略行", "difflib.html#difflib.IS_CHARACTER_JUNK": "返回 true 可忽略的字符", "dis.html#dis.code_info": "返回带有提供的函数，生成器，方法，源代码字符串或代码对象的详细代码对象信息的格式化多行字符串", "dis.html#dis.show_code": "将文件（或sys", "dis.html#dis.dis": "拆分x对象", "dis.html#dis.distb": "如果没有通过，则使用最后一个traceback来反汇编回栈顶层函数", "dis.html#dis.disassemble": "拆分代码对象，如果提供lasti，则指示最后一条指令", "dis.html#dis.get_instructions": "对提供的函数，方法，源代码字符串或代码对象中的指令返回一个迭代器", "dis.html#dis.findlinestarts": "这个生成器函数使用代码对象代码的co_firstlineno和co_lnotab属性来找到源代码中行开头的偏移", "dis.html#dis.findlabels": "检测作为跳转目标的代码对象代码中的所有偏移量，并返回这些偏移量的列表", "dis.html#dis.stack_effect": "计算opcode与参数oparg的堆栈效果", "dis.html#dis.Bytecode.codeobj": "编译的代码对象", "dis.html#dis.Bytecode.first_line": "代码对象的第一个源代码行（如果可用）", "dis.html#dis.Instruction.opcode": "操作的数字代码，对应于下面列出的操作码值和Opcode collections中的字节码值", "dis.html#dis.Instruction.opname": "操作的人类可读名称", "dis.html#dis.Instruction.arg": "操作的数字参数（如果有），否则为无", "dis.html#dis.Instruction.argval": "解析的arg值（如果已知），否则与arg相同", "dis.html#dis.Instruction.argrepr": "操作参数的可读描述", "dis.html#dis.Instruction.offset": "在字节码序列内的操作的开始索引", "dis.html#dis.Instruction.starts_line": "由此操作码开始的行（如果有），否则为无", "dis.html#dis.Instruction.is_jump_target": "True如果其他代码跳到此处，否则False", "dis.html#dis.opname": "操作名称序列，使用字节码可索引", "dis.html#dis.opmap": "将操作名称映射到字节码的字典", "dis.html#dis.cmp_op": "所有比较操作名称的顺序", "dis.html#dis.hasconst": "具有常量参数的字节码序列", "dis.html#dis.hasfree": "访问自由变量的字节码序列（请注意，在本上下文中的“自由”是指内部作用域引用的当前作用域中的名称或从此作用域引用的外部作用域中的名称", "dis.html#dis.hasname": "按名称访问属性的字节码序列", "dis.html#dis.hasjrel": "具有相对跳转目标的字节码序列", "dis.html#dis.hasjabs": "具有绝对跳转目标的字节码序列", "dis.html#dis.haslocal": "访问局部变量的字节码序列", "dis.html#dis.hascompare": "布尔运算的字节码序列", "doctest.html#doctest.register_optionflag": "用给定名称创建一个新选项标志，并返回新标志的整数值", "doctest.html#doctest.testfile": "除文件名以外的所有参数都是可选的，并应以关键字形式指定", "doctest.html#doctest.testmod": "所有参数都是可选的，除m以外的所有参数均应以关键字形式指定", "doctest.html#doctest.run_docstring_examples": "与对象f关联的测试示例；例如，f可以是字符串，模块，函数或类对象", "doctest.html#doctest.DocFileSuite": "将doctest测试从一个或多个文本文件转换为unittest", "doctest.html#doctest.DocTestSuite": "将模块的doctest测试转换为unittest", "doctest.html#doctest.set_unittest_reportflags": "设置要使用的doctest报告标志", "doctest.html#doctest.script_from_examples": "将带有示例的文本转换为脚本", "doctest.html#doctest.testsource": "将对象的doctest转换为脚本", "doctest.html#doctest.debug": "调试对象的doctests", "doctest.html#doctest.debug_src": "用字符串调试doctests", "doctest.html#doctest.DONT_ACCEPT_TRUE_FOR_1": "默认情况下，如果期望的输出块仅包含1，则包含1或True的实际输出块被认为是匹配的，对于0与False类似", "doctest.html#doctest.DONT_ACCEPT_BLANKLINE": "默认情况下，如果预期的输出块包含仅包含字符串<BLANKLINE>的行，那么该行将匹配实际输出中的空白行", "doctest.html#doctest.NORMALIZE_WHITESPACE": "指定时，所有空白（空格和换行符）都被视为相等", "doctest.html#doctest.ELLIPSIS": "指定时，预期输出中的省略号标记（", "doctest.html#doctest.IGNORE_EXCEPTION_DETAIL": "如果指定这个选项，那么当引发的异常的类型与期望的异常类型相同就可以通过的，不会检测异常的详细信息", "doctest.html#doctest.SKIP": "指定时，请不要运行该示例", "doctest.html#doctest.COMPARISON_FLAGS": "将上面的所有比较标志掩盖起来", "doctest.html#doctest.REPORT_UDIFF": "指定时，涉及多行预期和实际输出的故障将使用统一差异显示", "doctest.html#doctest.REPORT_CDIFF": "指定时，涉及多行预期输出和实际输出的故障将使用上下文差异显示", "doctest.html#doctest.REPORT_NDIFF": "When specified, differences are computed by difflib", "doctest.html#doctest.REPORT_ONLY_FIRST_FAILURE": "指定时，显示每个doctest中的第一个失败示例，但禁止所有其他示例的输出", "doctest.html#doctest.FAIL_FAST": "指定时，在第一个失败示例之后退出，不要尝试运行其余示例", "doctest.html#doctest.REPORTING_FLAGS": "将上面的所有报告标记掩盖起来", "ensurepip.html#ensurepip.version": "返回一个字符串，指定在引导环境时将安装的pip的捆绑版本", "ensurepip.html#ensurepip.bootstrap": "引导pip进入当前或指定的环境", "enum.html#enum.unique": "枚举类装饰器，确保只有一个名称绑定到任何一个值", "errno.html#errno.EPERM": "操作不允许", "errno.html#errno.ENOENT": "无此文件或目录", "errno.html#errno.ESRCH": "没有这样的过程", "errno.html#errno.EINTR": "中断系统调用", "errno.html#errno.EIO": "I / O错误", "errno.html#errno.ENXIO": "没有这样的设备或地址", "errno.html#errno.E2BIG": "精选列表过长", "errno.html#errno.ENOEXEC": "Exec格式错误", "errno.html#errno.EBADF": "错误的文件编号", "errno.html#errno.ECHILD": "没有子进程", "errno.html#errno.EAGAIN": "再试一次", "errno.html#errno.ENOMEM": "内存不足", "errno.html#errno.EACCES": "没有权限", "errno.html#errno.EFAULT": "地址错误", "errno.html#errno.ENOTBLK": "需要块设备", "errno.html#errno.EBUSY": "设备或资源繁忙", "errno.html#errno.EEXIST": "文件已存在", "errno.html#errno.EXDEV": "跨设备链接", "errno.html#errno.ENODEV": "没有这样的设备", "errno.html#errno.ENOTDIR": "不是目录", "errno.html#errno.EISDIR": "是一个目录", "errno.html#errno.EINVAL": "无效的论点", "errno.html#errno.ENFILE": "文件表溢出", "errno.html#errno.EMFILE": "打开的文件太多", "errno.html#errno.ENOTTY": "不是打字机", "errno.html#errno.ETXTBSY": "文本文件忙", "errno.html#errno.EFBIG": "文件过大", "errno.html#errno.ENOSPC": "设备上没有剩余空间", "errno.html#errno.ESPIPE": "非法寻求", "errno.html#errno.EROFS": "只读文件系统", "errno.html#errno.EMLINK": "链接过多", "errno.html#errno.EPIPE": "破碎的管道", "errno.html#errno.EDOM": "数学参数超出了func的域", "errno.html#errno.ERANGE": "数学结果不可表示", "errno.html#errno.EDEADLK": "将发生资源死锁", "errno.html#errno.ENAMETOOLONG": "文件名太长", "errno.html#errno.ENOLCK": "没有可用的记录锁", "errno.html#errno.ENOSYS": "功能未实现", "errno.html#errno.ENOTEMPTY": "目录不为空", "errno.html#errno.ELOOP": "遇到过多符号链接", "errno.html#errno.EWOULDBLOCK": "操作会阻塞", "errno.html#errno.ENOMSG": "没有所需类型的消息", "errno.html#errno.EIDRM": "标识符已删除", "errno.html#errno.ECHRNG": "通道号超出范围", "errno.html#errno.EL2NSYNC": "级别2不同步", "errno.html#errno.EL3HLT": "3级暂停", "errno.html#errno.EL3RST": "3级复位", "errno.html#errno.ELNRNG": "链接编号超出范围", "errno.html#errno.EUNATCH": "未附加协议驱动程序", "errno.html#errno.ENOCSI": "没有CSI结构可用", "errno.html#errno.EL2HLT": "2级暂停", "errno.html#errno.EBADE": "交换无效", "errno.html#errno.EBADR": "请求描述器无效", "errno.html#errno.EXFULL": "充分交换", "errno.html#errno.ENOANO": "无阳极", "errno.html#errno.EBADRQC": "请求代码无效", "errno.html#errno.EBADSLT": "插槽无效", "errno.html#errno.EDEADLOCK": "文件锁死锁错误", "errno.html#errno.EBFONT": "字体文件格式不正确", "errno.html#errno.ENOSTR": "设备不是流", "errno.html#errno.ENODATA": "无可用数据", "errno.html#errno.ETIME": "计时器已过期", "errno.html#errno.ENOSR": "流出资源", "errno.html#errno.ENONET": "机器不在网络上", "errno.html#errno.ENOPKG": "软件包未安装", "errno.html#errno.EREMOTE": "对象是远程的", "errno.html#errno.ENOLINK": "链接已断开", "errno.html#errno.EADV": "广告错误", "errno.html#errno.ESRMNT": "Srmount错误", "errno.html#errno.ECOMM": "发送时发生通信错误", "errno.html#errno.EPROTO": "协议错误", "errno.html#errno.EMULTIHOP": "多点尝试", "errno.html#errno.EDOTDOT": "RFS具体错误", "errno.html#errno.EBADMSG": "不是数据消息", "errno.html#errno.EOVERFLOW": "对于定义的数据类型，值太大", "errno.html#errno.ENOTUNIQ": "网络上的名称不唯一", "errno.html#errno.EBADFD": "文件描述器处于坏状态", "errno.html#errno.EREMCHG": "远程地址已更改", "errno.html#errno.ELIBACC": "无法访问所需的共享库", "errno.html#errno.ELIBBAD": "访问损坏的共享库", "errno.html#errno.ELIBSCN": "", "errno.html#errno.ELIBMAX": "正在尝试链接过多的共享库", "errno.html#errno.ELIBEXEC": "无法直接执行共享库", "errno.html#errno.EILSEQ": "非法字节序列", "errno.html#errno.ERESTART": "中断的系统调用应重新启动", "errno.html#errno.ESTRPIPE": "流管道错误", "errno.html#errno.EUSERS": "用户过多", "errno.html#errno.ENOTSOCK": "非套接字操作", "errno.html#errno.EDESTADDRREQ": "需要目标地址", "errno.html#errno.EMSGSIZE": "消息太长", "errno.html#errno.EPROTOTYPE": "协议错误类型的套接字", "errno.html#errno.ENOPROTOOPT": "协议不可用", "errno.html#errno.EPROTONOSUPPORT": "不支持协议", "errno.html#errno.ESOCKTNOSUPPORT": "不支持套接字类型", "errno.html#errno.EOPNOTSUPP": "传输端点上不支持操作", "errno.html#errno.EPFNOSUPPORT": "不支持协议系列", "errno.html#errno.EAFNOSUPPORT": "协议不支持的地址系列", "errno.html#errno.EADDRINUSE": "地址已在使用中", "errno.html#errno.EADDRNOTAVAIL": "无法分配请求的地址", "errno.html#errno.ENETDOWN": "网络已关闭", "errno.html#errno.ENETUNREACH": "网络不可达", "errno.html#errno.ENETRESET": "网络由于重置而断开连接", "errno.html#errno.ECONNABORTED": "软件导致连接中止", "errno.html#errno.ECONNRESET": "连接由对等体复位", "errno.html#errno.ENOBUFS": "没有可用的缓冲区空间", "errno.html#errno.EISCONN": "传输端点已连接", "errno.html#errno.ENOTCONN": "传输端点未连接", "errno.html#errno.ESHUTDOWN": "传输终端关闭后无法发送", "errno.html#errno.ETOOMANYREFS": "参数太多：无法拼接", "errno.html#errno.ETIMEDOUT": "连接超时", "errno.html#errno.ECONNREFUSED": "连接被拒绝", "errno.html#errno.EHOSTDOWN": "主机已关闭", "errno.html#errno.EHOSTUNREACH": "没有到主机的路由", "errno.html#errno.EALREADY": "操作已在进行中", "errno.html#errno.EINPROGRESS": "操作现在进行中", "errno.html#errno.ESTALE": "陈旧的NFS文件句柄", "errno.html#errno.EUCLEAN": "结构需要清洁", "errno.html#errno.ENOTNAM": "不是XENIX命名类型文件", "errno.html#errno.ENAVAIL": "没有XENIX信号量可用", "errno.html#errno.EISNAM": "是一个命名类型文件", "errno.html#errno.EREMOTEIO": "远程I / O错误", "errno.html#errno.EDQUOT": "超出配额", "faulthandler.html#faulthandler.dump_traceback": "将所有线程的追踪转储到文件中", "faulthandler.html#faulthandler.enable": "启用故障处理程序：安装SIGSEGV，SIGFPE，SIGABRT，SIGBUS和SIGILL如果all_threads为True，则为每个正在运行的线程产生追溯", "faulthandler.html#faulthandler.disable": "禁用故障处理程序：卸载由enable()安装的信号处理程序", "faulthandler.html#faulthandler.is_enabled": "检查故障处理程序是否已启用", "faulthandler.html#faulthandler.dump_traceback_later": "如果重复是True，则在超时超时秒或每个超时 ", "faulthandler.html#faulthandler.cancel_dump_traceback_later": "取消最后一次调用dump_traceback_later()", "faulthandler.html#faulthandler.register": "注册用户信号：为signum信号安装处理程序以转储所有线程或当前线程的跟踪（如果all_threads为False ，到文件", "faulthandler.html#faulthandler.unregister": "取消注册用户信号：卸载由register()安装的signum信号处理程序", "fcntl.html#fcntl.fcntl": "在文件描述器fd上执行操作cmd（也接受提供fileno()方法的文件对象）", "fcntl.html#fcntl.ioctl": "此函数与fcntl()函数相同，只是参数处理更复杂", "fcntl.html#fcntl.flock": "在文件描述器fd上执行锁操作操作（也接受提供fileno()方法的文件对象）", "fcntl.html#fcntl.lockf": "这本质上是fcntl()锁定调用的包装", "filecmp.html#filecmp.cmp": "比较名为f1和f2的文件，如果它们相等则返回True，否则返回False", "filecmp.html#filecmp.cmpfiles": "比较dir1和dir2两个目录中文件，文件的名字由common给出", "filecmp.html#filecmp.clear_cache": "清除filecmp缓存", "fileinput.html#fileinput.input": "创建FileInput类的实例", "fileinput.html#fileinput.filename": "返回当前正在读取的文件的名称", "fileinput.html#fileinput.fileno": "为当前文件返回整数“file描述器”", "fileinput.html#fileinput.lineno": "返回刚刚读取的行的累积行号", "fileinput.html#fileinput.filelineno": "返回当前文件中的行号", "fileinput.html#fileinput.isfirstline": "如果刚刚读取的行是其文件的第一行，则返回true，否则返回false", "fileinput.html#fileinput.isstdin": "如果最后一行从sys", "fileinput.html#fileinput.nextfile": "关闭当前文件，以便下一次迭代将从下一个文件读取第一行（如果有的话）；未从文件读取的行不会计入累积行计数", "fileinput.html#fileinput.close": "关闭序列", "fileinput.html#fileinput.hook_compressed": "Transparently opens files compressed with gzip and bzip2 (recognized by the extensions '", "fileinput.html#fileinput.hook_encoded": "返回使用open()打开每个文件的钩子，使用给定的编码读取文件", "fnmatch.html#fnmatch.fnmatch": "测试filename字符串是否匹配模式字符串，返回True或False", "fnmatch.html#fnmatch.fnmatchcase": "测试filename是否匹配模式，返回True或False；比较是区分大小写的", "fnmatch.html#fnmatch.filter": "返回与模式匹配的名称列表的子集", "fnmatch.html#fnmatch.translate": "返回转换为正则表达式的shell样式模式", "formatter.html#formatter.AS_IS": "可以在字体规范中使用的值传递给下面描述的push_font()方法，或作为任何其他push_property()方法的新值", "fpectl.html#fpectl.turnon_sigfpe": "打开SIGFPE的生成，并设置适当的信号处理程序", "fpectl.html#fpectl.turnoff_sigfpe": "重置缺省处理浮点异常", "fractions.html#fractions.gcd": "返回整数a和b的最大公约数", "ftplib.html#ftplib.all_errors": "FTP实例的方法可能由于FTP连接问题而引发的所有异常（作为元组）的集合（而不是调用者发出的编程错误）", "functions.html#abs": "返回一个数值的绝对值，参数可以是一个整数或浮点数", "functions.html#all": "如果iterable中所有的元素都为True，或iterable为空（empty），返回True", "functions.html#any": "如果iterable里任何一个元素为True，返回 True", "functions.html#ascii": "类似repr()，返回一个字符串，包含可打印的对象，但通过 repr() 返回的字符串中非 ASCII 字符，使用 \\x，\\u 或者\\U 进行转义", "functions.html#bin": "将整数转换为二进制字符串", "functions.html#callable": "如果该 object是可调用的，返回 True ,否则返回 False ", "functions.html#classmethod": "将 function 封装成类方法", "functions.html#compile": "将source编译成代码或AST对象", "functions.html#delattr": "这是setattr()的相对值", "functions.html#dir": "不带参数时, 返回当前局部作用域中名称的列表", "functions.html#divmod": "以两个（非复数）数字作为参数，并在使用整数除法时返回由它们的商和余数组成的一对数字", "functions.html#enumerate": "返回一个枚举对象", "functions.html#eval": "参数是一个字符串和可选的全局变量和局部变量", "functions.html#exec": "这个函数支持动态执行Python代码", "functions.html#filter": "用iterable中传入function后返回True的元素构造一个迭代器", "functions.html#format": "将值转换为“格式化”表示，由format_spec控制", "functions.html#getattr": "返回对象的命名属性的值", "functions.html#globals": "返回表示当前全局符号表的字典", "functions.html#hasattr": "参数是一个对象和一个字符串", "functions.html#hash": "注意", "functions.html#help": "调用内置的帮助系统", "functions.html#hex": "将整数转换为以“0x”为前缀的小写十六进制字符串，例如：", "functions.html#id": "返回一个对象的“身份”", "functions.html#input": "如果存在提示符参数，则将其写入标准输出而不带结尾换行符", "functions.html#isinstance": "如果object是clsaainfo的一个实例（或者是classinfo的直接、间接或虚拟子类的实例），那么则返回true", "functions.html#issubclass": "如果 class 是classinfo的子类(直接、 间接或 虚拟) 则返回 true ", "functions.html#iter": "返回一个迭代器对象", "functions.html#len": "返回对象的长度（项目数量）", "functions.html#locals": "更新和返回表示当前局部符号表的字典", "functions.html#map": "返回一个迭代器，对iterable的每个项应用function，并yield结果", "functions.html#max": "返回iterable中的最大项或两个或更多个参数中最大的项", "functions.html#min": "返回可迭代中的最小项或两个或更多个参数中的最小项", "functions.html#next": "通过调用__next__()方法从迭代器中检索下一个项目", "functions.html#oct": "将整数转换为八进制字符串", "functions.html#open": "打开 file 并返回一个相应的 文件对象", "functions.html#pow": "返回x的y次方; 如果提供z参数， 返回x 的y次方再除以z的余数 (计算效率比pow(x, y) % z更高)", "functions.html#print": "将object打印到文本流file，由sep分隔，尾部接end", "functions.html#repr": "返回一个包含对象可打印表示的字符串", "functions.html#reversed": "返回一个反向iterator", "functions.html#round": "返回number舍入到小数点后ndigits位的浮点值", "functions.html#setattr": "它与getattr()相对应", "functions.html#sorted": "依据iterable中的元素返回一个新的排好序的列表", "functions.html#staticmethod": "为函数返回一个静态方法", "functions.html#sum": "从左到右总计start和可迭代的项目并返回总数", "functions.html#super": "返回一个代理对象，它委托方法给父类或者type的同级类", "functions.html#vars": "返回一个模块、字典、类、实例或者其它任何一个具有__dict__属性的对象的__dict__属性", "functions.html#zip": "创建一个迭代器，聚合来自每个迭代器的元素", "functions.html#__import__": "注意", "functools.html#functools.cmp_to_key": "将旧风格的比较函数转换为key函数", "functools.html#functools.lru_cache": "装饰器用一个memoizing可调用函数来包装一个函数，它可以保存最近的maxsize个调用", "functools.html#functools.total_ordering": "给定一个定义了一个或多个富比较排序方法的类，该方法提供了一个类装饰器", "functools.html#functools.partial": "返回一个新的partial对象，该对象在调用时的行为将类似采用位置参数args和关键字参数keywords对func的调用", "functools.html#functools.reduce": "将带有两个参数的 function 从左到右累积应用到 sequence 的元素中，以将该序列规约为单个值", "functools.html#functools.singledispatch": "将函数转换为single-dispatch generic function", "functools.html#functools.update_wrapper": "更新一个 wrapper 函数让其更像一个 wrapped 函数", "functools.html#functools.wraps": "这是一个方便的函数，用于在定义包装器函数时调用update_wrapper()作为函数装饰器", "gc.html#gc.enable": "启用自动垃圾容器", "gc.html#gc.disable": "禁用自动垃圾容器", "gc.html#gc.isenabled": "如果启用了自动容器，则返回true", "gc.html#gc.collect": "没有参数，运行一个完整的容器", "gc.html#gc.set_debug": "设置垃圾容器调试标志", "gc.html#gc.get_debug": "返回当前设置的调试标志", "gc.html#gc.get_objects": "返回收集器跟踪的所有对象的列表，不包括返回的列表", "gc.html#gc.get_stats": "从解释器启动后，返回包含容器统计信息的三个每代字典的列表", "gc.html#gc.set_threshold": "设置垃圾容器阈值（容器频率）", "gc.html#gc.get_count": "将当前容器计数返回为（count0， count1， count2）的元组", "gc.html#gc.get_threshold": "将当前容器阈值作为（threshold0， threshold1， threshold2）的元组返回", "gc.html#gc.get_referrers": "返回直接引用任何obj的对象列表", "gc.html#gc.get_referents": "返回由任何参数直接引用的对象列表", "gc.html#gc.is_tracked": "如果对象当前由垃圾收集器跟踪，则返回True，否则返回False", "gc.html#gc.garbage": "收集器发现无法访问但无法释放的对象列表（无法收集的对象）", "gc.html#gc.callbacks": "将由容器之前和之后的垃圾收集器调用的回调列表", "gc.html#gc.DEBUG_STATS": "容器期间打印统计信息", "gc.html#gc.DEBUG_COLLECTABLE": "打印有关可找到的可收集对象的信息", "gc.html#gc.DEBUG_UNCOLLECTABLE": "打印找到的不可收集对象的信息（收集器不能访问但不能释放的对象）", "gc.html#gc.DEBUG_SAVEALL": "设置时，找到的所有无法访问的对象将被附加到垃圾，而不是被释放", "gc.html#gc.DEBUG_LEAK": "收集器打印有关泄漏程序的信息（等于DEBUG_COLLECTABLE | DEBUG_UNCOLLECTABLE |  DEBUG_SAVEALL）", "getopt.html#getopt.getopt": "解析命令行选项和参数列表", "getopt.html#getopt.gnu_getopt": "此函数的工作原理类似于getopt()，除了默认情况下使用GNU样式扫描模式", "getpass.html#getpass.getpass": "提示用户输入密码，而不回显", "getpass.html#getpass.getuser": "返回用户的“登录名”", "gettext.html#gettext.bindtextdomain": "将域绑定到语言环境目录localedir", "gettext.html#gettext.bind_textdomain_codeset": "将域绑定到代码集，更改由gettext()函数系列返回的字符串的编码", "gettext.html#gettext.textdomain": "更改或查询当前全局域", "gettext.html#gettext.gettext": "根据当前的全局域，语言和区域设置目录返回消息的本地化转换", "gettext.html#gettext.lgettext": "等同于gettext()，但是如果未使用bind_textdomain_codeset()显式设置其他编码，则会在首选系统编码中返回翻译", "gettext.html#gettext.dgettext": "像gettext()，但查看指定的域中的消息", "gettext.html#gettext.ldgettext": "等同于dgettext()，但如果未使用bind_textdomain_codeset()显式设置其他编码，则会在首选系统编码中返回翻译", "gettext.html#gettext.ngettext": "像gettext()，但是考虑复数形式", "gettext.html#gettext.lngettext": "等同于ngettext()，但是如果未使用bind_textdomain_codeset()显式设置其他编码，则会在首选系统编码中返回翻译", "gettext.html#gettext.dngettext": "像ngettext()，但查看指定的域中的消息", "gettext.html#gettext.ldngettext": "等同于dngettext()，但如果未使用bind_textdomain_codeset()显式设置其他编码，则会在首选系统编码中返回翻译", "gettext.html#gettext.find": "此函数实现标准的", "gettext.html#gettext.translation": "返回基于域，localedir和语言的Translations实例，这些实例首先传递给find()获取关联的", "gettext.html#gettext.install": "This installs the function _() in Python’s builtins namespace, based on domain, localedir, and codeset which are passed to the function translation()", "glob.html#glob.glob": "返回一个与pathname匹配的路径组成的list，该list可能为空", "glob.html#glob.iglob": "返回一个 iterator 迭代器，它产生与 glob() 相同的结果，但同时不会存储它们", "glob.html#glob.escape": "转义所有的特殊字符（'？'，'*'和'[']）", "grp.html#grp.getgrgid": "返回给定数字组ID的组数据库条目", "grp.html#grp.getgrnam": "返回给定组名的组数据库条目", "grp.html#grp.getgrall": "以任意顺序返回所有可用组条目的列表", "gzip.html#gzip.open": "在二进制或文本模式下打开gzip压缩文件，返回file object", "gzip.html#gzip.compress": "压缩 data ，返回包含压缩数据的bytes 对象", "gzip.html#gzip.decompress": "解压缩 data ，返回包含未压缩数据的bytes 对象", "hashlib.html#hashlib.new": "是一个通用构造函数，它接受所需算法的字符串名称作为其第一个参数", "hashlib.html#hashlib.pbkdf2_hmac": "该函数提供 PKCS #5 基于密码的密钥派生函数 2", "hashlib.html#hashlib.algorithms_guaranteed": "包含保证在所有平台上此模块支持的哈希算法的名称的集合", "hashlib.html#hashlib.algorithms_available": "一组包含在运行的Python解释器中可用的哈希算法的名称", "hashlib.html#hashlib.hash.digest_size": "以字节为单位的哈希结果的大小", "hashlib.html#hashlib.hash.block_size": "以字节为单位的哈希算法的内部块的大小", "heapq.html#heapq.heappush": "将值item推到heap上，保持堆不变", "heapq.html#heapq.heappop": "从heap中弹出并返回最小的项，保持堆不变", "heapq.html#heapq.heappushpop": "在堆上按项，然后弹出并返回堆中的最小项", "heapq.html#heapq.heapify": "在线性时间内，将列表x放入堆中", "heapq.html#heapq.heapreplace": "从堆中弹出并返回最小的项，并推送新的项", "heapq.html#heapq.merge": "将多个排序的输入合并到单个排序的输出（例如，合并来自多个日志文件的带时间戳的条目）", "heapq.html#heapq.nlargest": "返回可迭代定义的数据集中n最大元素的列表", "heapq.html#heapq.nsmallest": "返回可迭代定义的数据集中n最小元素的列表", "hmac.html#hmac.new": "返回一个新的hmac对象", "hmac.html#hmac.compare_digest": "返回a == b", "html.entities.html#html.entities.entitydefs": "将XHTML 1", "html.entities.html#html.entities.name2codepoint": "将HTML实体名称映射到Unicode代码点的字典", "html.entities.html#html.entities.codepoint2name": "将Unicode代码点映射到HTML实体名称的字典", "html.html#html.escape": "转换字符串s中的&、<和>字符为HTML安全的序列", "html.html#html.unescape": "转换字符串s中所有命名和数字字符引用（例如&gt;、&#62;、&x3e;）为对应的Unicode字符", "http.client.html#http.client.HTTP_PORT": "HTTP协议的默认端口值（总为 80）", "http.client.html#http.client.HTTPS_PORT": "HTTPS协议的默认端口值（总为 443）", "http.client.html#http.client.responses": "该字典类匹配HTTP1", "imaplib.html#imaplib.Internaldate2tuple": "解析IMAP4 INTERNALDATE字符串并返回相应的本地时间", "imaplib.html#imaplib.Int2AP": "使用集合[A ", "imaplib.html#imaplib.ParseFlags": "将IMAP4 FLAGS响应转换为单个标志的元组", "imaplib.html#imaplib.Time2Internaldate": "将date_time转换为IMAP4 INTERNALDATE表示形式", "imghdr.html#imghdr.what": "测试由filename命名的文件中包含的图像数据，并返回描述图像类型的字符串", "imghdr.html#imghdr.tests": "执行单独测试的函数列表", "imp.html#imp.get_magic": "返回用于识别字节编译代码文件（", "imp.html#imp.get_suffixes": "返回一个3元素元组的列表，每个元组描述特定类型的模块", "imp.html#imp.find_module": "尝试找到名称", "imp.html#imp.load_module": "加载以前由find_module()发现的模块（或通过其他方式进行的搜索，产生兼容的结果）", "imp.html#imp.new_module": "返回一个名为name的新模块对象", "imp.html#imp.reload": "重新载入先前导入的模块", "imp.html#imp.cache_from_source": "将 PEP 3147路径返回到与源路径相关联的字节编译文件", "imp.html#imp.source_from_cache": "给定路径到 PEP 3147文件名，返回关联的源代码文件路径", "imp.html#imp.get_tag": "返回与get_magic()返回的Python的幻数的版本匹配的 PEP 3147魔术标记字符串", "imp.html#imp.lock_held": "如果全局导入锁定当前持有，则返回True，否则False", "imp.html#imp.acquire_lock": "获取当前线程的解释器的全局导入锁", "imp.html#imp.release_lock": "释放解释器的全局导入锁定", "imp.html#imp.PY_SOURCE": "找到该模块作为源文件", "imp.html#imp.PY_COMPILED": "该模块被找到为编译代码对象文件", "imp.html#imp.C_EXTENSION": "该模块被找到为可动态加载的共享库", "imp.html#imp.PKG_DIRECTORY": "该模块被找到作为包目录", "imp.html#imp.C_BUILTIN": "该模块被找到作为内建模块", "imp.html#imp.PY_FROZEN": "该模块被发现为冻结模块", "importlib.html#importlib.__import__": "内置__import__()函数的实现", "importlib.html#importlib.import_module": "导入一个模块", "importlib.html#importlib.find_loader": "查找模块的加载程序，可选地在指定的路径中", "importlib.html#importlib.invalidate_caches": "使存储在sys", "importlib.html#importlib.reload": "重新载入先前导入的 module", "importlib.html#importlib.machinery.all_suffixes": "返回表示由标准导入机制识别的模块的所有文件后缀的字符串组合列表", "importlib.html#importlib.util.cache_from_source": "Return the PEP 3147/PEP 488 path to the byte-compiled file associated with the source path", "importlib.html#importlib.util.source_from_cache": "将路径指定给 PEP 3147文件名，返回关联的源代码文件路径", "importlib.html#importlib.util.decode_source": "解码表示源代码的给定字节，并将其作为带有通用换行符的字符串返回（如importlib", "importlib.html#importlib.util.resolve_name": "将相对模块名称解析为绝对模块名称", "importlib.html#importlib.util.find_spec": "查找模块的spec，可选地相对于指定的包名称", "importlib.html#importlib.util.module_from_spec": "根据spec和spec", "importlib.html#importlib.util.module_for_loader": "用于importlib", "importlib.html#importlib.util.set_loader": "用于importlib", "importlib.html#importlib.util.set_package": "用于importlib", "importlib.html#importlib.util.spec_from_loader": "基于加载程序创建ModuleSpec实例的工厂函数", "importlib.html#importlib.util.spec_from_file_location": "基于文件路径创建ModuleSpec实例的工厂函数", "inspect.html#inspect.getmembers": "返回按名称排序的（name, value)列表中的所有成员对象", "inspect.html#inspect.getmoduleinfo": "返回一个命名元组 ModuleInfo（name， suffix， mode， module_type）描述Python如何解释由path标识的文件是模块，或者返回None，如果没被标识为模块", "inspect.html#inspect.getmodulename": "返回由文件path命名的模块的名称，不包括封装包的名称", "inspect.html#inspect.ismodule": "如果对象是模块，则返回true", "inspect.html#inspect.isclass": "如果对象是一个类，无论是内置的还是用Python代码创建的，则返回true", "inspect.html#inspect.ismethod": "如果对象是用Python编写的绑定方法，则返回true", "inspect.html#inspect.isfunction": "如果对象是一个Python函数（包含由lambda表达式创建的函数），则返回true", "inspect.html#inspect.isgeneratorfunction": "如果对象是Python生成器函数，则返回true", "inspect.html#inspect.isgenerator": "如果对象是一个生成器，则返回true", "inspect.html#inspect.iscoroutinefunction": "如果对象是coroutine function（用async def语法定义的函数），则返回true", "inspect.html#inspect.iscoroutine": "如果对象是由async def函数创建的coroutine，则返回true", "inspect.html#inspect.isawaitable": "如果对象可以在await表达式中使用，则返回true", "inspect.html#inspect.istraceback": "如果对象是回溯，则返回true", "inspect.html#inspect.isframe": "如果对象是一个框架，则返回true", "inspect.html#inspect.iscode": "如果对象是代码，则返回true", "inspect.html#inspect.isbuiltin": "如果对象是内置函数或绑定的内置方法，则返回true", "inspect.html#inspect.isroutine": "如果对象是用户定义的或内置的函数或方法，则返回true", "inspect.html#inspect.isabstract": "如果对象是抽象基类，则返回true", "inspect.html#inspect.ismethoddescriptor": "如果对象是方法描述符，则返回true，但如果ismethod()，isclass()，isfunction()或isbuiltin()是真的", "inspect.html#inspect.isdatadescriptor": "如果对象是数据描述符，则返回true", "inspect.html#inspect.isgetsetdescriptor": "如果对象是getset描述符，则返回true", "inspect.html#inspect.ismemberdescriptor": "如果对象是成员描述符，则返回true", "inspect.html#inspect.getdoc": "获取一个对象的文档字符串，用cleandoc()清理", "inspect.html#inspect.getcomments": "在单个字符串中返回紧接在对象源代码之前（对于类，函数或方法）或Python源文件顶部（如果对象是模块）的任何注释行", "inspect.html#inspect.getfile": "返回定义了对象的（文本或二进制）文件的名称", "inspect.html#inspect.getmodule": "尝试猜测某个对象是在哪个模块中定义的", "inspect.html#inspect.getsourcefile": "返回定义了对象的Python源文件的名称", "inspect.html#inspect.getsourcelines": "返回一个对象的源代码行和起始行号的列表", "inspect.html#inspect.getsource": "返回一个对象的源代码文本", "inspect.html#inspect.cleandoc": "清除缩排以排列代码块的文档字符串中的缩进", "inspect.html#inspect.signature": "为给定的callable返回一个Signature对象：", "inspect.html#inspect.getclasstree": "将给定的类列表排列成嵌套列表的层次结构", "inspect.html#inspect.getargspec": "获取Python函数参数的名称和默认值", "inspect.html#inspect.getfullargspec": "获取Python函数参数的名称和默认值", "inspect.html#inspect.getargvalues": "获取有关传递到特定框架的参数的信息", "inspect.html#inspect.formatargspec": "根据getargspec()或getfullargspec()返回的值格式化漂亮的参数规范", "inspect.html#inspect.formatargvalues": "根据getargvalues()返回的四个值格式化漂亮的参数规范", "inspect.html#inspect.getmro": "以方法解析顺序返回cls基类的元组，包括cls", "inspect.html#inspect.getcallargs": "将args和kwds绑定到Python函数或方法func的参数名称，就好像它们是用它们调用的一样", "inspect.html#inspect.getclosurevars": "获取Python函数或方法func中的外部名称引用到其当前值的映射", "inspect.html#inspect.unwrap": "获取由func包装的对象", "inspect.html#inspect.getframeinfo": "获取关于帧或追溯对象的信息", "inspect.html#inspect.getouterframes": "获取一个帧和所有外部帧的帧记录列表", "inspect.html#inspect.getinnerframes": "获取追踪帧和所有内部帧的帧记录列表", "inspect.html#inspect.currentframe": "返回当前调用者的堆栈框架的框架对象", "inspect.html#inspect.stack": "返回调用者堆栈的帧记录列表", "inspect.html#inspect.trace": "返回当前帧与当前正在处理异常的帧之间的堆栈的帧记录列表", "inspect.html#inspect.getattr_static": "通过描述符协议，__getattr__()或__getattribute__()检索属性而不触发动态查找", "inspect.html#inspect.getgeneratorstate": "获取生成器迭代器的当前状态", "inspect.html#inspect.getcoroutinestate": "获取协程对象的当前状态", "inspect.html#inspect.getgeneratorlocals": "获取generator中的实时局部变量映射到它们的当前值", "inspect.html#inspect.getcoroutinelocals": "这个函数类似于getgeneratorlocals()，但是对由async def函数创建的协程对象起作用", "io.html#io.open": "这是内置open()函数的别名", "io.html#io.DEFAULT_BUFFER_SIZE": "包含由模块的缓冲I / O类使用的默认缓冲区大小的int", "ipaddress.html#ipaddress.ip_address": "根据作为参数传递的IP地址，返回IPv4Address或IPv6Address对象", "ipaddress.html#ipaddress.ip_network": "根据作为参数传递的IP地址，返回IPv4Network或IPv6Network对象", "ipaddress.html#ipaddress.ip_interface": "根据作为参数传递的IP地址，返回IPv4Interface或IPv6Interface对象", "ipaddress.html#ipaddress.v4_int_to_packed": "将地址表示为网络（big-endian）顺序中的4个打包字节", "ipaddress.html#ipaddress.v6_int_to_packed": "将地址表示为网络（big-endian）顺序中的16个打包字节", "ipaddress.html#ipaddress.summarize_address_range": "返回给定第一个和最后一个IP地址的汇总网络范围的迭代器", "ipaddress.html#ipaddress.collapse_addresses": "返回折叠的IPv4Network或IPv6Network对象的迭代器", "ipaddress.html#ipaddress.get_mixed_type_key": "返回适用于在网络和地址之间排序的键", "itertools.html#itertools.accumulate": "创建的迭代对象返回被计算的sums值或者其它二元函数的结果(通过指定func参数)", "itertools.html#itertools.chain": "创建一个迭代器，从第一个迭代器返回元素，直到它耗尽，然后继续下一个迭代器，直到所有的迭代器都用尽", "itertools.html#itertools.combinations": "从输入可迭代返回r个元素的长度子序列", "itertools.html#itertools.combinations_with_replacement": "从输入可迭代返回元素的r长度子序列，允许单个元素重复一次以上", "itertools.html#itertools.compress": "创建一个迭代器，用于过滤数据中的元素，只返回在选择器中具有对应元素的元素，其计算结果为True", "itertools.html#itertools.count": "使迭代器以数字开始开始返回均匀间隔的值", "itertools.html#itertools.cycle": "使迭代器从可迭代器返回元素并保存每个元素的副本", "itertools.html#itertools.dropwhile": "创建一个迭代器，只要谓词为真，就从迭代中删除元素；之后，返回每个元素", "itertools.html#itertools.filterfalse": "创建一个迭代器，过滤可迭代元素，只返回谓词为False的元素", "itertools.html#itertools.groupby": "创建一个迭代器，从可迭代返回连续的键和组", "itertools.html#itertools.islice": "让一个迭代器从它返回选定的元素", "itertools.html#itertools.permutations": "返回可迭代中的元素的连续r长度排列", "itertools.html#itertools.product": "输入迭代的笛卡尔乘积", "itertools.html#itertools.repeat": "创建一个反复返回对象的迭代器", "itertools.html#itertools.starmap": "创建一个迭代器，使用从可迭代获得的参数计算函数", "itertools.html#itertools.takewhile": "创建一个迭代器，只要谓词为真，它就返回可迭代的元素", "itertools.html#itertools.tee": "从单个可迭代中返回n独立迭代器", "itertools.html#itertools.zip_longest": "创建一个迭代器，聚合来自每个迭代器的元素", "json.html#json.dump": "将obj序列化为fp（a ", "json.html#json.dumps": "使用此conversion table将obj序列化为JSON格式的str", "json.html#json.load": "使用 这个转换表 将 fp (一个包含 JSON 文档并支持 ", "json.html#json.loads": "使用此conversion table将包含JSON文档的s（a str实例）解压缩为Python对象", "keyword.html#keyword.iskeyword": "如果 s 是一个 Python 关键字则返回True", "keyword.html#keyword.kwlist": "包含定义为解释器的所有关键字的序列", "linecache.html#linecache.getline": "从名为filename的文件中获取行lineno", "linecache.html#linecache.clearcache": "清除缓存", "linecache.html#linecache.checkcache": "检查缓存的有效性", "linecache.html#linecache.lazycache": "捕获有关非基于文件的模块的足够详细信息，以允许稍后通过getline()获取其行，即使module_globals在后面的调用中为None", "locale.html#locale.setlocale": "如果给定locale且None，setlocale()修改类别的区域设置", "locale.html#locale.localeconv": "将本地约定的数据库作为字典返回", "locale.html#locale.nl_langinfo": "将一些特定于语言环境的信息作为字符串返回", "locale.html#locale.getdefaultlocale": "尝试确定默认语言环境设置，并以（语言 代码， 编码） ", "locale.html#locale.getlocale": "将指定语言代码类别的当前设置作为包含语言代码，编码的序列返回", "locale.html#locale.getpreferredencoding": "根据用户偏好返回用于文本数据的编码", "locale.html#locale.normalize": "返回给定语言环境名称的标准化语言环境代码", "locale.html#locale.resetlocale": "将类别的区域设置设置为默认设置", "locale.html#locale.strcoll": "根据当前LC_COLLATE设置比较两个字符串", "locale.html#locale.strxfrm": "将字符串转换为可在区域设置感知比较中使用的字符串", "locale.html#locale.format": "根据当前的LC_NUMERIC设置格式化数字val", "locale.html#locale.format_string": "按格式 ％ val处理格式说明符，但会考虑当前的区域设置", "locale.html#locale.currency": "根据当前的LC_MONETARY设置格式化数字val", "locale.html#locale.str": "使用与内建函数str(float)相同的格式格式化浮点数，但会考虑小数点", "locale.html#locale.delocalize": "在LC_NUMERIC设置后，将字符串转换为规范化的数字字符串", "locale.html#locale.atof": "将字符串转换为浮点数，紧跟LC_NUMERIC设置", "locale.html#locale.atoi": "将字符串转换为整数，遵循LC_NUMERIC约定", "locale.html#locale.CODESET": "获取一个字符串，其中包含所选语言环境中使用的字符编码的名称", "locale.html#locale.D_T_FMT": "获取可用作time", "locale.html#locale.D_FMT": "获取可用作time", "locale.html#locale.T_FMT": "获取可用作time", "locale.html#locale.T_FMT_AMPM": "获取time", "locale.html#locale.RADIXCHAR": "获取基数字符（小数点，十进制逗号等））", "locale.html#locale.THOUSEP": "获取数千（三位数的组）的分隔符", "locale.html#locale.YESEXPR": "获取可以与正则表达式函数一起使用的正则表达式，以识别对是/否问题的肯定响应", "locale.html#locale.NOEXPR": "获取可以与regex（3）函数一起使用的正则表达式来识别对是/否问题的否定响应", "locale.html#locale.CRNCYSTR": "获取货币符号，如果符号应出现在值前面，则以“ - ”开头，如果符号应出现在值后面，则为“+”，如果符号应替换基数字符，则为“", "locale.html#locale.ERA": "获取表示当前语言环境中使用的时代的字符串", "locale.html#locale.ERA_D_T_FMT": "获取time", "locale.html#locale.ERA_D_FMT": "获取time", "locale.html#locale.ERA_T_FMT": "获取time", "locale.html#locale.ALT_DIGITS": "获取用于表示值0到99的最多100个值的表示", "locale.html#locale.LC_CTYPE": "字符类型函数的区域设置类别", "locale.html#locale.LC_COLLATE": "用于排序字符串的区域设置类别", "locale.html#locale.LC_TIME": "时间格式化的区域设置类别", "locale.html#locale.LC_MONETARY": "货币值格式化的区域设置类别", "locale.html#locale.LC_MESSAGES": "消息显示的区域设置类别", "locale.html#locale.LC_NUMERIC": "格式化数字的区域设置类别", "locale.html#locale.LC_ALL": "所有区域设置的组合", "locale.html#locale.CHAR_MAX": "这是用于localeconv()返回的不同值的符号常量", "logging.config.html#logging.config.dictConfig": "Takes the logging configuration from a dictionary", "logging.config.html#logging.config.fileConfig": "从configparser -format文件读取日志记录配置", "logging.config.html#logging.config.listen": "在指定的端口起一个socket服务器，以监听新的配置", "logging.config.html#logging.config.stopListening": "停止listen()返回的服务器的监听", "logging.html#logging.getLogger": "返回具有指定名称的记录器，如果名称为无，则返回一个记录器，它是层次结构的根记录器", "logging.html#logging.getLoggerClass": "Return either the standard Logger class, or the last class passed to setLoggerClass()", "logging.html#logging.getLogRecordFactory": "Return a callable which is used to create a LogRecord", "logging.html#logging.debug": "Logs a message with level DEBUG on the root logger", "logging.html#logging.info": "Logs a message with level INFO on the root logger", "logging.html#logging.warning": "Logs a message with level WARNING on the root logger", "logging.html#logging.error": "Logs a message with level ERROR on the root logger", "logging.html#logging.critical": "Logs a message with level CRITICAL on the root logger", "logging.html#logging.exception": "Logs a message with level ERROR on the root logger", "logging.html#logging.log": "Logs a message with level level on the root logger", "logging.html#logging.disable": "Provides an overriding level lvl for all loggers which takes precedence over the logger’s own level", "logging.html#logging.addLevelName": "Associates level lvl with text levelName in an internal dictionary, which is used to map numeric levels to a textual representation, for example when a Formatter formats a message", "logging.html#logging.getLevelName": "Returns the textual representation of logging level lvl", "logging.html#logging.makeLogRecord": "Creates and returns a new LogRecord instance whose attributes are defined by attrdict", "logging.html#logging.basicConfig": "Does basic configuration for the logging system by creating a StreamHandler with a default Formatter and adding it to the root logger", "logging.html#logging.shutdown": "Informs the logging system to perform an orderly shutdown by flushing and closing all handlers", "logging.html#logging.setLoggerClass": "Tells the logging system to use the class klass when instantiating a logger", "logging.html#logging.setLogRecordFactory": "Set a callable which is used to create a LogRecord", "logging.html#logging.captureWarnings": "This function is used to turn the capture of warnings by logging on and off", "lzma.html#lzma.open": "以二进制或文本模式打开LZMA压缩文件，返回file object", "lzma.html#lzma.compress": "压缩数据（a bytes对象），将压缩数据作为bytes对象返回", "lzma.html#lzma.decompress": "解压缩数据（a bytes对象），将未压缩数据作为bytes对象返回", "lzma.html#lzma.is_check_supported": "如果在此系统上支持给定的完整性检查，则返回true", "mailcap.html#mailcap.findmatch": "返回一个2元组；第一个元素是包含要执行的命令行的字符串（可以传递到os", "mailcap.html#mailcap.getcaps": "返回将MIME类型映射到mailcap文件条目列表的字典", "marshal.html#marshal.dump": "在打开的文件上写入值", "marshal.html#marshal.load": "从打开的文件中读取一个值并返回", "marshal.html#marshal.dumps": "返回dump（value， 文件）将写入文件的字符串", "marshal.html#marshal.loads": "将字符串转换为值", "marshal.html#marshal.version": "表示模块使用的格式", "math.html#math.ceil": "Return the ceiling of x, 大于等于 x 的最小整数", "math.html#math.copysign": "返回x的绝对值大小和y的符号", "math.html#math.fabs": "返回x的绝对值", "math.html#math.factorial": "返回x的阶乘", "math.html#math.floor": "Return the floor of x, 小于等于 x的最大整数", "math.html#math.fmod": "返回由平台C库定义的fmod（x， y）", "math.html#math.frexp": "将x的尾数和指数作为对(m,  e)返回", "math.html#math.fsum": "在可迭代中返回值的准确浮动点总和", "math.html#math.gcd": "返回整数a和b的最大公约数", "math.html#math.isclose": "如果a和b的值彼此接近，则返回True, 反之则False", "math.html#math.isfinite": "如果x既不是无穷大也不是NaN，则返回True，否则返回False", "math.html#math.isinf": "如果x是正或负无穷大，则返回True，否则返回False", "math.html#math.isnan": "如果x是NaN（不是数字），则返回True，否则返回False", "math.html#math.ldexp": "返回x * （2 ** i）", "math.html#math.modf": "返回x的小数和整数部分", "math.html#math.trunc": "将Real值x返回到Integral（通常为整数）", "math.html#math.exp": "返回 e**x （e的x幂方）", "math.html#math.expm1": "返回e ** x  -  1", "math.html#math.log": "具有一个参数，返回的x （以e） 的自然对数", "math.html#math.log1p": "返回1 + x （底数e） 的自然对数", "math.html#math.log2": "返回x的基2对数", "math.html#math.log10": "返回x的对数", "math.html#math.pow": "返回x的y次幂", "math.html#math.sqrt": "返回 x 的平方根", "math.html#math.acos": "返回以弧度表示的角的x，余弦", "math.html#math.asin": "返回以弧度表示的正弦值的x", "math.html#math.atan": "返回反正切值的x，以弧度为单位", "math.html#math.atan2": "以弧度返回atan（y / x）", "math.html#math.cos": "返回x弧度的余弦值", "math.html#math.hypot": "返回欧氏方程，sqrt（x * x + y * y）", "math.html#math.sin": "返回x弧度的正弦值", "math.html#math.tan": "返回x弧度的正切值", "math.html#math.degrees": "将角度x从弧度转换为度", "math.html#math.radians": "将角度x从度转换为弧度", "math.html#math.acosh": "返回x的反双曲余弦值", "math.html#math.asinh": "返回x的反双曲正弦值", "math.html#math.atanh": "返回x的反双曲正切值", "math.html#math.cosh": "返回x的双曲余弦值", "math.html#math.sinh": "返回x的双曲正弦值", "math.html#math.tanh": "返回x的双曲正切值", "math.html#math.erf": "在x返回错误函数", "math.html#math.erfc": "返回在x的余误差函数", "math.html#math.gamma": "返回 x 的 Gamma function （伽马函数）", "math.html#math.lgamma": "返回伽玛函数在x的绝对值的自然对数", "math.html#math.pi": "数学常量 π = 3", "math.html#math.e": "数学常数 e = 2", "math.html#math.inf": "浮点正无穷大", "math.html#math.nan": "浮点数“不是数字”（NaN）值", "mimetypes.html#mimetypes.guess_type": "根据文件名或URL（由url给出）猜测文件类型", "mimetypes.html#mimetypes.guess_all_extensions": "根据由类型给出的MIME类型猜测文件的扩展名", "mimetypes.html#mimetypes.guess_extension": "根据由类型给出的MIME类型猜测文件的扩展名", "mimetypes.html#mimetypes.init": "初始化内部数据结构", "mimetypes.html#mimetypes.read_mime_types": "加载文件filename中给出的类型映射（如果存在）", "mimetypes.html#mimetypes.add_type": "将MIME类型类型的映射添加到扩展ext", "mimetypes.html#mimetypes.inited": "指示全局数据结构是否已被初始化的标志", "mimetypes.html#mimetypes.knownfiles": "通常安装的类型映射文件名列表", "mimetypes.html#mimetypes.suffix_map": "字典映射后缀到后缀", "mimetypes.html#mimetypes.encodings_map": "将文件扩展名映射到编码类型", "mimetypes.html#mimetypes.types_map": "字典映射MIME类型的文件扩展名", "mimetypes.html#mimetypes.common_types": "", "modulefinder.html#modulefinder.AddPackagePath": "记录在指定的路径中可以找到名为pkg_name的包", "modulefinder.html#modulefinder.ReplacePackage": "允许指定名为oldname的模块实际上是名为newname的包", "msilib.html#msilib.FCICreate": "创建名为cabname的新CAB文件", "msilib.html#msilib.UuidCreate": "返回新的唯一标识符的字符串表示形式", "msilib.html#msilib.OpenDatabase": "通过调用MsiOpenDatabase返回一个新的数据库对象", "msilib.html#msilib.CreateRecord": "通过调用MSICreateRecord()返回一个新的记录对象", "msilib.html#msilib.init_database": "Create and return a new database name, initialize it with schema, and set the properties ProductName, ProductCode, ProductVersion, and Manufacturer", "msilib.html#msilib.add_data": "将所有记录添加到数据库中名为表的表", "msilib.html#msilib.add_tables": "将模块中的所有表内容添加到数据库", "msilib.html#msilib.add_stream": "将路径添加到数据库的_Stream表中，流名称为name", "msilib.html#msilib.gen_uuid": "以MSI通常需要的格式返回新的UUID", "msilib.html#msilib.sequence": "此模块包含标准序列表的表内容：AdminExecuteSequence，AdminUISequence，AdvtExecuteSequence，InstallExecuteSequence和 InstallUISequence", "msilib.html#msilib.text": "此模块包含标准安装程序操作的UIText和ActionText表的定义", "msvcrt.html#msvcrt.locking": "根据C运行时文件描述器fd锁定文件的一部分", "msvcrt.html#msvcrt.setmode": "设置文件描述器fd的行末翻译模式", "msvcrt.html#msvcrt.open_osfhandle": "从文件句柄句柄创建C运行时文件描述器", "msvcrt.html#msvcrt.get_osfhandle": "返回文件描述器fd的文件句柄", "msvcrt.html#msvcrt.kbhit": "如果键盘正在等待读取，则返回true", "msvcrt.html#msvcrt.getch": "读取按键并将结果字符作为字节字符串返回", "msvcrt.html#msvcrt.getwch": "getch()的宽字符变量，返回Unicode值", "msvcrt.html#msvcrt.getche": "类似于getch()，但是如果它代表一个可打印的字符，keypress将被回显", "msvcrt.html#msvcrt.getwche": "getche()的宽字符变体，返回Unicode值", "msvcrt.html#msvcrt.putch": "将字节字符串char打印到控制台，无需缓冲", "msvcrt.html#msvcrt.putwch": "宽字符变体putch()，接受Unicode值", "msvcrt.html#msvcrt.ungetch": "导致字节串char被“推回”到控制台缓冲区；它将是由getch()或getche()读取的下一个字符", "msvcrt.html#msvcrt.ungetwch": "ungetch()的宽字符变体，接受Unicode值", "msvcrt.html#msvcrt.heapmin": "强制malloc()堆清理自己并将未使用的块返回到操作系统", "msvcrt.html#msvcrt.LK_LOCK": "锁定指定的字节", "msvcrt.html#msvcrt.LK_NBLCK": "锁定指定的字节", "msvcrt.html#msvcrt.LK_UNLCK": "解锁指定的字节，必须先前已锁定", "multiprocessing.html#multiprocessing.Pipe": "Returns a pair (conn1, conn2) of Connection objects representing the ends of a pipe", "multiprocessing.html#multiprocessing.active_children": "Return list of all live children of the current process", "multiprocessing.html#multiprocessing.cpu_count": "返回系统中的CPU数量", "multiprocessing.html#multiprocessing.current_process": "Return the Process object corresponding to the current process", "multiprocessing.html#multiprocessing.freeze_support": "Add support for when a program which uses multiprocessing has been frozen to produce a Windows executable", "multiprocessing.html#multiprocessing.get_all_start_methods": "Returns a list of the supported start methods, the first of which is the default", "multiprocessing.html#multiprocessing.get_context": "Return a context object which has the same attributes as the multiprocessing module", "multiprocessing.html#multiprocessing.get_start_method": "Return the name of start method used for starting processes", "multiprocessing.html#multiprocessing.set_executable": "Sets the path of the Python interpreter to use when starting a child process", "multiprocessing.html#multiprocessing.set_start_method": "Set the method which should be used to start child processes", "multiprocessing.html#multiprocessing.Value": "返回从共享内存分配的ctypes对象", "multiprocessing.html#multiprocessing.Array": "Return a ctypes array allocated from shared memory", "multiprocessing.html#multiprocessing.sharedctypes.RawArray": "Return a ctypes array allocated from shared memory", "multiprocessing.html#multiprocessing.sharedctypes.RawValue": "Return a ctypes object allocated from shared memory", "multiprocessing.html#multiprocessing.sharedctypes.Array": "The same as RawArray() except that depending on the value of lock a process-safe synchronization wrapper may be returned instead of a raw ctypes array", "multiprocessing.html#multiprocessing.sharedctypes.Value": "The same as RawValue() except that depending on the value of lock a process-safe synchronization wrapper may be returned instead of a raw ctypes object", "multiprocessing.html#multiprocessing.sharedctypes.copy": "Return a ctypes object allocated from shared memory which is a copy of the ctypes object obj", "multiprocessing.html#multiprocessing.sharedctypes.synchronized": "Return a process-safe wrapper object for a ctypes object which uses lock to synchronize access", "multiprocessing.html#multiprocessing.sharedctypes.multiprocessing.Manager": "Returns a started SyncManager object which can be used for sharing objects between processes", "multiprocessing.html#multiprocessing.connection.deliver_challenge": "Send a randomly generated message to the other end of the connection and wait for a reply", "multiprocessing.html#multiprocessing.connection.answer_challenge": "Receive a message, calculate the digest of the message using authkey as the key, and then send the digest back", "multiprocessing.html#multiprocessing.connection.Client": "Attempt to set up a connection to the listener which is using address address, returning a Connection", "multiprocessing.html#multiprocessing.connection.wait": "Wait till an object in object_list is ready", "multiprocessing.html#multiprocessing.get_logger": "Returns the logger used by multiprocessing", "multiprocessing.html#multiprocessing.log_to_stderr": "This function performs a call to get_logger() but in addition to returning the logger created by get_logger, it adds a handler which sends output to sys", "nis.html#nis.match": "返回映射mapname中键的匹配，如果没有匹配，则引入错误（nis", "nis.html#nis.cat": "将键的字典映射到值，使match（键， mapname）== value / t2>", "nis.html#nis.maps": "返回所有有效地图的列表", "nis.html#nis.get_default_domain": "返回系统默认NIS域", "nntplib.html#nntplib.decode_header": "解码标头值，取消转义任何转义的非ASCII字符", "operator.html#operator.lt": "在a和b之间执行“丰富比较”", "operator.html#operator.not_": "返回not obj", "operator.html#operator.truth": "如果obj为真，则返回True，否则返回False", "operator.html#operator.is_": "返回a 是 b", "operator.html#operator.is_not": "返回a 是 不是 b", "operator.html#operator.abs": "返回obj的绝对值", "operator.html#operator.add": "返回a + b，对于a和b  t5 >数字", "operator.html#operator.and_": "返回按位和a和b", "operator.html#operator.floordiv": "返回a // b", "operator.html#operator.index": "返回a转换为整数", "operator.html#operator.inv": "返回数字obj的按位逆", "operator.html#operator.lshift": "返回a向左移动b", "operator.html#operator.mod": "返回a ％ b", "operator.html#operator.mul": "返回a * b，对于a和b  t5 >数字", "operator.html#operator.matmul": "返回a @ b", "operator.html#operator.neg": "返回obj否定（-obj）", "operator.html#operator.or_": "返回按位或a和b", "operator.html#operator.pos": "返回obj正（+obj）", "operator.html#operator.pow": "对于a和b，返回a ** b t5>数字", "operator.html#operator.rshift": "返回a向右移动b", "operator.html#operator.sub": "返回a  -  b", "operator.html#operator.truediv": "返回a / b其中2/3为", "operator.html#operator.xor": "返回a和b的逐位异或", "operator.html#operator.concat": "对于a和b返回a + b序列", "operator.html#operator.contains": "返回 t> a中的测试结果b ", "operator.html#operator.countOf": "返回a中b的出现次数", "operator.html#operator.delitem": "删除索引b处a的值", "operator.html#operator.getitem": "返回a在索引b的值", "operator.html#operator.indexOf": "返回a中b的第一个出现的索引", "operator.html#operator.setitem": "将索引b处的a值设置为c", "operator.html#operator.length_hint": "返回对象o的估计长度", "operator.html#operator.attrgetter": "返回从其操作数获取attr的可调用对象", "operator.html#operator.itemgetter": "返回使用操作数的__getitem__()方法从其操作数获取项的可调用对象", "operator.html#operator.methodcaller": "返回在其操作数上调用方法name的可调用对象", "operator.html#operator.iadd": "a = iadd(a, b) is equivalent to a += b", "operator.html#operator.iand": "a = iand(a, b) is equivalent to a &= b", "operator.html#operator.iconcat": "a = iconcat(a, b) is equivalent to a += b for a and b sequences", "operator.html#operator.ifloordiv": "a = ifloordiv(a, b) is equivalent to a //= b", "operator.html#operator.ilshift": "a = ilshift(a, b) is equivalent to a <<= b", "operator.html#operator.imod": "a = imod(a, b) is equivalent to a %= b", "operator.html#operator.imul": "a = imul(a, b) is equivalent to a *= b", "operator.html#operator.imatmul": "a = imatmul(a, b) is equivalent to a @= b", "operator.html#operator.ior": "a = ior(a, b) is equivalent to a |= b", "operator.html#operator.ipow": "a = ipow(a, b) is equivalent to a **= b", "operator.html#operator.irshift": "a = irshift(a, b) is equivalent to a >>= b", "operator.html#operator.isub": "a = isub(a, b) is equivalent to a -= b", "operator.html#operator.itruediv": "a = itruediv(a, b) is equivalent to a /= b", "operator.html#operator.ixor": "a = ixor(a, b) is equivalent to a ^= b", "os.html#os.ctermid": "返回与进程的控制终端对应的文件名", "os.html#os.fsencode": "在Windows上使用'surrogateescape'错误处理程序或'strict'编码文件名返回bytes不变", "os.html#os.fsdecode": "在Windows上使用'surrogateescape'错误处理程序或'strict'对文件系统进行解码filename返回str不变", "os.html#os.getenv": "如果它存在，则返回环境变量键的值；如果不存在，则返回默认值", "os.html#os.getenvb": "如果它存在，则返回环境变量键的值；如果不存在，则返回默认值", "os.html#os.get_exec_path": "在启动进程时，返回将搜索命名可执行文件的目录列表，类似于shell", "os.html#os.getegid": "返回当前进程的有效组标识", "os.html#os.geteuid": "返回当前进程的有效用户标识", "os.html#os.getgid": "返回当前进程的实际组ID", "os.html#os.getgrouplist": "返回user所属的组ID的列表", "os.html#os.getgroups": "返回与当前进程关联的补充组标识的列表", "os.html#os.getlogin": "Return the name of the user logged in on the controlling terminal of the process", "os.html#os.getpgid": "用进程id pid返回进程的进程组ID", "os.html#os.getpgrp": "返回当前进程组的ID", "os.html#os.getpid": "返回当前进程id", "os.html#os.getppid": "返回父进程的进程ID", "os.html#os.getpriority": "获取计划调度优先级", "os.html#os.getresuid": "返回一个元组（ruid，euid，suid），表示当前进程的真实，有效和保存的用户id", "os.html#os.getresgid": "返回一个元组（rgid，egid，sgid），表示当前进程的真实，有效和保存的组ID", "os.html#os.getuid": "返回当前进程的真实用户ID", "os.html#os.initgroups": "调用系统initgroups()初始化组访问列表，其中包含指定用户名所属的所有组以及指定的组ID", "os.html#os.putenv": "将名为key的环境变量设置为字符串值", "os.html#os.setegid": "设置当前进程的有效组ID", "os.html#os.seteuid": "设置当前进程的有效用户标识", "os.html#os.setgid": "设置当前进程的组ID", "os.html#os.setgroups": "将与当前进程关联的补充组标识列表设置为组", "os.html#os.setpgrp": "根据所实现的版本，调用系统调用setpgrp()或setpgrp（0， 0）任何）", "os.html#os.setpgid": "调用系统调用setpgid()将id为pid的进程的进程组id设置为id为pgrp的进程组", "os.html#os.setpriority": "设置节目安排优先级", "os.html#os.setregid": "设置当前进程的真实和有效的组ID", "os.html#os.setresgid": "设置当前进程的真实，有效和保存的组ID", "os.html#os.setresuid": "设置当前进程的真实，有效和保存的用户标识", "os.html#os.setreuid": "设置当前进程的真实和有效的用户ID", "os.html#os.getsid": "调用系统调用getsid()", "os.html#os.setsid": "调用系统调用setsid()", "os.html#os.setuid": "设置当前进程的用户标识", "os.html#os.strerror": "返回代码中与错误代码对应的错误消息", "os.html#os.umask": "设置当前的数字umask并返回先前的umask", "os.html#os.uname": "返回标识当前操作系统的信息", "os.html#os.unsetenv": "取消设置（删除）名为键的环境变量", "os.html#os.fdopen": "返回连接到文件描述符fd的打开文件对象", "os.html#os.close": "关闭文件描述符fd", "os.html#os.closerange": "将所有文件描述符从fd_low（包括）关闭到fd_high（不包括），忽略错误", "os.html#os.device_encoding": "如果连接到终端，则返回描述与fd关联的设备的编码的字符串；否则返回None", "os.html#os.dup": "返回文件描述符fd的副本", "os.html#os.dup2": "复制文件描述符fd到fd2，必要时关闭后者", "os.html#os.fchmod": "将由fd给出的文件模式更改为数字模式", "os.html#os.fchown": "将由fd给出的文件的所有者和组标识更改为数字uid和gid", "os.html#os.fdatasync": "用filedescriptor fd强制将文件写入磁盘", "os.html#os.fpathconf": "返回与打开文件相关的系统配置信息", "os.html#os.fstat": "获取文件描述符fd的状态", "os.html#os.fstatvfs": "返回包含与文件描述符fd关联的文件的文件系统的信息，如statvfs()", "os.html#os.fsync": "用filedescriptor fd强制将文件写入磁盘", "os.html#os.ftruncate": "截断与文件描述符fd相对应的文件，以便它的大小最多为长度个字节", "os.html#os.get_blocking": "获取文件描述符的阻塞模式：False如果O_NONBLOCK标志被设置，True如果标志被清除", "os.html#os.isatty": "如果文件描述符fd打开并连接到类似tty（-like）的设备，则返回True，否则False", "os.html#os.lockf": "在打开的文件描述符上应用，测试或移除POSIX锁", "os.html#os.lseek": "Set the current position of file descriptor fd to position pos, modified by how: SEEK_SET or 0 to set the position relative to the beginning of the file; SEEK_CUR or 1 to set it relative to the current position; SEEK_END or 2 to set it relative to the end of the file", "os.html#os.open": "根据flags打开文件path，并根据mode设置不同的标志", "os.html#os.openpty": "打开一个新的伪终端对", "os.html#os.pipe": "创建一个管道", "os.html#os.pipe2": "使用flags自动设置一个管道", "os.html#os.posix_fallocate": "确保为fd指定的文件分配足够的磁盘空间，该文件从offset开始并继续处理len字节", "os.html#os.posix_fadvise": "宣布打算以特定模式访问数据，从而允许内核进行优化", "os.html#os.pread": "从文件描述符fd中读取offset位置处的文件描述符", "os.html#os.pwrite": "将bytestring从offset写入文件描述符fd，使文件偏移保持不变", "os.html#os.read": "从文件描述符fd中最多读取n个字节", "os.html#os.sendfile": "从offset开始，将count字节从中的文件描述符复制到文件描述符out", "os.html#os.set_blocking": "设置指定文件描述符的阻止模式", "os.html#os.readv": "从文件描述符fd中读入多个可变的bytes-like objects 缓冲区", "os.html#os.tcgetpgrp": "返回由fd（由os", "os.html#os.tcsetpgrp": "将与由fd（由os", "os.html#os.ttyname": "返回一个字符串，它指定与文件描述符fd关联的终端设备", "os.html#os.write": "将str中的字节串写入文件描述符fd", "os.html#os.writev": "将buffers的内容写入文件描述符fd", "os.html#os.get_terminal_size": "以（列， 行），terminal_size类型的元组的形式返回终端窗口的大小", "os.html#os.get_inheritable": "获取指定文件描述符的“可继承”标志（布尔值）", "os.html#os.set_inheritable": "设置指定文件描述符的“可继承”标志", "os.html#os.get_handle_inheritable": "获取指定句柄的“可继承”标志（布尔值）", "os.html#os.set_handle_inheritable": "设置指定句柄的“可继承”标志", "os.html#os.access": "使用real uid / gid来测试对路径的访问", "os.html#os.chdir": "将当前工作目录更改为路径", "os.html#os.chflags": "将路径的标志设置为数字标志", "os.html#os.chmod": "将路径的模式更改为数字模式", "os.html#os.chown": "将path的所有者和组标识更改为数字uid和gid", "os.html#os.chroot": "将当前进程的根目录更改为路径", "os.html#os.fchdir": "将当前工作目录更改为由文件描述符fd表示的目录", "os.html#os.getcwd": "返回表示当前工作目录的字符串", "os.html#os.getcwdb": "返回表示当前工作目录的字符串", "os.html#os.lchflags": "将path的标志设置为数字标志，如chflags()，但不要遵循符号链接", "os.html#os.lchmod": "将路径的模式更改为数字模式", "os.html#os.lchown": "将path的所有者和组标识更改为数字uid和gid", "os.html#os.link": "Create a hard link pointing to src named dst", "os.html#os.listdir": "返回一个list，包含给定path 目录下所有条目的名字", "os.html#os.lstat": "在给定路径上执行与lstat()系统调用等价的操作", "os.html#os.mkdir": "创建一个名称为path的目录，模式为mode", "os.html#os.makedirs": "递归创建目录的函数", "os.html#os.mkfifo": "使用数字模式模式创建名为path的FIFO（命名管道）", "os.html#os.mknod": "创建一个名为path的文件系统节点（文件，设备专用文件或命名管道）", "os.html#os.major": "从原始设备编号（通常是stat中的st_dev或st_rdev字段）中提取设备主编号", "os.html#os.minor": "从原始设备编号（通常是stat中的st_dev或st_rdev字段）中提取设备次要编号", "os.html#os.makedev": "从主要和次要设备编号构成原始设备编号", "os.html#os.pathconf": "返回与指定文件相关的系统配置信息", "os.html#os.readlink": "返回表示符号链接指向的路径的字符串", "os.html#os.remove": "删除（删除）文件路径", "os.html#os.removedirs": "递归地删除目录", "os.html#os.rename": "将文件或目录src重命名为dst", "os.html#os.renames": "重命名函数递归处理目录或文件，像rename()一样工作，除了首先尝试创建新路径名所需的任何中间目录之外", "os.html#os.replace": "将文件或目录src重命名为dst", "os.html#os.rmdir": "删除（删除）目录路径", "os.html#os.scandir": "返回与path给出的目录条目对应的DirEntry对象的迭代器", "os.html#os.stat": "获取文件或文件描述符的状态", "os.html#os.stat_float_times": "确定stat_result是否将时间戳记表示为浮动对象", "os.html#os.statvfs": "在给定路径上执行statvfs()系统调用", "os.html#os.symlink": "创建一个指向名为dst的src的符号链接", "os.html#os.sync": "强制将所有内容写入磁盘", "os.html#os.truncate": "截断与路径对应的文件，以便它的大小至多为长度字节", "os.html#os.unlink": "删除（删除）文件路径", "os.html#os.utime": "设置由path指定的文件的访问和修改时间", "os.html#os.walk": "遍历目录树，自顶向下或自底向上生成目录树下的文件名", "os.html#os.fwalk": "行为与walk()非常类似，不同的是它产生一个4元组(dirpath, dirnames, filenames, dirfd)，并支持dir_fd", "os.html#os.getxattr": "为路径返回扩展文件系统属性属性的值", "os.html#os.listxattr": "返回路径上的扩展文件系统属性列表", "os.html#os.removexattr": "从路径中删除扩展文件系统属性属性", "os.html#os.setxattr": "将路径上的扩展文件系统属性属性设置为值", "os.html#os.abort": "生成一个SIGABRT信号给当前进程", "os.html#os.execl": "这些功能都执行一个新程序，取代当前进程；他们不回来", "os.html#os._exit": "状态n退出进程，无需调用清理处理程序，刷新stdio缓冲区等", "os.html#os.fork": "叉一个孩子的过程", "os.html#os.forkpty": "用一个新的伪终端作为孩子的控制终端，把一个子进程分叉开来", "os.html#os.kill": "发送信号sig到进程pid", "os.html#os.killpg": "Send the signal sig to the process group pgid", "os.html#os.nice": "将increment添加到进程的“niceness”中", "os.html#os.plock": "将程序段锁定到内存中", "os.html#os.popen": "从命令cmd打开管道", "os.html#os.spawnl": "在新进程中执行程序路径", "os.html#os.startfile": "用相关的应用程序启动一个文件", "os.html#os.system": "在子shell中执行命令（一个字符串）", "os.html#os.times": "返回当前的全局流程时间", "os.html#os.wait": "等待子进程完成，并返回一个包含它的pid和退出状态指示的元组：一个16位数字，其低字节是杀死进程的信号编号，其高字节是退出状态（如果信号数字为零）；如果生成核心文件，则设置低字节的高位", "os.html#os.waitid": "等待一个或多个子进程的完成", "os.html#os.waitpid": "这个功能的细节在Unix和Windows上有所不同", "os.html#os.wait3": "类似于waitpid()，除了没有给出进程ID参数并且返回包含子进程ID，退出状态指示和资源使用信息的3元素元组", "os.html#os.wait4": "类似于waitpid()，除了包含子进程ID，退出状态指示和资源使用信息的3元素元组之外，它被返回", "os.html#os.WCOREDUMP": "如果为进程生成核心转储，则返回True，否则返回False", "os.html#os.WIFCONTINUED": "如果进程从作业控制停止继续，则返回True，否则返回False", "os.html#os.WIFSTOPPED": "如果进程已停止，则返回True，否则返回False", "os.html#os.WIFSIGNALED": "如果进程由于信号而退出，则返回True，否则返回False", "os.html#os.WIFEXITED": "如果进程使用exit（2）系统调用退出，则返回True，否则返回False", "os.html#os.WEXITSTATUS": "如果WIFEXITED(status)为true，则返回整型参数到exit（2）系统调用", "os.html#os.WSTOPSIG": "返回导致进程停止的信号", "os.html#os.WTERMSIG": "返回导致进程退出的信号", "os.html#os.sched_get_priority_min": "获取策略的最低优先级值", "os.html#os.sched_get_priority_max": "获取策略的最大优先级值", "os.html#os.sched_setscheduler": "使用PID pid设置进程的调度策略", "os.html#os.sched_getscheduler": "用PID pid返回进程的调度策略", "os.html#os.sched_setparam": "使用PID pid为进程设置调度参数", "os.html#os.sched_getparam": "将具有PID pid的进程的调度参数作为sched_param实例返回", "os.html#os.sched_rr_get_interval": "用PID pid返回循环过程的秒数", "os.html#os.sched_yield": "自愿放弃CPU", "os.html#os.sched_setaffinity": "用PID pid（或当前进程，如果为零）限制进程到一组CPU", "os.html#os.sched_getaffinity": "返回具有PID pid（或当前过程，如果为零）的过程的CPU集合限制为", "os.html#os.confstr": "返回字符串值的系统配置值", "os.html#os.cpu_count": "返回系统中的CPU数量", "os.html#os.getloadavg": "如果无法获得负载平均值，则返回系统运行队列中过去1分钟，5分钟和15分钟内平均的进程数量或引发OSError", "os.html#os.sysconf": "返回整数值的系统配置值", "os.html#os.urandom": "返回n个字节的用以加密的随机字符串", "os.html#os.name": "导入的操作系统相关模块的名称", "os.html#os.environ": "表示字符串环境的mapping对象", "os.html#os.environb": "字节版本的environ：表示环境为字节字符串的mapping对象", "os.html#os.PRIO_PROCESS": "getpriority()和setpriority()函数的参数", "os.html#os.supports_bytes_environ": "TrueFalse在Windows上）", "os.html#os.F_LOCK": "指定lockf()执行什么操作的标志", "os.html#os.SEEK_SET": "lseek()函数的参数", "os.html#os.O_RDONLY": "这些常量在Unix和Windows上可用", "os.html#os.O_DSYNC": "这些常量仅在Unix上可用", "os.html#os.O_BINARY": "这些常量仅在Windows上可用", "os.html#os.O_ASYNC": "这些常量是GNU扩展，如果它们没有被C库定义则不存在", "os.html#os.POSIX_FADV_NORMAL": "可以在posix_fadvise()的advice中使用的标志指定可能使用的访问模式", "os.html#os.SF_NODISKIO": "sendfile()函数的参数，如果实现支持它们的话", "os.html#os.F_OK": "作为access()的mode参数传递的值分别用于测试path的存在性，可读性，可写性和可执行性", "os.html#os.pathconf_names": "将由pathconf()和fpathconf()接受的字典映射名称转换为主机操作系统为这些名称定义的整数值", "os.html#os.supports_dir_fd": "Set对象指示os模块中的哪些函数允许使用它们的dir_fd参数", "os.html#os.supports_effective_ids": "指示os模块中的哪些函数允许os", "os.html#os.supports_fd": "Set对象指示os模块中的哪些函数允许将路径参数指定为打开的文件描述符", "os.html#os.supports_follow_symlinks": "Set对象指示os模块中的哪些函数允许使用它们的follow_symlinks参数", "os.html#os.XATTR_SIZE_MAX": "扩展属性值的最大大小可以是", "os.html#os.XATTR_CREATE": "这是setxattr()中flags参数的可能值", "os.html#os.XATTR_REPLACE": "这是setxattr()中flags参数的可能值", "os.html#os.EX_OK": "退出代码意味着没有发生错误", "os.html#os.EX_USAGE": "退出代码意味着命令被错误地使用，例如给出错误的参数数量", "os.html#os.EX_DATAERR": "退出代码意味着输入数据不正确", "os.html#os.EX_NOINPUT": "退出代码意味着输入文件不存在或不可读", "os.html#os.EX_NOUSER": "退出代码，意味着指定的用户不存在", "os.html#os.EX_NOHOST": "退出代码，意味着指定的主机不存在", "os.html#os.EX_UNAVAILABLE": "退出代码，这意味着所需的服务不可用", "os.html#os.EX_SOFTWARE": "退出代码意味着检测到内部软件错误", "os.html#os.EX_OSERR": "退出代码意味着检测到操作系统错误，例如无法分叉或创建管道", "os.html#os.EX_OSFILE": "退出代码意味着某些系统文件不存在，无法打开或出现其他类型的错误", "os.html#os.EX_CANTCREAT": "退出代码意味着无法创建用户指定的输出文件", "os.html#os.EX_IOERR": "退出代码意味着在某个文件上执行I / O时发生错误", "os.html#os.EX_TEMPFAIL": "退出代码意味着发生了临时故障", "os.html#os.EX_PROTOCOL": "退出代码意味着协议交换是非法的，无效的或不被理解的", "os.html#os.EX_NOPERM": "退出代码意味着没有足够的权限执行操作（但不适用于文件系统问题）", "os.html#os.EX_CONFIG": "退出代码意味着发生某种配置错误", "os.html#os.EX_NOTFOUND": "退出代码意味着类似“未找到条目”", "os.html#os.P_NOWAIT": "spawn*系列函数的mode参数的可能值", "os.html#os.P_WAIT": "spawn*系列函数的模式参数的可能值", "os.html#os.P_DETACH": "spawn*系列函数的mode参数的可能值", "os.html#os.P_PID": "这些是waitid()中idtype的可能值", "os.html#os.WEXITED": "可以在waitid()的options中使用的标志指定要等待的子信号", "os.html#os.CLD_EXITED": "这些是由waitid()返回的结果中si_code的可能值", "os.html#os.WNOHANG": "如果没有子进程状态立即可用，waitpid()选项立即返回", "os.html#os.WCONTINUED": "此选项会导致子进程在自上次报告状态后已从作业控制停止继续进行报告", "os.html#os.WUNTRACED": "这个选项会导致子进程被报告，如果它们已经被停止，但是它们的当前状态自停止以来还没有被报告", "os.html#os.SCHED_OTHER": "默认调度策略", "os.html#os.SCHED_BATCH": "为尝试保留计算机其余部分的交互性的CPU密集型进程调度策略", "os.html#os.SCHED_IDLE": "为极低优先级的后台任务调度策略", "os.html#os.SCHED_SPORADIC": "针对零星服务器程序的调度策略", "os.html#os.SCHED_FIFO": "先进先出调度策略", "os.html#os.SCHED_RR": "循环调度策略", "os.html#os.SCHED_RESET_ON_FORK": "该标志可以与任何其他调度策略进行或运算", "os.html#os.confstr_names": "由confstr()接受的字典映射名称与主机操作系统为这些名称定义的整数值", "os.html#os.sysconf_names": "由sysconf()接受的字典映射名称与主机操作系统为这些名称定义的整数值", "os.html#os.curdir": "操作系统用来引用当前目录的常量字符串", "os.html#os.pardir": "操作系统用来引用父目录的常量字符串", "os.html#os.sep": "操作系统用来分隔路径名组件的字符", "os.html#os.altsep": "操作系统用来分隔路径名组件的替代字符，或者如果只有一个分隔符字符，则None", "os.html#os.extsep": "将基本文件名与扩展名分开的字符；例如，'", "os.html#os.pathsep": "The character conventionally used by the operating system to separate search path components (as in PATH), such as ':' for POSIX or ';' for Windows", "os.html#os.defpath": "如果环境没有'PATH'键，exec*p*和spawn*p*使用的默认搜索路径", "os.html#os.linesep": "用于在当前平台上分隔（或相反，终止）行的字符串", "os.html#os.devnull": "空设备的文件路径", "os.html#os.RTLD_LAZY": "用于setdlopenflags()和getdlopenflags()函数的标志", "os.path.html#os.path.abspath": "返回一个标准的绝对路径名 path", "os.path.html#os.path.basename": "返回路径名path的最后一级的名称", "os.path.html#os.path.commonpath": "返回 paths参数中，所有路径序列中共有的最长的路径", "os.path.html#os.path.commonprefix": "返回列表中所有路径的前缀的最长路径前缀（逐个字符）", "os.path.html#os.path.dirname": "返回 path中的目录名", "os.path.html#os.path.exists": "如果路径指向现有路径或打开的文件描述器，则返回True", "os.path.html#os.path.lexists": "如果 path 指向现有的路径，则返回 True", "os.path.html#os.path.expanduser": "在Unix和Windows上，将参数中原始的~或~user部分用user主目录替换", "os.path.html#os.path.expandvars": "返回参数，其中的环境变量被扩展", "os.path.html#os.path.getatime": "返回 path的上次访问时间", "os.path.html#os.path.getmtime": "返回path的最后修改时间", "os.path.html#os.path.getctime": "返回系统的ctime，在某些系统（如Unix）上是最后元数据更改的时间，在其他系统（如Windows）上，是路径的创建时间", "os.path.html#os.path.getsize": "返回path的大小，以字节为单位", "os.path.html#os.path.isabs": "如果路径是绝对路径名，则返回True", "os.path.html#os.path.isfile": "如果路径是现有的常规文件，则返回True", "os.path.html#os.path.isdir": "如果文件是目录，则返回True", "os.path.html#os.path.islink": "如果路径指的是符号链接的目录条目，则返回True", "os.path.html#os.path.ismount": "如果路径名路径是安装点，则返回True在POSIX上，函数检查路径的父节点，path/", "os.path.html#os.path.join": "将一个或多个路径正确地连接起来", "os.path.html#os.path.normcase": "标准化路径名的大小写", "os.path.html#os.path.normpath": "通过折叠冗余分隔符和上级引用来归一化路径名，以使A//B，A/B/，A/", "os.path.html#os.path.realpath": "返回指定的文件名的规范名字，并消除路径中遇到的任何符号链接（如果操作系统支持的话）", "os.path.html#os.path.relpath": "返回自当前目录或者可选的start 目录的 path相对文件路径", "os.path.html#os.path.samefile": "如果两个路径名参数都指向相同的文件或目录，则返回True", "os.path.html#os.path.sameopenfile": "如果文件描述器fp1和fp2指向同一文件，则返回True", "os.path.html#os.path.samestat": "如果统计数据元组stat1和stat2指向同一文件，则返回True", "os.path.html#os.path.split": "将路径名path拆分为一个元组对(head, tail)，其中tail是路径名的最后一个部分，head是前面的所有内容", "os.path.html#os.path.splitdrive": "将路径名路径拆分为（drive， tail）其中drive为挂载点或空字符串", "os.path.html#os.path.splitext": "Split the pathname path into a pair (root, ext) such that root + ext == path, and ext is empty or begins with a period and contains at most one period", "os.path.html#os.path.splitunc": "自3", "os.path.html#os.path.supports_unicode_filenames": "True如果任意Unicode字符串可以用作文件名（在文件系统限制的限制之内）", "ossaudiodev.html#ossaudiodev.open": "打开音频设备并返回OSS音频设备对象", "ossaudiodev.html#ossaudiodev.openmixer": "打开混音器设备并返回OSS混音器设备对象", "parser.html#parser.expr": "expr()函数解析参数source，就像它是compile（source， 'file）的输入", "parser.html#parser.suite": "suite()函数解析参数source，就像它是compile（source， 'file）的输入", "parser.html#parser.sequence2st": "此函数接受表示为序列的解析树，并在可能的情况下构建内部表示", "parser.html#parser.tuple2st": "这与sequence2st()具有相同的功能", "parser.html#parser.st2list": "此函数在st中接受来自调用者的ST对象，并返回表示等效解析树的Python列表", "parser.html#parser.st2tuple": "此函数在st中接受来自调用者的ST对象，并返回表示等效解析树的Python元组", "parser.html#parser.compilest": "Python字节编译器可以在ST对象上调用以产生代码对象，这些对象可以用作调用内建exec()或eval()函数的一部分", "parser.html#parser.isexpr": "当st表示'eval'形式时，此函数返回true，否则返回false", "parser.html#parser.issuite": "此函数镜像isexpr()，因为它报告ST对象是否表示'exec'形式，通常称为“套件”", "parser.html#parser.STType": "由expr()，suite()和sequence2st()返回的对象类型", "pathlib.html#pathlib.PurePath.parts": "可以访问路径各个组件的元组：", "pathlib.html#pathlib.PurePath.drive": "表示驱动器盘符或名称的字符串（如果有）：", "pathlib.html#pathlib.PurePath.root": "表示（本地或全局）根（如果有）的字符串：", "pathlib.html#pathlib.PurePath.anchor": "驱动器和根目录的连接：", "pathlib.html#pathlib.PurePath.parents": "提供对路径的逻辑祖先的访问的不可变序列：", "pathlib.html#pathlib.PurePath.parent": "路径的逻辑父代：", "pathlib.html#pathlib.PurePath.name": "表示最终路径组件的字符串，不包括驱动器和根目录（如果有）：", "pathlib.html#pathlib.PurePath.suffix": "最终组件的文件扩展名（如果有）：", "pathlib.html#pathlib.PurePath.suffixes": "路径的文件扩展名列表：", "pathlib.html#pathlib.PurePath.stem": "最终路径组件，不带其后缀：", "pdb.html#pdb.run": "在调试器控制下执行statement（作为字符串或代码对象）", "pdb.html#pdb.runeval": "在调试器控制下计算表达式（作为字符串或代码对象）", "pdb.html#pdb.runcall": "使用给定的参数调用函数（函数或方法对象，而不是字符串）", "pdb.html#pdb.set_trace": "在调用堆栈框架处输入调试器", "pdb.html#pdb.post_mortem": "输入给定traceback对象的事后调试", "pdb.html#pdb.pm": "输入在sys", "pickle.html#pickle.dump": "将obj的腌制表示写入打开的file object 文件", "pickle.html#pickle.dumps": "将对象的腌制表示作为bytes对象返回，而不是将其写入文件", "pickle.html#pickle.load": "从打开的文件对象file读取pickled对象表示形式，并返回其中重新构建的对象层次结构", "pickle.html#pickle.loads": "从bytes对象读取腌制对象层次结构，并返回其中指定的重构对象层次结构", "pickle.html#pickle.HIGHEST_PROTOCOL": "整数，最高的protocol version可用", "pickle.html#pickle.DEFAULT_PROTOCOL": "整数，默认的protocol version用于酸洗", "pickletools.html#pickletools.dis": "版本3", "pickletools.html#pickletools.genops": "在pickle中的所有操作码上提供iterator，返回（操作码， arg， pos） 三元组", "pickletools.html#pickletools.optimize": "在删除未使用的PUT操作码后，返回一个新的等效pickle字符串", "pkgutil.html#pkgutil.extend_path": "扩展组成包的模块的搜索路径", "pkgutil.html#pkgutil.find_loader": "针对给定的全名，检索 PEP 302模块加载程序", "pkgutil.html#pkgutil.get_importer": "针对给定的path_item，检索 PEP 302导入器", "pkgutil.html#pkgutil.get_loader": "为module_or_name获取 PEP 302“loader”对象", "pkgutil.html#pkgutil.iter_importers": "给定模块名称的产出 PEP 302导入器", "pkgutil.html#pkgutil.iter_modules": "对路径上的所有子模块，产生（module_finder， 名称， ispkg） ，如果路径为None，则sys", "pkgutil.html#pkgutil.walk_packages": "对于所有模块在路径上递归生成（module_finder， 名称， ispkg）或者，如果路径是None，所有可访问的模块", "pkgutil.html#pkgutil.get_data": "从包中获取资源", "platform.html#platform.architecture": "查询给定的可执行文件（默认为Python解释器二进制）以获取体系结构的各种信息", "platform.html#platform.machine": "返回机器类型，例如'i386'", "platform.html#platform.node": "返回计算机的网络名称（可能不完全限定！）", "platform.html#platform.platform": "返回一个标识基础平台的单个字符串，尽可能使用尽可能多的有用信息", "platform.html#platform.processor": "返回（实际）处理器名称，例如'amdk6'", "platform.html#platform.python_build": "返回一个元组（buildno， builddate）将Python内部版本号和日期说明为字符串", "platform.html#platform.python_compiler": "返回一个字符串，标识用于编译Python的编译器", "platform.html#platform.python_branch": "返回一个标识Python实现SCM分支的字符串", "platform.html#platform.python_implementation": "返回一个标识Python实现的字符串", "platform.html#platform.python_revision": "返回一个标识Python实现SCM修订版本的字符串", "platform.html#platform.python_version": "以字符串'major", "platform.html#platform.python_version_tuple": "返回字符串的tuple （major， minor， patchlevel）的Python版本", "platform.html#platform.release": "返回系统的版本，例如'2", "platform.html#platform.system": "返回系统/操作系统名称，例如'Linux'，'Windows'或'Java'", "platform.html#platform.system_alias": "Returns (system, release, version) aliased to common marketing names used for some systems", "platform.html#platform.version": "返回系统的发布版本，例如'＃3 on degas'", "platform.html#platform.uname": "相当便携的uname接口", "platform.html#platform.java_ver": "Jython的版本接口", "platform.html#platform.win32_ver": "从Windows注册表获取其他版本信息，并返回元组（发布， 版本， csd， ptype） t4>指OS版本，版本号，CSD级别（服务封装）和OS类型（多/单处理器）", "platform.html#platform.popen": "便携式popen()接口", "platform.html#platform.mac_ver": "Get Mac OS version information and return it as tuple (release, versioninfo, machine) with versioninfo being a tuple (version, dev_stage, non_release_version)", "platform.html#platform.dist": "这是linux_distribution()的另一个名称", "platform.html#platform.linux_distribution": "尝试确定Linux操作系统分发名称的名称", "platform.html#platform.libc_ver": "尝试确定可执行文件（默认为 Python 解释器） 链接的 libc 版本", "plistlib.html#plistlib.load": "读取plist文件", "plistlib.html#plistlib.loads": "从字节对象加载plist", "plistlib.html#plistlib.dump": "将值写入plist文件", "plistlib.html#plistlib.dumps": "将值返回为plist格式的字节对象", "plistlib.html#plistlib.readPlist": "读取plist文件", "plistlib.html#plistlib.writePlist": "将rootObject写入XML plist文件", "plistlib.html#plistlib.readPlistFromBytes": "从字节对象读取plist数据", "plistlib.html#plistlib.writePlistToBytes": "返回rootObject作为XML plist格式的字节对象", "plistlib.html#plistlib.FMT_XML": "plist文件的XML格式", "plistlib.html#plistlib.FMT_BINARY": "plist文件的二进制格式", "posix.html#posix.environ": "表示解释器启动时的字符串环境的字典", "pprint.html#pprint.pformat": "以字符串的形式返回object的打印结果", "pprint.html#pprint.pprint": "将object打印到stream中，结尾输出新行", "pprint.html#pprint.isreadable": "判断 object 的打印结果是否“可读”，或者能否用 eval()来重新构造值", "pprint.html#pprint.isrecursive": "判断object是否需要递归打印", "pprint.html#pprint.saferepr": "返回object的字符串表示，对于递归的数据结构有保护", "profile.html#profile.run": "此函数接受可传递到exec()函数的单个参数，以及可选的文件名", "profile.html#profile.runctx": "此函数类似于run()，添加了参数以提供命令字符串的全局和本地化字典", "pty.html#pty.fork": "叉子", "pty.html#pty.openpty": "打开一个新的伪终端对，使用os", "pty.html#pty.spawn": "产生一个进程，并将其控制终端与当前进程的标准io连接", "pwd.html#pwd.getpwuid": "返回给定数字用户ID的密码数据库条目", "pwd.html#pwd.getpwnam": "返回给定用户名的密码数据库条目", "pwd.html#pwd.getpwall": "以任意顺序返回所有可用密码数据库条目的列表", "pyclbr.html#pyclbr.readmodule": "读取一个模块并返回一个字典映射类名到类描述器对象", "pyclbr.html#pyclbr.readmodule_ex": "像readmodule()，但返回的字典，除了将类名映射到类描述器对象之外，还将顶级函数名映射到函数描述器对象", "pyexpat.html#xml.parsers.expat.ErrorString": "返回给定错误号errno的说明字符串", "pyexpat.html#xml.parsers.expat.ParserCreate": "创建并返回一个新的xmlparser对象", "pyexpat.html#xml.parsers.expat.XMLParserType": "来自ParserCreate()函数的返回值的类型", "pyexpat.html#xml.parsers.expat.errors.codes": "将数字错误代码映射到其字符串描述的字典", "pyexpat.html#xml.parsers.expat.errors.messages": "将字符串描述映射到其错误代码的字典", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF": "引用到外部实体而不是内部实体的属性值中的实体引用", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_BAD_CHAR_REF": "字符引用指的是XML中非法字符（例如，字符0或'&#0;'）", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_BINARY_ENTITY_REF": "实体引用指的是用符号声明的实体，因此不能被解析", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_DUPLICATE_ATTRIBUTE": "一个属性在开始标记中多次使用", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_INVALID_TOKEN": "在输入字节无法正确分配给字符时引发；例如，UTF-8输入流中的NUL字节（值0）", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_JUNK_AFTER_DOC_ELEMENT": "文档元素之后出现了除空格之外的其他内容", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_MISPLACED_XML_PI": "在除了输入数据的开始之外的某处发现了XML声明", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_NO_ELEMENTS": "文档不包含元素（XML要求所有文档只包含一个顶级元素）", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_NO_MEMORY": "Expat无法在内部分配内存", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_PARAM_ENTITY_REF": "发现不允许参数实体引用的位置", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_PARTIAL_CHAR": "在输入中找到不完整的字符", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_RECURSIVE_ENTITY_REF": "实体引用包含对同一实体的另一引用；可能通过不同的名称，并且可能间接", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_SYNTAX": "遇到一些未指定的语法错误", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_TAG_MISMATCH": "结束标记与最内部的开始标记不匹配", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_UNCLOSED_TOKEN": "某些令牌（例如开始标签）在流结束或遇到下一个令牌之前未关闭", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_UNDEFINED_ENTITY": "引用未定义的实体", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_UNKNOWN_ENCODING": "Expat不支持文档编码", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_UNCLOSED_CDATA_SECTION": "未关闭标有CDATA的部分", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_NOT_STANDALONE": "解析器确定文档不是“独立”，尽管它声明自己在XML声明中，并且设置了NotStandaloneHandler并返回0", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_FEATURE_REQUIRES_XML_DTD": "需要操作，需要编译DTD支持，但是在没有DTD支持的情况下配置了Expat", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING": "在解析开始后请求行为更改，只能在解析开始前更改", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_UNBOUND_PREFIX": "", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_UNDECLARING_PREFIX": "该文档试图删除与前缀相关联的名称空间声明", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_INCOMPLETE_PE": "参数实体包含不完整标记", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_XML_DECL": "文档根本没有文档元素", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_TEXT_DECL": "解析外部实体中的文本声明时出错", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_PUBLICID": "在公共ID中找到不允许的字符", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_SUSPENDED": "请求的操作是在已暂停的解析器上进行的，但不允许", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_NOT_SUSPENDED": "当解析器未被挂起时，尝试恢复解析器", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_ABORTED": "这不应该报告给Python应用程序", "pyexpat.html#xml.parsers.expat.errors.XML_ERROR_FINISHED": "所请求的操作是在已完成解析输入的解析器上进行的，但不允许", "py_compile.html#py_compile.compile": "将源文件编译为字节代码并写出字节代码高速缓存文件", "py_compile.html#py_compile.main": "编译几个源文件", "quopri.html#quopri.decode": "解码输入文件的内容，并将生成的解码二进制数据写入输出文件", "quopri.html#quopri.encode": "编码输入文件的内容，并将生成的可引用数据写入输出文件", "quopri.html#quopri.decodestring": "类似于decode()，除了它接受源bytes并返回对应的解码的bytes", "quopri.html#quopri.encodestring": "像encode()，除了它接受源bytes并返回相应的编码的bytes", "random.html#random.seed": "初始化生成器的随机数", "random.html#random.getstate": "返回捕获生成器的当前内部状态的对象", "random.html#random.setstate": "状态应该从先前对getstate()的调用获得，并且setstate()将生成器的内部状态恢复为是在当时getstate()被调用", "random.html#random.getrandbits": "返回一个 k 位(bit) 的随机整数(译者注：如k=8,返回8bit范围内的随机数，即0-255的随机数)该方法与MersenneTwister生成器一起提供，并且一些其他生成器也可以将其提供为API的可选部分", "random.html#random.randrange": "从range(start, stop, step)返回一个start到end范围内的随机整数（译者注：start，end，step都是整数，不包含end），可以指定step", "random.html#random.randint": "返回一个随机整数N，a <= N <= b", "random.html#random.choice": "从非空序列seq返回一个随机元素", "random.html#random.shuffle": "原地搅乱序列x", "random.html#random.sample": "返回从群体序列或集合中选择的唯一元素的k长度列表", "random.html#random.random": "返回下一个在范围 [0", "random.html#random.uniform": "Return a random floating point number N such that a <= N <= b for a <= b and b <= N <= a for b < a", "random.html#random.triangular": "返回随机浮点数 N 使得 low <= N <= high", "random.html#random.betavariate": "Beta分布", "random.html#random.expovariate": "指数分布", "random.html#random.gammavariate": "伽玛分布", "random.html#random.gauss": "高斯分布", "random.html#random.lognormvariate": "对数正态分布", "random.html#random.normalvariate": "正态分布", "random.html#random.vonmisesvariate": "mu is the mean angle, expressed in radians between 0 and 2*pi, and kappa is the concentration parameter, which must be greater than or equal to zero", "random.html#random.paretovariate": "帕累托分布", "random.html#random.weibullvariate": "Weibull分布", "re.html#re.compile": "将正则表达式模式编译成正则表达式对象，其 match() 和 search() 方法可用于匹配，描述如下", "re.html#re.search": "顺序扫描 string ，寻找正则表达式 pattern 产生匹配的第一个位置，并返回相应的 match object", "re.html#re.match": "若在 string 起始位置的0个或多个字符匹配正则表达式 pattern，返回相应的 match object", "re.html#re.fullmatch": "如果整个字符串匹配正则表达式pattern，则返回相应的match object", "re.html#re.split": "根据pattern的出现拆分字符串", "re.html#re.findall": "返回字符串中pattern的所有非重叠匹配项作为字符串列表", "re.html#re.finditer": "在字符串中的RE 模式的所有非重叠匹配中返回产生match objects的iterator", "re.html#re.sub": "将string中最左侧非重叠出现的pattern替换为repl，返回所获得的字符串", "re.html#re.subn": "执行与sub()相同的操作，但返回一个元组（new_string， number_of_subs_made）", "re.html#re.escape": "转义模式中除ASCII字母、数字和'_'之外的所有字符", "re.html#re.purge": "清除正则表达式缓存", "re.html#re.A": "让 \\w, \\W, \\b, \\B, \\d, \\D, \\s and \\S 执行纯 ASCII 匹配，而不是全部Unicode匹配(译注：因为Unicode中存在多国文字页面，所以上述字符存在多个码点，作用相同而二进制不同)", "re.html#re.DEBUG": "显示关于编译表达式的调试信息", "re.html#re.I": "执行不区分大小写的匹配；如[A-Z]也会匹配小写字母", "re.html#re.L": "Make \\w，\\W，\\b，\\B，\\s和\\S取决于当前的语言环境", "re.html#re.M": "指定时，模式字符'^'匹配字符串的开头和每行的开始处（紧跟在每个换行符后面）；和模式字符'$'匹配字符串的末尾和每行的末尾（紧接在每个换行符的前面）", "re.html#re.S": "制作'", "re.html#re.X": "该标志允许您编写正则表达式，通过允许您在视觉上分离模式的逻辑部分并添加注释，该正则表达式看起来更好，并且更易读", "readline.html#readline.parse_and_bind": "执行string参数中提供的init行", "readline.html#readline.read_init_file": "执行readline初始化文件", "readline.html#readline.get_line_buffer": "返回行缓冲区的当前内容（rl_line_buffer在底层库中）", "readline.html#readline.insert_text": "在光标位置的行缓冲区中插入文本", "readline.html#readline.redisplay": "更改屏幕上显示的内容以反映行缓冲区的当前内容", "readline.html#readline.read_history_file": "加载阅读历史记录文件，并将其附加到历史记录列表", "readline.html#readline.write_history_file": "将历史记录列表保存到阅读历史记录文件，覆盖任何现有文件", "readline.html#readline.append_history_file": "将最后的nelements项目追加到文件中", "readline.html#readline.get_history_length": "设置或返回要保存在历史记录文件中的所需行数", "readline.html#readline.clear_history": "清除当前历史记录", "readline.html#readline.get_current_history_length": "返回当前在历史记录中的项目数", "readline.html#readline.get_history_item": "返回索引的历史记录项目的当前内容", "readline.html#readline.remove_history_item": "从历史记录中删除其位置指定的历史记录项", "readline.html#readline.replace_history_item": "用行替换其位置指定的历史记录项", "readline.html#readline.add_history": "将行附加到历史记录缓冲区，就好像它是最后一行键入的", "readline.html#readline.set_startup_hook": "设置或删除由底层库的rl_startup_hook回调调用的函数", "readline.html#readline.set_pre_input_hook": "设置或删除由底层库的rl_pre_input_hook回调调用的函数", "readline.html#readline.set_completer": "设置或删除完成器功能", "readline.html#readline.get_completer": "获取完成器函数，或None如果未设置完成器函数", "readline.html#readline.get_begidx": "获取完成范围的开始或结束索引", "readline.html#readline.set_completion_display_matches_hook": "设置或删除完成显示功能", "reprlib.html#reprlib.repr": "这是aRepr的repr()方法", "reprlib.html#reprlib.recursive_repr": "装饰器用于检测同一线程中的递归调用的__repr__()方法", "reprlib.html#reprlib.aRepr": "这是 repr 用来提供如下所述的 repr() 函数的一个实例", "resource.html#resource.getrlimit": "使用资源的当前软和硬限制返回元组（软， 硬） 如果底层系统调用意外失败，则引发ValueError（如果指定了无效资源）或error", "resource.html#resource.setrlimit": "设置资源的新限制", "resource.html#resource.prlimit": "在一个函数中组合setrlimit()和getrlimit()，并支持获取和设置任意进程的资源限制", "resource.html#resource.getrusage": "此函数返回描述由当前进程或其子进程消耗的资源的对象，由who参数指定", "resource.html#resource.getpagesize": "返回系统页面中的字节数", "resource.html#resource.RLIM_INFINITY": "常量用于表示无限资源的限制", "resource.html#resource.RLIMIT_CORE": "当前进程可以创建的核心文件的最大大小（以字节为单位）", "resource.html#resource.RLIMIT_CPU": "进程可以使用的最大处理器时间量（以秒为单位）", "resource.html#resource.RLIMIT_FSIZE": "进程可能创建的文件的最大大小", "resource.html#resource.RLIMIT_DATA": "进程堆的最大大小（以字节为单位）", "resource.html#resource.RLIMIT_STACK": "当前进程的调用堆栈的最大大小（以字节为单位）", "resource.html#resource.RLIMIT_RSS": "应该为进程提供的最大驻留集大小", "resource.html#resource.RLIMIT_NPROC": "", "resource.html#resource.RLIMIT_NOFILE": "当前进程的打开文件描述器的最大数量", "resource.html#resource.RLIMIT_OFILE": "RLIMIT_NOFILE的BSD名称", "resource.html#resource.RLIMIT_MEMLOCK": "可以在内存中锁定的最大地址空间", "resource.html#resource.RLIMIT_VMEM": "过程可能占用的映射内存的最大区域", "resource.html#resource.RLIMIT_AS": "进程可能占用的地址空间的最大区域（以字节为单位）", "resource.html#resource.RLIMIT_MSGQUEUE": "可分配给POSIX消息队列的字节数", "resource.html#resource.RLIMIT_NICE": "进程的最高级别的水平（计算为20  -  rlim_cur）", "resource.html#resource.RLIMIT_RTPRIO": "实时优先级的上限", "resource.html#resource.RLIMIT_RTTIME": "进程可以在实时调度下花费的CPU时间的时间限制（以微秒为单位），而不会阻塞系统调用", "resource.html#resource.RLIMIT_SIGPENDING": "进程可能排队的信号数", "resource.html#resource.RLIMIT_SBSIZE": "此用户的套接字缓冲区使用的最大大小（以字节为单位）", "resource.html#resource.RLIMIT_SWAP": "可由此用户ID的所有进程保留或使用的交换空间的最大大小（以字节为单位）", "resource.html#resource.RLIMIT_NPTS": "此用户ID创建的伪终端的最大数量", "resource.html#resource.RUSAGE_SELF": "传递到getrusage()以请求调用进程消耗的资源，这是进程中的所有线程使用的资源的总和", "resource.html#resource.RUSAGE_CHILDREN": "传递到getrusage()以请求已终止并等待的调用进程的子进程消耗的资源", "resource.html#resource.RUSAGE_BOTH": "Pass to getrusage() to request resources consumed by both the current process and child processes", "resource.html#resource.RUSAGE_THREAD": "传递到getrusage()以请求当前线程使用的资源", "runpy.html#runpy.run_module": "执行指定模块的代码，并返回结果模块全局字典", "runpy.html#runpy.run_path": "在指定的文件系统位置执行代码，并返回结果模块全局字典", "select.html#select.devpoll": "（仅在Solaris和衍生产品上受支持", "select.html#select.epoll": "（仅在Linux 2", "select.html#select.poll": "（不受所有操作系统支持", "select.html#select.kqueue": "（仅在BSD上支持", "select.html#select.kevent": "（仅在BSD上支持", "select.html#select.select": "这是Unix select()系统调用的简单接口", "shelve.html#shelve.open": "打开持久性字典", "shlex.html#shlex.split": "使用类shell语法拆分字符串s", "shlex.html#shlex.quote": "返回字符串s的shell转义版本", "shutil.html#shutil.copyfileobj": "将类似文件的对象fsrc的内容复制到类似文件的对象fdst", "shutil.html#shutil.copyfile": "将名为src的文件的内容（无元数据）复制到名为dst的文件，然后返回dst", "shutil.html#shutil.copymode": "将权限位从src复制到dst", "shutil.html#shutil.copystat": "将权限位，最后访问时间，上次修改时间和标志从src复制到dst", "shutil.html#shutil.copy": "将文件src复制到文件或目录dst", "shutil.html#shutil.copy2": "与copy()相同，但copy2()也尝试保留所有文件元数据", "shutil.html#shutil.ignore_patterns": "此工厂函数创建一个函数，可用作copytree()的忽略参数的可调用函数，忽略与glob类型模式", "shutil.html#shutil.copytree": "递归地复制以src为根的整个目录树，返回目标目录", "shutil.html#shutil.rmtree": "删除整个目录树； 路径必须指向目录（而不是指向目录的符号链接）", "shutil.html#shutil.move": "递归地将文件或目录（src）移动到另一个位置（dst），并返回目标", "shutil.html#shutil.disk_usage": "将给定路径的磁盘使用情况统计信息作为named tuple返回总计，使用和免费是总的，已用和可用空间的量，以字节为单位", "shutil.html#shutil.chown": "更改给定路径的所有者用户和/或组", "shutil.html#shutil.which": "返回可执行文件的路径，如果给定的cmd被调用，它将运行", "shutil.html#shutil.make_archive": "创建归档文件（例如zip或tar）并返回其名称", "shutil.html#shutil.get_archive_formats": "返回支持的归档格式列表", "shutil.html#shutil.register_archive_format": "为格式名称注册档案库", "shutil.html#shutil.unregister_archive_format": "从支持的格式列表中删除归档格式名称", "shutil.html#shutil.unpack_archive": "分拆归档", "shutil.html#shutil.register_unpack_format": "注册分拆格式", "shutil.html#shutil.unregister_unpack_format": "取消注册分拆格式", "shutil.html#shutil.get_unpack_formats": "返回分拆的所有注册格式的列表", "shutil.html#shutil.get_terminal_size": "获取终端窗口的大小", "signal.html#signal.alarm": "如果时间不为零，则此功能请求在时间秒内将SIGALRM信号发送到过程", "signal.html#signal.getsignal": "返回信号signalnum的当前信号处理程序", "signal.html#signal.pause": "使该过程睡眠直到接收到信号；那么将调用适当的处理程序", "signal.html#signal.pthread_kill": "将信号signalnum发送到线程thread_id，这是与调用者相同的进程中的另一个线程", "signal.html#signal.pthread_sigmask": "获取和/或更改调用线程的信号掩码", "signal.html#signal.setitimer": "设置由指定的给定间隔定时器（signal", "signal.html#signal.getitimer": "返回由指定的给定间隔定时器的当前值，其中", "signal.html#signal.set_wakeup_fd": "将唤醒文件描述器设置为fd", "signal.html#signal.siginterrupt": "更改系统呼叫重新启动行为：如果标志为False，系统呼叫将在由信号signalnum中断时重新启动，否则系统呼叫将中断", "signal.html#signal.signal": "将信号signalnum的处理程序设置为处理程序", "signal.html#signal.sigpending": "检查等待传递到调用线程的信号集合（即，在阻塞时已经产生的信号）", "signal.html#signal.sigwait": "挂起调用线程的执行，直到发送信号集sigset中指定的信号之一", "signal.html#signal.sigwaitinfo": "挂起调用线程的执行，直到发送信号集sigset中指定的信号之一", "signal.html#signal.sigtimedwait": "像sigwaitinfo()，但是需要一个额外的超时参数指定超时", "signal.html#signal.SIG_DFL": "这是两个标准信号处理选项之一；它将简单地执行信号的默认功能", "signal.html#signal.SIG_IGN": "这是另一个标准信号处理程序，它将简单地忽略给定的信号", "signal.html#signal.CTRL_C_EVENT": "对应于Ctrl+C击键事件的信号", "signal.html#signal.CTRL_BREAK_EVENT": "对应于Ctrl+Break击键事件的信号", "signal.html#signal.NSIG": "一个多于最高信号数的数", "signal.html#signal.ITIMER_REAL": "实时递减间隔定时器，并在到期时递送SIGALRM", "signal.html#signal.ITIMER_VIRTUAL": "仅在进程正在执行时减少间隔定时器，并在到期时传递SIGVTALRM", "signal.html#signal.ITIMER_PROF": "递减间隔定时器，当进程执行时和系统代表进程执行时", "signal.html#signal.SIG_BLOCK": "如何参数到pthread_sigmask()的可能值，表示要阻止信号", "signal.html#signal.SIG_UNBLOCK": "如何参数到pthread_sigmask()的可能值，表示要解除阻塞信号", "signal.html#signal.SIG_SETMASK": "如何参数到pthread_sigmask()的可能值，表示要替换信号掩码", "site.html#site.main": "将所有标准站点特定目录添加到模块搜索路径", "site.html#site.addsitedir": "将目录添加到sys", "site.html#site.getsitepackages": "返回一个包含所有全局site-packages目录的列表", "site.html#site.getuserbase": "返回用户基本目录USER_BASE的路径", "site.html#site.getusersitepackages": "返回用户特定的site-packages目录USER_SITE的路径", "site.html#site.PREFIXES": "site-packages目录的前缀列表", "site.html#site.ENABLE_USER_SITE": "标志显示用户site-packages目录的状态", "sndhdr.html#sndhdr.what": "使用whathdr()确定存储在文件filename中的声音数据类型", "sndhdr.html#sndhdr.whathdr": "基于文件头确定存储在文件中的声音数据的类型", "socket.html#socket.socket": "使用给定的地址族、套接字类型和协议号创建一个新的套接字", "socket.html#socket.socketpair": "使用所给的地址族，套接字类型和协议号创建一对已连接的socket 对象", "socket.html#socket.create_connection": "连接到监听网络地址(一个2-tuple(host,port)),然后返回`socket`对象", "socket.html#socket.fromfd": "复制文件描述符fd（由文件对象的fileno（）方法返回的整数），并根据结果构建一个套接字对象", "socket.html#socket.fromshare": "使用从`socket", "socket.html#socket.getaddrinfo": "将 host/port 参数转换为一个5元组序列，其中包含创建连接到该服务的套接字的所有必要参数", "socket.html#socket.getfqdn": "Return a fully qualified domain name for name", "socket.html#socket.gethostbyname": "将主机名转换为IPv4地址格式", "socket.html#socket.gethostbyname_ex": "Translate a host name to IPv4 address format, extended interface", "socket.html#socket.gethostname": "Return a string containing the hostname of the machine where the Python interpreter is currently executing", "socket.html#socket.gethostbyaddr": "Return a triple (hostname, aliaslist, ipaddrlist) where hostname is the primary host name responding to the given ip_address, aliaslist is a (possibly empty) list of alternative host names for the same address, and ipaddrlist is a list of IPv4/v6 addresses for the same interface on the same host (most likely containing only a single address)", "socket.html#socket.getnameinfo": "Translate a socket address sockaddr into a 2-tuple (host, port)", "socket.html#socket.getprotobyname": "Translate an Internet protocol name (for example, 'icmp') to a constant suitable for passing as the (optional) third argument to the socket() function", "socket.html#socket.getservbyname": "Translate an Internet service name and protocol name to a port number for that service", "socket.html#socket.getservbyport": "Translate an Internet port number and protocol name to a service name for that service", "socket.html#socket.ntohl": "将32位正整数从网络字节顺序转换为主机字节顺序", "socket.html#socket.ntohs": "Convert 16-bit positive integers from network to host byte order", "socket.html#socket.htonl": "Convert 32-bit positive integers from host to network byte order", "socket.html#socket.htons": "Convert 16-bit positive integers from host to network byte order", "socket.html#socket.inet_aton": "Convert an IPv4 address from dotted-quad string format (for example, ‘123", "socket.html#socket.inet_ntoa": "Convert a 32-bit packed IPv4 address (a bytes-like object four bytes in length) to its standard dotted-quad string representation (for example, ‘123", "socket.html#socket.inet_pton": "将IP地址从其特定类型的字符串格式转换为压缩的二进制格式", "socket.html#socket.inet_ntop": "Convert a packed IP address (a bytes-like object of some number of bytes) to its standard, family-specific string representation (for example, '7", "socket.html#socket.CMSG_LEN": "Return the total length, without trailing padding, of an ancillary data item with associated data of the given length", "socket.html#socket.CMSG_SPACE": "Return the buffer size needed for recvmsg() to receive an ancillary data item with associated data of the given length, along with any trailing padding", "socket.html#socket.getdefaulttimeout": "返回新套接字对象的默认超时值（以秒为单位）（浮点数）", "socket.html#socket.setdefaulttimeout": "为新的套接字对象设置默认超时（以秒为单位）（float）", "socket.html#socket.sethostname": "将计算机的主机名设置为名称", "socket.html#socket.if_nameindex": "Return a list of network interface information (index int, name string) tuples", "socket.html#socket.if_nametoindex": "Return a network interface index number corresponding to an interface name", "socket.html#socket.if_indextoname": "Return a network interface name corresponding to an interface index number", "socket.html#socket.AF_UNIX": "这些常量表示地址（和协议）族，用于 socket() 的第一个参数", "socket.html#socket.SOCK_STREAM": "这些常量表示套接字类型，用于 socket() 的第二个参数", "socket.html#socket.SOCK_CLOEXEC": "这两个常量（如果已定义）可以与套接字类型结合使用，并允许你以原子方式设置一些标志（从而避免可能的竞争条件和需要单独调用）", "socket.html#socket.AF_CAN": "Many constants of these forms, documented in the Linux documentation, are also defined in the socket module", "socket.html#socket.CAN_BCM": "CAN_BCM, in the CAN protocol family, is the broadcast manager (BCM) protocol", "socket.html#socket.CAN_RAW_FD_FRAMES": "Enables CAN FD support in a CAN_RAW socket", "socket.html#socket.AF_RDS": "Many constants of these forms, documented in the Linux documentation, are also defined in the socket module", "socket.html#socket.AF_LINK": "Availability: BSD, OSX", "socket.html#socket.has_ipv6": "This constant contains a boolean value which indicates if IPv6 is supported on this platform", "socket.html#socket.BDADDR_ANY": "These are string constants containing Bluetooth addresses with special meanings", "socket.html#socket.HCI_FILTER": "For use with BTPROTO_HCI", "socket.html#socket.SocketType": "这是一个代表socket对象类型的Python类型对象", "spwd.html#spwd.getspnam": "返回给定用户名的影子密码数据库条目", "spwd.html#spwd.getspall": "以任意顺序返回所有可用shadow密码数据库条目的列表", "sqlite3.html#sqlite3.connect": "打开到SQLite数据库文件database的连接", "sqlite3.html#sqlite3.register_converter": "注册可调用对象用来将来自数据库的bytestring转换成为自定义的Python类型", "sqlite3.html#sqlite3.register_adapter": "注册可调用对象用来将自定义的 Python 类型type转换为 SQLite 的支持的类型", "sqlite3.html#sqlite3.complete_statement": "如果字符串sql包含一个或多个以分号结束的完整的SQL语句则返回True", "sqlite3.html#sqlite3.enable_callback_tracebacks": "默认情况下你不会在用户定义的函数、 聚合、 转换器、 授权者回调等地方得到回溯对象（调用栈对象）", "sqlite3.html#sqlite3.version": "该模块的字符串形式的版本号", "sqlite3.html#sqlite3.version_info": "该模块的整数元组形式的版本号", "sqlite3.html#sqlite3.sqlite_version": "运行期SQLite库的版本号，字符串形式", "sqlite3.html#sqlite3.sqlite_version_info": "运行期SQLite库的版本号，整数元组形式", "sqlite3.html#sqlite3.PARSE_DECLTYPES": "该常量用于connect()函数的detect_types参数", "sqlite3.html#sqlite3.PARSE_COLNAMES": "该常量用于connect()函数的detect_types参数", "ssl.html#ssl.wrap_socket": "Takes an instance sock of socket", "ssl.html#ssl.create_default_context": "Return a new SSLContext object with default settings for the given purpose", "ssl.html#ssl.RAND_bytes": "Return num cryptographically strong pseudo-random bytes", "ssl.html#ssl.RAND_pseudo_bytes": "Return (bytes, is_cryptographic): bytes are num pseudo-random bytes, is_cryptographic is True if the bytes generated are cryptographically strong", "ssl.html#ssl.RAND_status": "Return True if the SSL pseudo-random number generator has been seeded with ‘enough’ randomness, and False otherwise", "ssl.html#ssl.RAND_egd": "If you are running an entropy-gathering daemon (EGD) somewhere, and path is the pathname of a socket connection open to it, this will read 256 bytes of randomness from the socket, and add it to the SSL pseudo-random number generator to increase the security of generated secret keys", "ssl.html#ssl.RAND_add": "Mix the given bytes into the SSL pseudo-random number generator", "ssl.html#ssl.match_hostname": "Verify that cert (in decoded format as returned by SSLSocket", "ssl.html#ssl.cert_time_to_seconds": "Return the time in seconds since the Epoch, given the cert_time string representing the “notBefore” or “notAfter” date from a certificate in &quot;%b %d %H:%M:%S %Y %Z&quot; strptime format (C locale)", "ssl.html#ssl.get_server_certificate": "Given the address addr of an SSL-protected server, as a (hostname, port-number) pair, fetches the server’s certificate, and returns it as a PEM-encoded string", "ssl.html#ssl.DER_cert_to_PEM_cert": "Given a certificate as a DER-encoded blob of bytes, returns a PEM-encoded string version of the same certificate", "ssl.html#ssl.PEM_cert_to_DER_cert": "Given a certificate as an ASCII PEM string, returns a DER-encoded sequence of bytes for that same certificate", "ssl.html#ssl.get_default_verify_paths": "Returns a named tuple with paths to OpenSSL’s default cafile and capath", "ssl.html#ssl.enum_certificates": "Retrieve certificates from Windows’ system cert store", "ssl.html#ssl.enum_crls": "Retrieve CRLs from Windows’ system cert store", "ssl.html#ssl.CERT_NONE": "Possible value for SSLContext", "ssl.html#ssl.CERT_OPTIONAL": "Possible value for SSLContext", "ssl.html#ssl.CERT_REQUIRED": "Possible value for SSLContext", "ssl.html#ssl.VERIFY_DEFAULT": "Possible value for SSLContext", "ssl.html#ssl.VERIFY_CRL_CHECK_LEAF": "Possible value for SSLContext", "ssl.html#ssl.VERIFY_CRL_CHECK_CHAIN": "Possible value for SSLContext", "ssl.html#ssl.VERIFY_X509_STRICT": "Possible value for SSLContext", "ssl.html#ssl.VERIFY_X509_TRUSTED_FIRST": "Possible value for SSLContext", "ssl.html#ssl.PROTOCOL_SSLv23": "Selects the highest protocol version that both the client and server support", "ssl.html#ssl.PROTOCOL_SSLv2": "Selects SSL version 2 as the channel encryption protocol", "ssl.html#ssl.PROTOCOL_SSLv3": "Selects SSL version 3 as the channel encryption protocol", "ssl.html#ssl.PROTOCOL_TLSv1": "Selects TLS version 1", "ssl.html#ssl.PROTOCOL_TLSv1_1": "Selects TLS version 1", "ssl.html#ssl.PROTOCOL_TLSv1_2": "使用TLSv1", "ssl.html#ssl.OP_ALL": "Enables workarounds for various bugs present in other SSL implementations", "ssl.html#ssl.OP_NO_SSLv2": "Prevents an SSLv2 connection", "ssl.html#ssl.OP_NO_SSLv3": "Prevents an SSLv3 connection", "ssl.html#ssl.OP_NO_TLSv1": "Prevents a TLSv1 connection", "ssl.html#ssl.OP_NO_TLSv1_1": "Prevents a TLSv1", "ssl.html#ssl.OP_NO_TLSv1_2": "Prevents a TLSv1", "ssl.html#ssl.OP_CIPHER_SERVER_PREFERENCE": "Use the server’s cipher ordering preference, rather than the client’s", "ssl.html#ssl.OP_SINGLE_DH_USE": "Prevents re-use of the same DH key for distinct SSL sessions", "ssl.html#ssl.OP_SINGLE_ECDH_USE": "Prevents re-use of the same ECDH key for distinct SSL sessions", "ssl.html#ssl.OP_NO_COMPRESSION": "Disable compression on the SSL channel", "ssl.html#ssl.HAS_ALPN": "Whether the OpenSSL library has built-in support for the Application-Layer Protocol Negotiation TLS extension as described in RFC 7301", "ssl.html#ssl.HAS_ECDH": "Whether the OpenSSL library has built-in support for Elliptic Curve-based Diffie-Hellman key exchange", "ssl.html#ssl.HAS_SNI": "Whether the OpenSSL library has built-in support for the Server Name Indication extension (as defined in RFC 4366)", "ssl.html#ssl.HAS_NPN": "Whether the OpenSSL library has built-in support for Next Protocol Negotiation as described in the NPN draft specification", "ssl.html#ssl.CHANNEL_BINDING_TYPES": "List of supported TLS channel binding types", "ssl.html#ssl.OPENSSL_VERSION": "The version string of the OpenSSL library loaded by the interpreter:", "ssl.html#ssl.OPENSSL_VERSION_INFO": "A tuple of five integers representing version information about the OpenSSL library:", "ssl.html#ssl.OPENSSL_VERSION_NUMBER": "The raw version number of the OpenSSL library, as a single integer:", "ssl.html#ssl.ALERT_DESCRIPTION_HANDSHAKE_FAILURE": "Alert Descriptions from RFC 5246 and others", "ssl.html#ssl.Purpose.SERVER_AUTH": "Option for create_default_context() and SSLContext", "ssl.html#ssl.Purpose.CLIENT_AUTH": "Option for create_default_context() and SSLContext", "stat.html#stat.S_ISDIR": "如果mode来自一个目录，返回非零", "stat.html#stat.S_ISCHR": "如果mode来自特殊的字符设备文件，返回非零", "stat.html#stat.S_ISBLK": "如果mode来自特殊的块设备文件，返回非零", "stat.html#stat.S_ISREG": "如果mode来自一个正常的文件，返回非零", "stat.html#stat.S_ISFIFO": "如果mode来自FIFO（命名管道），返回非零", "stat.html#stat.S_ISLNK": "如果mode来自一个符号链接，返回非零", "stat.html#stat.S_ISSOCK": "如果mode来自一个套接字，返回非零", "stat.html#stat.S_ISDOOR": "如果模式是从门返回非零", "stat.html#stat.S_ISPORT": "如果模式来自事件端口，则返回非零", "stat.html#stat.S_ISWHT": "如果模式来自白光，返回非零", "stat.html#stat.S_IMODE": "返回可以由os", "stat.html#stat.S_IFMT": "返回描述文件类型的文件模式部分（由上面的S_IS*()函数使用）", "stat.html#stat.filemode": "将文件的模式转换为格式为'-rwxrwxrwx'的字符串", "stat.html#stat.ST_MODE": "inode 保护模式", "stat.html#stat.ST_INO": "inode 节点号", "stat.html#stat.ST_DEV": "inode 驻留的设备", "stat.html#stat.ST_NLINK": "inode 的链接数", "stat.html#stat.ST_UID": "所有者的用户ID", "stat.html#stat.ST_GID": "所有者的组ID", "stat.html#stat.ST_SIZE": "一个普通文件的字节大小；等待某些特殊文件的数据量", "stat.html#stat.ST_ATIME": "上次访问的时间", "stat.html#stat.ST_MTIME": "最后一次修改的时间", "stat.html#stat.ST_CTIME": "由操作系统报告的&quot;ctime&quot;", "stat.html#stat.S_IFSOCK": "套接字", "stat.html#stat.S_IFLNK": "符号链接", "stat.html#stat.S_IFREG": "常规文件", "stat.html#stat.S_IFBLK": "块设备", "stat.html#stat.S_IFDIR": "目录", "stat.html#stat.S_IFCHR": "字符设备", "stat.html#stat.S_IFIFO": "先进先出", "stat.html#stat.S_IFDOOR": "门", "stat.html#stat.S_IFPORT": "事件端口", "stat.html#stat.S_IFWHT": "Whiteout", "stat.html#stat.S_ISUID": "设置 UID 位", "stat.html#stat.S_ISGID": "设置组 ID 位", "stat.html#stat.S_ISVTX": "粘滞位", "stat.html#stat.S_IRWXU": "文件所有者权限掩码", "stat.html#stat.S_IRUSR": "所有者拥有读取权限", "stat.html#stat.S_IWUSR": "所有者具有写入权限", "stat.html#stat.S_IXUSR": "所有者具有执行权限", "stat.html#stat.S_IRWXG": "组权限掩码", "stat.html#stat.S_IRGRP": "组具有读取权限", "stat.html#stat.S_IWGRP": "组具有写入权限", "stat.html#stat.S_IXGRP": "组具有执行权限", "stat.html#stat.S_IRWXO": "其他人（不在组中的人）的权限掩码", "stat.html#stat.S_IROTH": "其他人具有读取权限", "stat.html#stat.S_IWOTH": "其他人具有写入权限", "stat.html#stat.S_IXOTH": "其他人具有执行权限", "stat.html#stat.S_ENFMT": "V 系统文件锁定的执法行动", "stat.html#stat.S_IREAD": "S_IRUSR的Unix V7同义词", "stat.html#stat.S_IWRITE": "S_IWUSR的Unix V7同义词", "stat.html#stat.S_IEXEC": "S_IXUSR的Unix V7同义词", "stat.html#stat.UF_NODUMP": "不转储文件", "stat.html#stat.UF_IMMUTABLE": "该文件不能更改", "stat.html#stat.UF_APPEND": "该文件可能只被追加到", "stat.html#stat.UF_OPAQUE": "该目录是不透明的通过联盟的堆栈查看时", "stat.html#stat.UF_NOUNLINK": "该文件可能不能重命名或删除", "stat.html#stat.UF_COMPRESSED": "该文件存储压缩 （Mac OS X 10", "stat.html#stat.UF_HIDDEN": "该文件不应显示在GUI中（Mac OS X 10", "stat.html#stat.SF_ARCHIVED": "该文件可能被存档", "stat.html#stat.SF_IMMUTABLE": "该文件不能更改", "stat.html#stat.SF_APPEND": "该文件可能只被追加到", "stat.html#stat.SF_NOUNLINK": "该文件可能不能重命名或删除", "stat.html#stat.SF_SNAPSHOT": "该文件是一个快照文件", "stat.html#stat.FILE_ATTRIBUTE_ARCHIVE": "版本3", "statistics.html#statistics.mean": "返回数据的样本算术平均值，实数值的序列或迭代器", "statistics.html#statistics.median": "使用常用的“中间两个平均值”方法返回数值数据的中值（中间值）", "statistics.html#statistics.median_low": "返回数值数据的低中位数", "statistics.html#statistics.median_high": "返回数据的高中位数", "statistics.html#statistics.median_grouped": "使用内插法返回分组连续数据的中值，计算为第50个百分位数", "statistics.html#statistics.mode": "从离散或标称数据返回最常用的数据点", "statistics.html#statistics.pstdev": "返回总体标准差（总体方差的平方根）", "statistics.html#statistics.pvariance": "返回数据的总体方差，实数值的非空迭代", "statistics.html#statistics.stdev": "返回样本标准偏差（样本方差的平方根）", "statistics.html#statistics.variance": "返回数据的样本方差，这是至少两个实数值的迭代", "string.html#string.capwords": "使用str", "string.html#string.ascii_letters": "与此级联（即包含）的 ascii_lowercase 和 ascii_uppercase 描述见下文", "string.html#string.ascii_lowercase": "小写字母 'abcdefghijklmnopqrstuvwxyz'", "string.html#string.ascii_uppercase": "大写字母 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'", "string.html#string.digits": "字符串 '0123456789'", "string.html#string.hexdigits": "字符串 '0123456789abcdefABCDEF'", "string.html#string.octdigits": "字符串'01234567'", "string.html#string.punctuation": "在 C语言 中被定义为ASCII 字符的字符集合而成的字符串", "string.html#string.printable": "被定义为printable的ASCII 字符集合而成的字符串，这是一个包含了 位数, ascii字符, 标点符号, 和空格", "string.html#string.whitespace": "包含所有ASCII中可当作空白的字符集合而成的字符串", "stringprep.html#stringprep.in_table_a1": "确定代码是否在表A", "stringprep.html#stringprep.in_table_b1": "确定代码是否在表B", "stringprep.html#stringprep.map_table_b2": "根据表B", "stringprep.html#stringprep.map_table_b3": "根据表B", "stringprep.html#stringprep.in_table_c11": "确定代码是否在表C", "stringprep.html#stringprep.in_table_c12": "确定代码是否在表C", "stringprep.html#stringprep.in_table_c11_c12": "确定代码是否在表C1（空间字符，C", "stringprep.html#stringprep.in_table_c21": "确定代码是否在表C", "stringprep.html#stringprep.in_table_c22": "确定代码是否在表C", "stringprep.html#stringprep.in_table_c21_c22": "确定代码是否在表C", "stringprep.html#stringprep.in_table_c3": "确定代码是否在表C3（私人使用）中", "stringprep.html#stringprep.in_table_c4": "确定代码是否在表C", "stringprep.html#stringprep.in_table_c5": "确定代码是否在表C5（代理代码）中", "stringprep.html#stringprep.in_table_c6": "确定代码是否在表C", "stringprep.html#stringprep.in_table_c7": "确定代码是否在表C", "stringprep.html#stringprep.in_table_c8": "确定代码是否在表C", "stringprep.html#stringprep.in_table_c9": "确定代码是否在表C", "stringprep.html#stringprep.in_table_d1": "确定代码是否在表D", "stringprep.html#stringprep.in_table_d2": "确定代码是否在表D", "struct.html#struct.pack": "Return a bytes object containing the values v1, v2, ", "struct.html#struct.pack_into": "根据格式字符串fmt封装值v1，v2，并将压缩字节写入可写缓冲区缓冲区从位置偏移开始", "struct.html#struct.unpack": "从缓冲器缓冲器分离（假定由pack（fmt， ", "struct.html#struct.unpack_from": "根据格式字符串fmt从缓冲区开始分离偏移", "struct.html#struct.iter_unpack": "根据格式字符串fmt从缓冲区缓冲区中迭代分离", "struct.html#struct.calcsize": "返回对应于格式字符串的结构（以及由此产生的pack（fmt， ", "subprocess.html#subprocess.run": "运行args描述的命令", "subprocess.html#subprocess.call": "执行args 描述的命令", "subprocess.html#subprocess.check_call": "执行带参数的命令", "subprocess.html#subprocess.check_output": "使用参数运行命令并返回其输出", "subprocess.html#subprocess.getstatusoutput": "返回在shell中执行cmd的(status, output)", "subprocess.html#subprocess.getoutput": "返回在shell中执行cmd的输出（标准输出和标准错误）", "subprocess.html#subprocess.DEVNULL": "可用作Popen的stdin、stdout或stderr参数的特殊值，指示将使用os", "subprocess.html#subprocess.PIPE": "可用作Popen的stdin、stdout或stderr参数的特殊值，表示应打开相应标准流的管道", "subprocess.html#subprocess.STDOUT": "可用作Popen的stderr参数的特殊值，表示标准错误应与标准输出放在同一句柄中", "subprocess.html#subprocess.STD_INPUT_HANDLE": "标准输入设备", "subprocess.html#subprocess.STD_OUTPUT_HANDLE": "标准输出设备", "subprocess.html#subprocess.STD_ERROR_HANDLE": "标准错误设备", "subprocess.html#subprocess.SW_HIDE": "隐藏窗口", "subprocess.html#subprocess.STARTF_USESTDHANDLES": "表示STARTUPINFO", "subprocess.html#subprocess.STARTF_USESHOWWINDOW": "表示STARTUPINFO", "subprocess.html#subprocess.CREATE_NEW_CONSOLE": "新的进程将具有一个新的控制台，而不是继承它父进程的控制台（默认行为）", "subprocess.html#subprocess.CREATE_NEW_PROCESS_GROUP": "一个Popen creationflags参数，以指定将创建一个新进程组", "sunau.html#sunau.open": "如果文件是字符串，请按该名称打开该文件，否则将其视为可搜索的类文件对象", "sunau.html#sunau.openfp": "为维持向后兼容性的open()的同义词", "sunau.html#sunau.AUDIO_FILE_MAGIC": "每个有效的Sun AU文件的整数开始，以big-endian形式存储", "sunau.html#sunau.AUDIO_FILE_ENCODING_MULAW_8": "此模块支持的AU头中的编码字段的值", "sunau.html#sunau.AUDIO_FILE_ENCODING_FLOAT": "来自AU头的编码字段的其他已知值，但不受此模块支持", "symbol.html#symbol.sym_name": "将此模块中定义的常量的数字值映射回名称字符串的字典，从而允许生成更加人性化的解析树表示", "symtable.html#symtable.symtable": "返回对于Python源代码代码的toplevel SymbolTable", "sys.html#sys.call_tracing": "在跟踪启用时调用func(*args)", "sys.html#sys._clear_type_cache": "清除内部类型缓存", "sys.html#sys._current_frames": "返回一个字典，该函数被调用时，将每个线程的标识符映射到当前在该线程中处于活动状态的最上面的堆栈帧", "sys.html#sys._debugmallocstats": "打印低级别信息以了解CPython内存分配器的状态", "sys.html#sys.displayhook": "如果值不是None，则此函数将repr(value)打印到sys", "sys.html#sys.excepthook": "这个函数打印出一个给定的回溯和例外情况给sys", "sys.html#sys.exc_info": "这个函数返回一个包含三个值的元组，该元组提供有关当前正在处理的异常的信息", "sys.html#sys.exit": "从Python退出", "sys.html#sys.getallocatedblocks": "不管大小如何，都返回当前由解释器分配的内存块数量", "sys.html#sys.getcheckinterval": "返回解释器的“检查间隔”；请参阅setcheckinterval()", "sys.html#sys.getdefaultencoding": "返回Unicode实现使用的当前默认字符串编码的名称", "sys.html#sys.getdlopenflags": "返回用于dlopen()调用的标志的当前值", "sys.html#sys.getfilesystemencoding": "返回用于将Unicode文件名转换为系统文件名的编码名称", "sys.html#sys.getrefcount": "返回对象的引用计数", "sys.html#sys.getrecursionlimit": "返回递归限制的当前值，即Python解释器堆栈的最大深度", "sys.html#sys.getsizeof": "以字节为单位返回对象的大小", "sys.html#sys.getswitchinterval": "返回解释器的“线程切换间隔”；请参阅setswitchinterval()", "sys.html#sys._getframe": "从调用堆栈中返回一个框架对象", "sys.html#sys.getprofile": "Get the profiler function as set by setprofile()", "sys.html#sys.gettrace": "获取由settrace()设置的跟踪函数", "sys.html#sys.getwindowsversion": "返回描述当前正在运行的Windows版本的命名元组", "sys.html#sys.get_coroutine_wrapper": "返回None，或由set_coroutine_wrapper()设置的包装器", "sys.html#sys.intern": "在“interned”字符串表中输入字符串，并返回字符串 -  字符串本身或副本", "sys.html#sys.is_finalizing": "如果Python解释器shutting down，则返回True，否则返回False", "sys.html#sys.setcheckinterval": "设置解释器的“检查间隔”", "sys.html#sys.setdlopenflags": "设置解释器用于dlopen()调用的标志，例如当解释器加载扩展模块时", "sys.html#sys.setrecursionlimit": "将Python解释器堆栈的最大深度设置为limit", "sys.html#sys.setswitchinterval": "设置解释器的线程切换间隔（以秒为单位）", "sys.html#sys.settrace": "设置系统的跟踪功能，它允许你在Python中实现一个Python源代码调试器", "sys.html#sys.settscdump": "如果on_flag为真，则使用Pentium时间戳计数器激活VM测量结果的转储", "sys.html#sys.set_coroutine_wrapper": "Allows intercepting creation of coroutine objects (only ones that are created by an async def function; generators decorated with types", "sys.html#sys.abiflags": "在使用标准configure脚本构建Python的POSIX系统上，它包含由 PEP 3149指定的ABI标志", "sys.html#sys.argv": "传递给Python脚本的命令行参数列表", "sys.html#sys.base_exec_prefix": "在Python启动过程中，在site", "sys.html#sys.base_prefix": "在Python启动过程中，在site", "sys.html#sys.byteorder": "本地字节顺序的指示符", "sys.html#sys.builtin_module_names": "一个字符串元组，给出了编译到这个Python解释器中的所有模块的名称", "sys.html#sys.copyright": "包含与Python解释器相关的版权的字符串", "sys.html#sys.dllhandle": "整数指定Python DLL的句柄", "sys.html#sys.dont_write_bytecode": "如果这是真的，Python将不会尝试在导入源模块时编写", "sys.html#sys.__displayhook__": "这些对象在程序开始时包含displayhook和excepthook的原始值", "sys.html#sys.exec_prefix": "一个字符串，其中给出了特定于站点的目录前缀，其中安装了与平台相关的Python文件；默认情况下，这也是'/usr/local'", "sys.html#sys.executable": "一个字符串，给出Python解释器的可执行二进制文件的绝对路径，在这种情况下是合理的", "sys.html#sys.flags": "struct sequence flags暴露了命令行标志的状态", "sys.html#sys.float_info": "包含关于浮点类型信息的struct sequence", "sys.html#sys.float_repr_style": "一个字符串，指示repr()函数如何为浮点操作", "sys.html#sys.hash_info": "给出数字散列实现参数的struct sequence", "sys.html#sys.hexversion": "版本号编码为单个整数", "sys.html#sys.implementation": "包含有关当前正在运行的Python解释器的实现信息的对象", "sys.html#sys.int_info": "一个struct sequence，它包含关于Python内部整数表示的信息", "sys.html#sys.__interactivehook__": "当该属性存在时，当解释器以interactive mode启动时，它的值会自动调用（不带参数）", "sys.html#sys.last_type": "这三个变量并不总是被定义的；它们在未处理异常时设置，并且解释器打印错误消息和堆栈回溯", "sys.html#sys.maxsize": "一个给出最大值的整数是一个Py_ssize_t类型的变量", "sys.html#sys.maxunicode": "一个给出最大Unicode码点值的整数，即1114111（0x10FFFF，十六进制）", "sys.html#sys.meta_path": "调用其find_spec()方法的meta path finder对象的列表，以查看其中一个对象是否可以找到要导入的模块", "sys.html#sys.modules": "这是一个将模块名称映射到已经加载的模块的字典", "sys.html#sys.path": "指定模块搜索路径的字符串列表", "sys.html#sys.path_hooks": "可以使用路径参数尝试为路径创建finder的可调用列表", "sys.html#sys.path_importer_cache": "作为finder对象缓存的字典", "sys.html#sys.platform": "例如，该字符串包含一个平台标识符，可用于将特定于平台的组件附加到sys", "sys.html#sys.prefix": "一个字符串，它给出了特定于站点的目录前缀，其中安装了与平台无关的Python文件；默认情况下，这是字符串'/usr/local'", "sys.html#sys.ps1": "指定解释器的主要和次要提示的字符串", "sys.html#sys.stdin": "解释器用于标准输入，输出和错误的File objects：", "sys.html#sys.__stdin__": "这些对象在程序开始时包含stdin，stderr和stdout的原始值", "sys.html#sys.thread_info": "包含关于线程实现的信息的struct sequence", "sys.html#sys.tracebacklimit": "当此变量设置为整数值时，它确定发生未处理的异常时打印的追溯信息的最大级别数", "sys.html#sys.version": "一个字符串，其中包含Python解释器的版本号以及所使用的内部版本号和编译器的附加信息", "sys.html#sys.api_version": "此解释器的C API版本", "sys.html#sys.version_info": "一个包含版本号五个组成部分的元组：major、minor、micro、releaselevel和serial", "sys.html#sys.warnoptions": "这是警告框架的实施细节；不要修改这个值", "sys.html#sys.winver": "用于在Windows平台上形成注册表项的版本号", "sys.html#sys._xoptions": "通过-X命令行选项传递的各种实现特定标志的字典", "sysconfig.html#sysconfig.get_config_vars": "没有参数，返回与当前平台相关的所有配置变量的字典", "sysconfig.html#sysconfig.get_config_var": "返回单个变量名称的值", "sysconfig.html#sysconfig.get_scheme_names": "返回包含sysconfig中当前支持的所有方案的元组", "sysconfig.html#sysconfig.get_path_names": "返回包含当前在sysconfig中支持的所有路径名的元组", "sysconfig.html#sysconfig.get_path": "从名为方案的安装方案中返回与路径名称对应的安装路径", "sysconfig.html#sysconfig.get_paths": "返回包含与安装方案对应的所有安装路径的字典", "sysconfig.html#sysconfig.get_python_version": "将MAJOR", "sysconfig.html#sysconfig.get_platform": "返回一个标识当前平台的字符串", "sysconfig.html#sysconfig.is_python_build": "如果当前Python安装是从源代码构建的，则返回True", "sysconfig.html#sysconfig.parse_config_h": "解析config", "sysconfig.html#sysconfig.get_config_h_filename": "返回pyconfig", "sysconfig.html#sysconfig.get_makefile_filename": "返回Makefile的路径", "syslog.html#syslog.syslog": "将字符串消息发送到系统记录器", "syslog.html#syslog.openlog": "可以通过调用openlog()来设置后续syslog()调用的日志记录选项", "syslog.html#syslog.closelog": "重置系统日志模块值并调用系统库closelog()", "syslog.html#syslog.setlogmask": "将优先级掩码设置为maskpri，并返回上一个掩码值", "tabnanny.html#tabnanny.check": "如果file_or_dir是目录而不是符号链接，则递归下降由file_or_dir命名的目录树，检查所有", "tabnanny.html#tabnanny.tokeneater": "此函数由check()用作函数tokenize", "tabnanny.html#tabnanny.verbose": "指示是否打印详细消息的标志", "tabnanny.html#tabnanny.filename_only": "指示是否仅打印包含空格相关问题的文件的文件名的标志", "tarfile.html#tarfile.open": "为路径名名称返回TarFile对象", "tarfile.html#tarfile.is_tarfile": "返回True如果名称是tar存档文件，tarfile模块可以读取", "tarfile.html#tarfile.ENCODING": "Windows上的默认字符编码：'utf-8'否则为sys", "tarfile.html#tarfile.USTAR_FORMAT": "POSIX", "tarfile.html#tarfile.GNU_FORMAT": "GNU tar格式", "tarfile.html#tarfile.PAX_FORMAT": "POSIX", "tarfile.html#tarfile.DEFAULT_FORMAT": "用于创建归档的默认格式", "tempfile.html#tempfile.TemporaryFile": "返回一个类文件对象以提供临时的数据存储空间", "tempfile.html#tempfile.NamedTemporaryFile": "此函数与TemporaryFile()完全一样，除了文件保证在文件系统中有一个可见的名称（在Unix上，目录项没有取消链接）", "tempfile.html#tempfile.SpooledTemporaryFile": "This function operates exactly as TemporaryFile() does, except that data is spooled in memory until the file size exceeds max_size, or until the file’s fileno() method is called, at which point the contents are written to disk and operation proceeds as with TemporaryFile()", "tempfile.html#tempfile.TemporaryDirectory": "此函数使用与mkdtemp()相同的规则安全地创建临时目录", "tempfile.html#tempfile.mkstemp": "以最安全的方式创建临时文件", "tempfile.html#tempfile.mkdtemp": "以最安全的方式创建临时目录", "tempfile.html#tempfile.gettempdir": "返回用于临时文件的目录的名称", "tempfile.html#tempfile.gettempdirb": "与gettempdir()相同，但返回值以字节为单位", "tempfile.html#tempfile.gettempprefix": "返回用于创建临时文件的文件名前缀", "tempfile.html#tempfile.gettempprefixb": "与gettempprefix()相同，但返回值以字节为单位", "tempfile.html#tempfile.mktemp": "从版本2", "tempfile.html#tempfile.tempdir": "当设置为除None之外的值时，此变量为此模块中定义的所有函数定义dir参数的默认值", "termios.html#termios.tcgetattr": "Return a list containing the tty attributes for file descriptor fd, as follows: [iflag, oflag, cflag, lflag, ispeed, ospeed, cc] where cc is a list of the tty special characters (each a string of length 1, except the items with indices VMIN and VTIME, which are integers when these fields are defined)", "termios.html#termios.tcsetattr": "从属性中设置文件描述器fd的tty属性，这是像tcgetattr()返回的列表", "termios.html#termios.tcsendbreak": "发送休息描述器fd", "termios.html#termios.tcdrain": "等待直到所有写入文件描述器fd的输出被发送", "termios.html#termios.tcflush": "舍弃队列中的数据描述器fd", "termios.html#termios.tcflow": "暂停或继续输入或输出到文件描述器fd", "test.html#test.support.forget": "从sys", "test.html#test.support.is_resource_enabled": "如果资源已启用并可用，则返回True", "test.html#test.support.requires": "引发ResourceDenied如果资源不可用", "test.html#test.support.findfile": "返回到名为filename的文件的路径", "test.html#test.support.run_unittest": "执行传递给函数的unittest", "test.html#test.support.run_doctest": "在给定的模块上运行doctest", "test.html#test.support.check_warnings": "warnings", "test.html#test.support.captured_stdin": "使用io", "test.html#test.support.temp_dir": "在路径创建临时目录并生成目录的上下文管理器", "test.html#test.support.change_cwd": "临时将当前工作目录更改为路径并生成目录的上下文管理器", "test.html#test.support.temp_cwd": "临时创建新目录并更改当前工作目录（CWD）的上下文管理器", "test.html#test.support.temp_umask": "临时设置进程umask的上下文管理器", "test.html#test.support.can_symlink": "如果操作系统支持符号链接，则返回True，否则返回False", "test.html#test.support.skip_unless_symlink": "一个装饰器，用于运行需要支持符号链接的测试", "test.html#test.support.anticipate_failure": "有条件地使用unittest", "test.html#test.support.run_with_locale": "装饰器，用于在不同的场所运行功能，在完成后正确地重置它", "test.html#test.support.make_bad_fd": "通过打开和关闭临时文件，并返回其描述器，创建一个无效的文件描述器", "test.html#test.support.import_module": "此函数导入并返回指定的模块", "test.html#test.support.import_fresh_module": "此函数通过在执行导入之前从sys", "test.html#test.support.bind_port": "将套接字绑定到一个空闲端口并返回端口号", "test.html#test.support.find_unused_port": "返回应该适合绑定的未使用端口", "test.html#test.support.load_package_tests": "通用实现用于测试包的unittest load_tests协议", "test.html#test.support.verbose": "True时启用详细输出", "test.html#test.support.is_jython": "True如果正在运行的解释器是Jython", "test.html#test.support.TESTFN": "设置为可安全用作临时文件名称的名称", "textwrap.html#textwrap.wrap": "将单个段落包含在text（一个字符串）中，以使每行最多width个字符长", "textwrap.html#textwrap.fill": "将单个段落包含在文本中，并返回包含包装段落的单个字符串", "textwrap.html#textwrap.shorten": "折叠并截断给定的文本以适合给定的宽度", "textwrap.html#textwrap.dedent": "从文本中的每一行中删除任何常见的前导空格", "textwrap.html#textwrap.indent": "将前缀添加到文本中选定行的开头", "threading.html#threading.active_count": "返回当前处于alive状态的Thread对象的个数", "threading.html#threading.current_thread": "返回当前的Thread对象，对应于调用者控制的线程", "threading.html#threading.get_ident": "返回当前线程的'线程标识符'", "threading.html#threading.enumerate": "返回当前活着的Thread对象的列表", "threading.html#threading.main_thread": "返回主 Thread 对象", "threading.html#threading.settrace": "为所有从threading模块启动的线程设置一个跟踪函数", "threading.html#threading.setprofile": "为所有从threading模块启动的线程设置一个profile函数", "threading.html#threading.stack_size": "返回创建新的线程时该线程使用的栈的大小", "threading.html#threading.TIMEOUT_MAX": "这个 timeout参数表示阻塞函数 (Lock", "time.html#time.asctime": "将表示由gmtime()或localtime()返回的时间的元组或struct_time转换为以下形式的字符串：'Sun Jun 20 23:21:05 1993' ", "time.html#time.clock": "在Unix上，返回当前处理器时间，以浮点数表示，以秒为单位", "time.html#time.clock_getres": "返回指定时钟clk_id的分辨率（精度）", "time.html#time.clock_gettime": "返回指定时钟clk_id的时间", "time.html#time.clock_settime": "设置指定时钟clk_id的时间", "time.html#time.ctime": "将从纪元开始以秒表示的时间转换为表示本地时间的字符串", "time.html#time.get_clock_info": "获取指定时钟作为命名空间对象的信息", "time.html#time.gmtime": "将从纪元开始以秒表示的时间转换为UTC中的struct_time，其中dst标志始终为零", "time.html#time.localtime": "像gmtime()但转换为本地时间", "time.html#time.mktime": "这是localtime()的反函数", "time.html#time.monotonic": "返回单调时钟的值（以分秒为单位），即一个不能倒退的时钟", "time.html#time.perf_counter": "返回性能计数器的值（以分数秒为单位），即具有最高可用分辨率的时钟来测量短持续时间", "time.html#time.process_time": "返回当前进程的系统和用户CPU时间之和的值（以分数秒为单位）", "time.html#time.sleep": "在给定的秒数内挂起调用线程的执行", "time.html#time.strftime": "将表示由gmtime()或localtime()返回的时间的元组或struct_time转换为由格式指定的字符串参数", "time.html#time.strptime": "根据格式解析表示时间的字符串", "time.html#time.time": "以秒为单位返回作为浮点数的时间", "time.html#time.tzset": "重置库例程使用的时间转换规则", "time.html#time.altzone": "默认情况返回一个以秒为单位UTC的本地DST时区偏移量，如果本地DST时区在UTC的东部（如在西欧，包括英国），则为负", "time.html#time.CLOCK_HIGHRES": "Solaris OS具有CLOCK_HIGHRES定时器，该定时器尝试使用最佳硬件源，并且可以提供接近纳秒的分辨率", "time.html#time.CLOCK_MONOTONIC": "无法设置的时钟，表示自某些未指定的起点后的单调时间", "time.html#time.CLOCK_MONOTONIC_RAW": "类似于CLOCK_MONOTONIC，但提供对不受NTP调整的基于硬件的原始时间的访问", "time.html#time.CLOCK_PROCESS_CPUTIME_ID": "来自CPU的高分辨率每进程定时器", "time.html#time.CLOCK_REALTIME": "系统级实时时钟", "time.html#time.CLOCK_THREAD_CPUTIME_ID": "线程特定的CPU时钟", "time.html#time.daylight": "如果定义了DST时区，则为非零", "time.html#time.timezone": "本地（非DST）时区的偏移量，以UTC以内的秒为单位（西欧大部分地区为负，美国为正，英国为零）", "time.html#time.tzname": "两个字符串的元组：第一个是本地非DST时区的名称，第二个是本地DST时区的名称", "timeit.html#timeit.timeit": "用给定的statement，setup代码和timer函数创建一个Timer实例，然后运行它的timeit()方法执行number指定的次数", "timeit.html#timeit.repeat": "用给定的statement，setup代码和timer函数创建一个Timer实例，并循环运行repeat()方法直到repeat指定的计数，每次计数中代码运行number指定的执行次数", "timeit.html#timeit.default_timer": "默认计时器，始终为time", "tkinter.html#tkinter.Tcl": "Tcl() 函数是一个工厂函数，创造了一个像那样 Tk 类创建的对象，除了它不会初始化Tk 子系统", "tkinter.html#tkinter.READABLE": "在掩码参数中使用的常量", "token.html#token.ISTERMINAL": "对终端令牌值返回true", "token.html#token.ISNONTERMINAL": "对非终端令牌值返回true", "token.html#token.ISEOF": "如果x是指示输入结束的标记，则返回true", "token.html#token.tok_name": "将此模块中定义的常量的数字值映射回名称字符串的字典，从而允许生成更加人性化的解析树表示", "token.html#token.ENDMARKER": "在3", "tokenize.html#tokenize.tokenize": "tokenize()生成器需要一个参数readline，它必须是一个可调用对象，它提供与io", "tokenize.html#tokenize.untokenize": "将令牌转换回Python源代码", "tokenize.html#tokenize.detect_encoding": "detect_encoding()函数用于检测应用于解码Python源文件的编码", "tokenize.html#tokenize.open": "使用由detect_encoding()检测到的编码以只读模式打开文件", "tokenize.html#tokenize.COMMENT": "用于表示注释的令牌值", "tokenize.html#tokenize.NL": "用于表示非终止换行符的令牌值", "tokenize.html#tokenize.ENCODING": "表示用于将源字节解码为文本的编码的令牌值", "traceback.html#traceback.print_tb": "如果limit为正，则从跟踪对象tb打印限制堆栈跟踪条目", "traceback.html#traceback.print_exception": "从追踪对象tb到文件中打印异常信息和堆栈跟踪条目", "traceback.html#traceback.print_exc": "这是print_exception（* sys", "traceback.html#traceback.print_last": "这是print_exception（sys", "traceback.html#traceback.print_stack": "如果limit为正，则打印到limit堆栈跟踪条目（从调用点开始）", "traceback.html#traceback.extract_tb": "返回从追溯对象tb提取的“预处理”堆栈跟踪条目的列表", "traceback.html#traceback.extract_stack": "从当前堆栈帧提取原始追溯", "traceback.html#traceback.format_list": "给定由extract_tb()或extract_stack()返回的元组列表，返回一个准备打印的字符串列表", "traceback.html#traceback.format_exception_only": "格式化回溯的异常部分", "traceback.html#traceback.format_exception": "格式化堆栈跟踪和异常信息", "traceback.html#traceback.format_exc": "这类似于print_exc(limit)但返回一个字符串，而不是打印到文件", "traceback.html#traceback.format_tb": "format_list（extract_tb（tb， limit））的简写", "traceback.html#traceback.format_stack": "format_list（extract_stack（f， limit））的简写", "traceback.html#traceback.clear_frames": "通过调用每个帧对象的clear()方法，清除回溯tb中所有堆栈帧的局部变量", "traceback.html#traceback.walk_stack": "从给定帧中跟踪f", "traceback.html#traceback.walk_tb": "在tb_next之后执行回溯，得到每个帧的帧和行号", "tracemalloc.html#tracemalloc.clear_traces": "清除Python分配的内存块的痕迹", "tracemalloc.html#tracemalloc.get_object_traceback": "获取分配了Python对象obj的traceback", "tracemalloc.html#tracemalloc.get_traceback_limit": "获取跟踪的回溯中存储的最大帧数", "tracemalloc.html#tracemalloc.get_traced_memory": "以tracemalloc模块作为元组获取由其跟踪的内存块的当前大小和峰值大小：（current： int，  peak： int）", "tracemalloc.html#tracemalloc.get_tracemalloc_memory": "获取用于存储内存块的跟踪的tracemalloc模块的内存使用情况（以字节为单位）", "tracemalloc.html#tracemalloc.is_tracing": "True如果tracemalloc模块正在跟踪Python内存分配，则False", "tracemalloc.html#tracemalloc.start": "开始跟踪Python内存分配：在Python内存分配器上安装钩子", "tracemalloc.html#tracemalloc.stop": "停止跟踪Python内存分配：卸载Python内存分配器上的钩子", "tracemalloc.html#tracemalloc.take_snapshot": "对由Python分配的内存块的痕迹进行快照", "tty.html#tty.setraw": "将文件描述器fd的模式更改为raw", "tty.html#tty.setcbreak": "将文件描述器fd的模式更改为cbreak", "turtle.html#turtle.forward": "按照指定的距离将龟向前移动", "turtle.html#turtle.back": "Move the turtle backward by distance, opposite to the direction the turtle is headed", "turtle.html#turtle.right": "Turn turtle right by angle units", "turtle.html#turtle.left": "Turn turtle left by angle units", "turtle.html#turtle.goto": "If y is None, x must be a pair of coordinates or a Vec2D (e", "turtle.html#turtle.setx": "Set the turtle’s first coordinate to x, leave second coordinate unchanged", "turtle.html#turtle.sety": "Set the turtle’s second coordinate to y, leave first coordinate unchanged", "turtle.html#turtle.setheading": "Set the orientation of the turtle to to_angle", "turtle.html#turtle.home": "Move turtle to the origin – coordinates (0,0) – and set its heading to its start-orientation (which depends on the mode, see mode())", "turtle.html#turtle.circle": "用给定的半径绘制一个圆圈", "turtle.html#turtle.dot": "Draw a circular dot with diameter size, using color", "turtle.html#turtle.stamp": "Stamp a copy of the turtle shape onto the canvas at the current turtle position", "turtle.html#turtle.clearstamp": "Delete stamp with given stampid", "turtle.html#turtle.clearstamps": "Delete all or first/last n of turtle’s stamps", "turtle.html#turtle.undo": "Undo (repeatedly) the last turtle action(s)", "turtle.html#turtle.speed": "Set the turtle’s speed to an integer value in the range 0", "turtle.html#turtle.position": "Return the turtle’s current location (x,y) (as a Vec2D vector)", "turtle.html#turtle.towards": "Return the angle between the line from turtle position to position specified by (x,y), the vector or the other turtle", "turtle.html#turtle.xcor": "Return the turtle’s x coordinate", "turtle.html#turtle.ycor": "Return the turtle’s y coordinate", "turtle.html#turtle.heading": "Return the turtle’s current heading (value depends on the turtle mode, see mode())", "turtle.html#turtle.distance": "Return the distance from the turtle to (x,y), the given vector, or the given other turtle, in turtle step units", "turtle.html#turtle.degrees": "Set angle measurement units, i", "turtle.html#turtle.radians": "Set the angle measurement units to radians", "turtle.html#turtle.pendown": "Pull the pen down – drawing when moving", "turtle.html#turtle.penup": "Pull the pen up – no drawing when moving", "turtle.html#turtle.pensize": "Set the line thickness to width or return it", "turtle.html#turtle.pen": "Return or set the pen’s attributes in a “pen-dictionary” with the following key/value pairs:", "turtle.html#turtle.isdown": "Return True if pen is down, False if it’s up", "turtle.html#turtle.pencolor": "Return or set the pencolor", "turtle.html#turtle.fillcolor": "Return or set the fillcolor", "turtle.html#turtle.color": "Return or set pencolor and fillcolor", "turtle.html#turtle.filling": "Return fillstate (True if filling, False else)", "turtle.html#turtle.begin_fill": "To be called just before drawing a shape to be filled", "turtle.html#turtle.end_fill": "Fill the shape drawn after the last call to begin_fill()", "turtle.html#turtle.reset": "Delete the turtle’s drawings from the screen, re-center the turtle and set variables to the default values", "turtle.html#turtle.clear": "Delete the turtle’s drawings from the screen", "turtle.html#turtle.write": "Write text - the string representation of arg - at the current turtle position according to align (“left”, “center” or right”) and with the given font", "turtle.html#turtle.hideturtle": "Make the turtle invisible", "turtle.html#turtle.showturtle": "Make the turtle visible", "turtle.html#turtle.isvisible": "Return True if the Turtle is shown, False if it’s hidden", "turtle.html#turtle.shape": "Set turtle shape to shape with given name or, if name is not given, return name of current shape", "turtle.html#turtle.resizemode": "Set resizemode to one of the values: “auto”, “user”, “noresize”", "turtle.html#turtle.shapesize": "Return or set the pen’s attributes x/y-stretchfactors and/or outline", "turtle.html#turtle.shearfactor": "Set or return the current shearfactor", "turtle.html#turtle.tilt": "Rotate the turtleshape by angle from its current tilt-angle, but do not change the turtle’s heading (direction of movement)", "turtle.html#turtle.settiltangle": "Rotate the turtleshape to point in the direction specified by angle, regardless of its current tilt-angle", "turtle.html#turtle.tiltangle": "Set or return the current tilt-angle", "turtle.html#turtle.shapetransform": "Set or return the current transformation matrix of the turtle shape", "turtle.html#turtle.get_shapepoly": "Return the current shape polygon as tuple of coordinate pairs", "turtle.html#turtle.onclick": "Bind fun to mouse-click events on this turtle", "turtle.html#turtle.onrelease": "Bind fun to mouse-button-release events on this turtle", "turtle.html#turtle.ondrag": "Bind fun to mouse-move events on this turtle", "turtle.html#turtle.begin_poly": "Start recording the vertices of a polygon", "turtle.html#turtle.end_poly": "Stop recording the vertices of a polygon", "turtle.html#turtle.get_poly": "Return the last recorded polygon", "turtle.html#turtle.clone": "Create and return a clone of the turtle with same position, heading and turtle properties", "turtle.html#turtle.getturtle": "Return the Turtle object itself", "turtle.html#turtle.getscreen": "Return the TurtleScreen object the turtle is drawing on", "turtle.html#turtle.setundobuffer": "Set or disable undobuffer", "turtle.html#turtle.undobufferentries": "Return number of entries in the undobuffer", "turtle.html#turtle.bgcolor": "Set or return background color of the TurtleScreen", "turtle.html#turtle.bgpic": "Set background image or return name of current backgroundimage", "turtle.html#turtle.screensize": "If no arguments are given, return current (canvaswidth, canvasheight)", "turtle.html#turtle.setworldcoordinates": "Set up user-defined coordinate system and switch to mode “world” if necessary", "turtle.html#turtle.delay": "Set or return the drawing delay in milliseconds", "turtle.html#turtle.tracer": "打开/关闭乌龟动画并为更新图纸设置延迟", "turtle.html#turtle.update": "Perform a TurtleScreen update", "turtle.html#turtle.listen": "Set focus on TurtleScreen (in order to collect key-events)", "turtle.html#turtle.onkey": "Bind fun to key-release event of key", "turtle.html#turtle.onkeypress": "Bind fun to key-press event of key if key is given, or to any key-press-event if no key is given", "turtle.html#turtle.ontimer": "Install a timer that calls fun after t milliseconds", "turtle.html#turtle.mainloop": "开始事件循环 - 调用Tkinter的mainloop函数", "turtle.html#turtle.textinput": "Pop up a dialog window for input of a string", "turtle.html#turtle.numinput": "Pop up a dialog window for input of a number", "turtle.html#turtle.mode": "Set turtle mode (“standard”, “logo” or “world”) and perform reset", "turtle.html#turtle.colormode": "返回colormode或将其设置为1", "turtle.html#turtle.getcanvas": "Return the Canvas of this TurtleScreen", "turtle.html#turtle.getshapes": "Return a list of names of all currently available turtle shapes", "turtle.html#turtle.register_shape": "There are three different ways to call this function:", "turtle.html#turtle.turtles": "Return the list of turtles on the screen", "turtle.html#turtle.window_height": "Return the height of the turtle window", "turtle.html#turtle.window_width": "Return the width of the turtle window", "turtle.html#turtle.bye": "Shut the turtlegraphics window", "turtle.html#turtle.exitonclick": "Bind bye() method to mouse clicks on the Screen", "turtle.html#turtle.setup": "Set the size and position of the main window", "turtle.html#turtle.title": "Set title of turtle window to titlestring", "turtle.html#turtle.write_docstringdict": "Create and write docstring-dictionary to a Python script with the given filename", "types.html#types.new_class": "使用适当的元类动态创建类对象", "types.html#types.prepare_class": "计算适当的元类并创建类命名空间", "types.html#types.DynamicClassAttribute": "将类的路由属性访问权限授予__getattr__", "types.html#types.coroutine": "此函数将generator函数转换为coroutine function，返回基于生成器的协程", "types.html#types.FunctionType": "由lambda表达式创建的用户定义函数和函数的类型", "types.html#types.GeneratorType": "由生成器函数创建的generator  - 类型对象", "types.html#types.CoroutineType": "由async def函数创建的coroutine对象的类型", "types.html#types.CodeType": "由compile()返回的代码对象的类型", "types.html#types.MethodType": "methodtype", "types.html#types.BuiltinFunctionType": "内建函数的类型如len()或sys", "types.html#types.TracebackType": "跟踪对象的类型，例如在sys", "types.html#types.FrameType": "如tb", "types.html#types.GetSetDescriptorType": "在扩展模块中使用PyGetSetDef定义的对象类型，例如FrameType", "types.html#types.MemberDescriptorType": "在扩展模块中使用PyMemberDef定义的对象类型，例如datetime", "typing.html#typing.NamedTuple": "namedtuple的类型化版本", "typing.html#typing.cast": "将值转换为类型", "typing.html#typing.get_type_hints": "返回函数或方法对象的类型提示", "typing.html#typing.no_type_check": "装饰器来指示注解不是类型提示", "typing.html#typing.no_type_check_decorator": "装饰器给另一个装饰器no_type_check()效果", "unicodedata.html#unicodedata.lookup": "通过一个名称来查找字符", "unicodedata.html#unicodedata.name": "返回分配给字符chr的名称作为字符串", "unicodedata.html#unicodedata.decimal": "将分配给字符chr的十进制值作为整数返回", "unicodedata.html#unicodedata.digit": "将分配给字符chr的数字值作为整数返回", "unicodedata.html#unicodedata.numeric": "返回分配给字符chr的数值为float", "unicodedata.html#unicodedata.category": "将分配给字符chr的一般类别返回为字符串", "unicodedata.html#unicodedata.bidirectional": "以字符串形式返回分配给字符chr的双向类", "unicodedata.html#unicodedata.combining": "返回分配给字符chr的规范组合类作为整数", "unicodedata.html#unicodedata.east_asian_width": "将分配给字符chr的东亚宽度返回为字符串", "unicodedata.html#unicodedata.mirrored": "将分配给字符chr的镜像属性返回为整数", "unicodedata.html#unicodedata.decomposition": "以字符串形式返回分配给字符chr的字符分解映射", "unicodedata.html#unicodedata.normalize": "返回Unicode字符串unistr的form规范形式", "unicodedata.html#unicodedata.unidata_version": "此模块中使用的Unicode数据库的版本", "unicodedata.html#unicodedata.ucd_3_2_0": "这是一个与整个模块具有相同方法的对象，但对于需要此特定版本的Unicode数据库（例如IDNA）的应用程序，则使用Unicode数据库版本3", "unittest.html#unittest.skip": "Unconditionally skip the decorated test", "unittest.html#unittest.skipIf": "Skip the decorated test if condition is true", "unittest.html#unittest.skipUnless": "Skip the decorated test unless condition is true", "unittest.html#unittest.expectedFailure": "Mark the test as an expected failure", "unittest.html#unittest.main": "A command-line program that loads a set of tests from module and runs them; this is primarily for making test modules conveniently executable", "unittest.html#unittest.installHandler": "Install the control-c handler", "unittest.html#unittest.registerResult": "Register a TestResult object for control-c handling", "unittest.html#unittest.removeResult": "Remove a registered result", "unittest.html#unittest.removeHandler": "When called without arguments this function removes the control-c handler if it has been installed", "unittest.html#unittest.defaultTestLoader": "Instance of the TestLoader class intended to be shared", "unittest.mock.html#unittest.mock.patch": "patch() acts as a function decorator, class decorator or a context manager", "unittest.mock.html#unittest.mock.patch.object": "patch the named member (attribute) on an object (target) with a mock object", "unittest.mock.html#unittest.mock.patch.dict": "Patch a dictionary, or dictionary like object, and restore the dictionary to its original state after the test", "unittest.mock.html#unittest.mock.patch.multiple": "Perform multiple patches in a single call", "unittest.mock.html#unittest.mock.patch.stopall": "Stop all active patches", "unittest.mock.html#unittest.mock.call": "call() is a helper object for making simpler assertions, for comparing with call_args, call_args_list, mock_calls and method_calls", "unittest.mock.html#unittest.mock.create_autospec": "Create a mock object using another object as a spec", "unittest.mock.html#unittest.mock.mock_open": "A helper function to create a mock to replace the use of open()", "unittest.mock.html#unittest.mock.sentinel": "The sentinel object provides a convenient way of providing unique objects for your tests", "unittest.mock.html#unittest.mock.DEFAULT": "The DEFAULT object is a pre-created sentinel (actually sentinel", "urllib.parse.html#urllib.parse.urlparse": "将URL解析为六个部分，返回一个6元组", "urllib.parse.html#urllib.parse.parse_qs": "解析作为字符串参数（application / x-www-form-urlencoded类型的数据）提供的查询字符串", "urllib.parse.html#urllib.parse.parse_qsl": "解析作为字符串参数（application / x-www-form-urlencoded类型的数据）提供的查询字符串", "urllib.parse.html#urllib.parse.urlunparse": "从urlparse()返回的元组构造一个URL", "urllib.parse.html#urllib.parse.urlsplit": "这类似于urlparse()，但不会从URL中分离参数", "urllib.parse.html#urllib.parse.urlunsplit": "将urlsplit()返回的元组元素合并为一个完整的URL作为字符串", "urllib.parse.html#urllib.parse.urljoin": "通过将“基本网址”（基本）与另一个网址（url）组合，构造完整（“绝对”）网址", "urllib.parse.html#urllib.parse.urldefrag": "如果url包含片段标识符，则返回没有片段标识符的url的修改版本，片段标识符作为单独的字符串", "urllib.parse.html#urllib.parse.quote": "使用%xx转义替换string中的特殊字符", "urllib.parse.html#urllib.parse.quote_plus": "类似quote()，但是用加号替换空格，在转义HTML表单值来构建查询字符串以进入URL时，这是必需的", "urllib.parse.html#urllib.parse.quote_from_bytes": "像quote()，但接受bytes对象而不是str，并且不执行字符串到字节编码", "urllib.parse.html#urllib.parse.unquote": "将%xx转义替换为等效的单字符", "urllib.parse.html#urllib.parse.unquote_plus": "类似于unquote()，但是也可以用空格替换加号，这是不需要引用HTML表单值的", "urllib.parse.html#urllib.parse.unquote_to_bytes": "Replace %xx escapes by their single-octet equivalent, and return a bytes object", "urllib.parse.html#urllib.parse.urlencode": "将映射对象或两元素元组序列，可以包含str或字节对象，转换为百分号编码的ASCII文本字符串", "urllib.request.html#urllib.request.urlopen": "打开url参数传进来的网址，既可以是一个字符串，又可以是一个Request对象", "urllib.request.html#urllib.request.install_opener": "安装OpenerDirector实例作为默认全局启动器", "urllib.request.html#urllib.request.build_opener": "返回OpenerDirector实例，按所给定的顺序链接处理程序", "urllib.request.html#urllib.request.pathname2url": "将路径名path从本地语法转换为URL的路径组件中使用的形式", "urllib.request.html#urllib.request.url2pathname": "将路径组件路径从百分比编码的URL转换为路径的本地语法", "urllib.request.html#urllib.request.getproxies": "这个帮助函数返回一个方案到代理服务器URL映射的字典", "urllib.request.html#urllib.request.urlretrieve": "将由URL表示的网络对象复制到本地文件", "urllib.request.html#urllib.request.urlcleanup": "清除先前对urlretrieve()调用可能遗留的临时文件", "uu.html#uu.encode": "Uuencode文件in_file导入文件out_file", "uu.html#uu.decode": "此调用会将uuencoded文件in_file解码，将结果放在文件out_file上", "uuid.html#uuid.getnode": "获取硬件地址作为48位正整数", "uuid.html#uuid.uuid1": "基于主机ID，序列号，当前时间生成UUID", "uuid.html#uuid.uuid3": "基于命名空间标识符（一个UUID）和一个名称（一个字符串）的MD5哈希生成UUID", "uuid.html#uuid.uuid4": "生成随机UUID", "uuid.html#uuid.uuid5": "基于命名空间标识符（其是UUID）和名称（其是字符串）的SHA-1散列来生成UUID", "uuid.html#uuid.NAMESPACE_DNS": "指定此命名空间时，name字符串是一个FQDN", "uuid.html#uuid.NAMESPACE_URL": "指定此命名空间时，name字符串是一个URL", "uuid.html#uuid.NAMESPACE_OID": "指定此命名空间时，名称字符串是ISO OID", "uuid.html#uuid.NAMESPACE_X500": "指定此命名空间时，名称字符串是DER中的X", "uuid.html#uuid.RESERVED_NCS": "保留NCS兼容性", "uuid.html#uuid.RFC_4122": "指定 RFC 4122中给出的UUID布局", "uuid.html#uuid.RESERVED_MICROSOFT": "保留用于Microsoft兼容性", "uuid.html#uuid.RESERVED_FUTURE": "留作将来定义", "venv.html#venv.create": "使用给定的关键字参数创建EnvBuilder，并使用env_dir参数调用其create()方法", "warnings.html#warnings.warn": "发出警告，或者可能忽略它或引发异常", "warnings.html#warnings.warn_explicit": "这是对warn()功能的低级接口，显式传递消息，类别，文件名和行号，以及可选的模块名称和注册表（应为__warningregistry__模块的字典）", "warnings.html#warnings.showwarning": "向文件写入警告", "warnings.html#warnings.formatwarning": "按标准方式格式化警告", "warnings.html#warnings.filterwarnings": "在warnings filter specifications列表中插入一个条目", "warnings.html#warnings.simplefilter": "在warnings filter specifications列表中插入一个简单的条目", "warnings.html#warnings.resetwarnings": "重置警告过滤器", "wave.html#wave.open": "如果文件是字符串，请按该名称打开该文件，否则将其视为类文件对象", "wave.html#wave.openfp": "为维持向后兼容性的open()的同义词", "weakref.html#weakref.proxy": "将代理返回到使用弱引用的对象", "weakref.html#weakref.getweakrefcount": "返回引用对象的弱引用和代理的数量", "weakref.html#weakref.getweakrefs": "返回引用对象的所有弱引用和代理对象的列表", "weakref.html#weakref.ReferenceType": "弱引用对象的类型对象", "weakref.html#weakref.ProxyType": "不可调用对象的代理的类型对象", "weakref.html#weakref.CallableProxyType": "可调用对象的代理的类型对象", "weakref.html#weakref.ProxyTypes": "包含代理的所有类型对象的序列", "webbrowser.html#webbrowser.open": "调用默认浏览器打开 url ", "webbrowser.html#webbrowser.open_new": "如果可能，在默认浏览器的新窗口中打开url，否则，在唯一的浏览器窗口中打开url", "webbrowser.html#webbrowser.open_new_tab": "如果可能，在默认浏览器的新页面（“标签”）中打开url，否则等效于open_new()", "webbrowser.html#webbrowser.get": "使用返回浏览器类型的控制器对象", "webbrowser.html#webbrowser.register": "注册浏览器类型名称", "winreg.html#winreg.CloseKey": "关闭以前打开的注册表项", "winreg.html#winreg.ConnectRegistry": "与另一台计算机上的预定义注册表句柄建立连接，并返回handle object", "winreg.html#winreg.CreateKey": "创建或打开指定的键，返回handle object", "winreg.html#winreg.CreateKeyEx": "创建或打开指定的键，返回handle object", "winreg.html#winreg.DeleteKey": "删除指定的键", "winreg.html#winreg.DeleteKeyEx": "删除指定的键", "winreg.html#winreg.DeleteValue": "从注册表项中删除命名的值", "winreg.html#winreg.EnumKey": "枚举打开的注册表项的子项，返回一个字符串", "winreg.html#winreg.EnumValue": "枚举打开的注册表项的值，返回元组", "winreg.html#winreg.ExpandEnvironmentStrings": "在像REG_EXPAND_SZ的字符串中扩展环境变量占位符%NAME%：", "winreg.html#winreg.FlushKey": "将键的所有属性写入注册表", "winreg.html#winreg.LoadKey": "在指定的键下创建子键，并将来自指定文件的注册信息存储到该子键中", "winreg.html#winreg.OpenKey": "打开指定的键，返回handle object", "winreg.html#winreg.QueryInfoKey": "返回有关键的信息，作为元组", "winreg.html#winreg.QueryValue": "检索键的未命名值，作为字符串", "winreg.html#winreg.QueryValueEx": "检索与打开的注册表项相关联的指定值名称的类型和数据", "winreg.html#winreg.SaveKey": "将指定的键及其所有子键保存到指定的文件", "winreg.html#winreg.SetValue": "将值与指定的键相关联", "winreg.html#winreg.SetValueEx": "将数据存储在打开的注册表项的值字段中", "winreg.html#winreg.DisableReflectionKey": "对运行在64位操作系统上的32位进程禁用注册表反射", "winreg.html#winreg.EnableReflectionKey": "恢复指定的禁用键的注册表反射", "winreg.html#winreg.QueryReflectionKey": "确定指定键的反射状态", "winreg.html#winreg.HKEY_CLASSES_ROOT": "从属于此键的注册表项定义文档的类型（或类）以及与这些类型相关联的属性", "winreg.html#winreg.HKEY_CURRENT_USER": "从属于此键的注册表项定义当前用户的首选项", "winreg.html#winreg.HKEY_LOCAL_MACHINE": "此键下属的注册表项定义计算机的物理状态，包括有关总线类型，系统内存和已安装的硬件和软件的数据", "winreg.html#winreg.HKEY_USERS": "从属于此键的注册表项定义本地计算机上新用户的默认用户配置和当前用户的用户配置", "winreg.html#winreg.HKEY_PERFORMANCE_DATA": "此密钥下的注册表项允许您访问性能数据", "winreg.html#winreg.HKEY_CURRENT_CONFIG": "包含有关本地计算机系统的当前硬件配置文件的信息", "winreg.html#winreg.HKEY_DYN_DATA": "此键在98之后的Windows版本中不使用", "winreg.html#winreg.KEY_ALL_ACCESS": "合并STANDARD_RIGHTS_REQUIRED，KEY_QUERY_VALUE，KEY_SET_VALUE，KEY_CREATE_SUB_KEY，KEY_ENUMERATE_SUB_KEYS，KEY_NOTIFY KEY_CREATE_LINK访问权限", "winreg.html#winreg.KEY_WRITE": "合并STANDARD_RIGHTS_WRITE，KEY_SET_VALUE和KEY_CREATE_SUB_KEY访问权限", "winreg.html#winreg.KEY_READ": "合并STANDARD_RIGHTS_READ，KEY_QUERY_VALUE，KEY_ENUMERATE_SUB_KEYS和KEY_NOTIFY值", "winreg.html#winreg.KEY_EXECUTE": "等效于KEY_READ", "winreg.html#winreg.KEY_QUERY_VALUE": "需要查询注册表项的值", "winreg.html#winreg.KEY_SET_VALUE": "需要创建，删除或设置注册表值", "winreg.html#winreg.KEY_CREATE_SUB_KEY": "需要创建注册表项的子项", "winreg.html#winreg.KEY_ENUMERATE_SUB_KEYS": "必需枚举注册表项的子项", "winreg.html#winreg.KEY_NOTIFY": "需要为注册表项请求更改通知，或者为注册表项的子项请求更改通知", "winreg.html#winreg.KEY_CREATE_LINK": "保留供系统使用", "winreg.html#winreg.KEY_WOW64_64KEY": "表示64位Windows上的应用程序应在64位注册表视图上运行", "winreg.html#winreg.KEY_WOW64_32KEY": "表示64位Windows上的应用程序应在32位注册表视图上运行", "winreg.html#winreg.REG_BINARY": "任何形式的二进制数据", "winreg.html#winreg.REG_DWORD": "32位数", "winreg.html#winreg.REG_DWORD_LITTLE_ENDIAN": "小端格式的32位数字", "winreg.html#winreg.REG_DWORD_BIG_ENDIAN": "以big-endian格式的32位数字", "winreg.html#winreg.REG_EXPAND_SZ": "Null终止的字符串，包含对环境变量的引用（%PATH%）", "winreg.html#winreg.REG_LINK": "Unicode符号链接", "winreg.html#winreg.REG_MULTI_SZ": "以NULL结束的字符串序列，以两个空字符结束", "winreg.html#winreg.REG_NONE": "没有定义值类型", "winreg.html#winreg.REG_RESOURCE_LIST": "设备驱动程序资源列表", "winreg.html#winreg.REG_FULL_RESOURCE_DESCRIPTOR": "硬件设置", "winreg.html#winreg.REG_RESOURCE_REQUIREMENTS_LIST": "硬件资源列表", "winreg.html#winreg.REG_SZ": "以null结尾的字符串", "winsound.html#winsound.Beep": "让电脑发出&quot;哔&quot;的声音", "winsound.html#winsound.PlaySound": "从Platform API调用底层的PlaySound()函数", "winsound.html#winsound.MessageBeep": "从Platform API调用底层的MessageBeep()函数", "winsound.html#winsound.SND_FILENAME": "sound参数是WAV文件的名称", "winsound.html#winsound.SND_ALIAS": "声音参数是来自注册表的声音关联名称", "winsound.html#winsound.SND_LOOP": "反复播放声音", "winsound.html#winsound.SND_MEMORY": "PlaySound()的声音参数是WAV文件的存储器映像，作为字符串", "winsound.html#winsound.SND_PURGE": "停止播放指定声音的所有实例", "winsound.html#winsound.SND_ASYNC": "立即返回，允许声音异步播放", "winsound.html#winsound.SND_NODEFAULT": "如果无法找到指定的声音，请不要播放系统默认声音", "winsound.html#winsound.SND_NOSTOP": "不要打断当前正在播放的声音", "winsound.html#winsound.SND_NOWAIT": "如果声音驱动器忙，立即返回", "winsound.html#winsound.MB_ICONASTERISK": "播放SystemDefault声音", "winsound.html#winsound.MB_ICONEXCLAMATION": "播放SystemExclamation声音", "winsound.html#winsound.MB_ICONHAND": "播放SystemHand声音", "winsound.html#winsound.MB_ICONQUESTION": "播放SystemQuestion声音", "winsound.html#winsound.MB_OK": "播放SystemDefault声音", "wsgiref.html#wsgiref.util.guess_scheme": "通过检查environ 字典中的HTTPS环境变量，返回对wsgi", "wsgiref.html#wsgiref.util.request_uri": "使用 PEP 3333的“URL重建”部分中找到的算法返回完整的请求URI（可选择包括查询字符串）", "wsgiref.html#wsgiref.util.application_uri": "类似于request_uri()，除了忽略PATH_INFO和QUERY_STRING变量", "wsgiref.html#wsgiref.util.shift_path_info": "将单个名称从PATH_INFO切换到SCRIPT_NAME，并返回名称", "wsgiref.html#wsgiref.util.setup_testing_defaults": "使用琐碎的默认值更新environ以进行测试", "wsgiref.html#wsgiref.util.is_hop_by_hop": "如果'header_name'是由 RFC 2616定义的HTTP / 1", "wsgiref.html#wsgiref.simple_server.make_server": "创建在host和port上侦听的新WSGI服务器，接受app的连接", "wsgiref.html#wsgiref.simple_server.demo_app": "此函数是一个小但完整的WSGI应用程序，它返回一个包含消息“Hello world！”的文本页面以及environ参数中提供的键/值对列表", "wsgiref.html#wsgiref.validate.validator": "换行应用程序并返回一个新的WSGI应用程序对象", "wsgiref.html#wsgiref.handlers.read_environ": "将os", "xml.dom.html#xml.dom.registerDOMImplementation": "Register the factory function with the name name", "xml.dom.html#xml.dom.getDOMImplementation": "Return a suitable DOM implementation", "xml.dom.html#xml.dom.EMPTY_NAMESPACE": "The value used to indicate that no namespace is associated with a node in the DOM", "xml.dom.html#xml.dom.XML_NAMESPACE": "The namespace URI associated with the reserved prefix xml, as defined by Namespaces in XML (section 4)", "xml.dom.html#xml.dom.XMLNS_NAMESPACE": "The namespace URI for namespace declarations, as defined by Document Object Model (DOM) Level 2 Core Specification (section 1", "xml.dom.html#xml.dom.XHTML_NAMESPACE": "The URI of the XHTML namespace as defined by XHTML 1", "xml.dom.minidom.html#xml.dom.minidom.parse": "从给定输入返回Document", "xml.dom.minidom.html#xml.dom.minidom.parseString": "返回表示字符串的Document", "xml.dom.pulldom.html#xml.dom.pulldom.parse": "从给定输入返回DOMEventStream", "xml.dom.pulldom.html#xml.dom.pulldom.parseString": "返回表示（Unicode）字符串的DOMEventStream", "xml.dom.pulldom.html#xml.dom.pulldom.default_bufsize": "bufsize参数到parse()的默认值", "xml.etree.elementtree.html#xml.etree.ElementTree.Comment": "Comment element factory", "xml.etree.elementtree.html#xml.etree.ElementTree.dump": "Writes an element tree or element structure to sys", "xml.etree.elementtree.html#xml.etree.ElementTree.fromstring": "Parses an XML section from a string constant", "xml.etree.elementtree.html#xml.etree.ElementTree.fromstringlist": "Parses an XML document from a sequence of string fragments", "xml.etree.elementtree.html#xml.etree.ElementTree.iselement": "Checks if an object appears to be a valid element object", "xml.etree.elementtree.html#xml.etree.ElementTree.iterparse": "Parses an XML section into an element tree incrementally, and reports what’s going on to the user", "xml.etree.elementtree.html#xml.etree.ElementTree.parse": "Parses an XML section into an element tree", "xml.etree.elementtree.html#xml.etree.ElementTree.ProcessingInstruction": "PI element factory", "xml.etree.elementtree.html#xml.etree.ElementTree.register_namespace": "Registers a namespace prefix", "xml.etree.elementtree.html#xml.etree.ElementTree.SubElement": "Subelement factory", "xml.etree.elementtree.html#xml.etree.ElementTree.tostring": "Generates a string representation of an XML element, including all subelements", "xml.etree.elementtree.html#xml.etree.ElementTree.tostringlist": "Generates a string representation of an XML element, including all subelements", "xml.etree.elementtree.html#xml.etree.ElementTree.XML": "Parses an XML section from a string constant", "xml.etree.elementtree.html#xml.etree.ElementTree.XMLID": "Parses an XML section from a string constant, and also returns a dictionary which maps from element id:s to elements", "xml.sax.handler.html#xml.sax.handler.all_features": "所有功能的列表", "xml.sax.handler.html#xml.sax.handler.all_properties": "所有已知属性名称的列表", "xml.sax.html#xml.sax.make_parser": "创建并返回SAX XMLReader对象", "xml.sax.html#xml.sax.parse": "创建一个SAX解析器并使用它来解析文档", "xml.sax.html#xml.sax.parseString": "类似于parse()，但是从作为参数接收的缓冲区字符串解析", "xml.sax.utils.html#xml.sax.saxutils.escape": "Escape '&', '<', and '>' in a string of data", "xml.sax.utils.html#xml.sax.saxutils.unescape": "在数据字符串中取消转义'&amp;'，'&lt;'和'&gt;'", "xml.sax.utils.html#xml.sax.saxutils.quoteattr": "类似于escape()，但也准备数据以用作属性值", "xml.sax.utils.html#xml.sax.saxutils.prepare_input_source": "此函数接受一个输入源和一个可选的基址URL，并返回一个完全解析的InputSource对象，可以读取", "xmlrpc.client.html#xmlrpc.client.dumps": "将params转换为XML-RPC请求", "xmlrpc.client.html#xmlrpc.client.loads": "将XML-RPC请求或响应转换为Python对象（params， methodname）", "zipapp.html#zipapp.create_archive": "从源创建应用程序归档", "zipfile.html#zipfile.is_zipfile": "如果filename是基于其幻数的有效ZIP文件，则返回True，否则返回False", "zipfile.html#zipfile.ZIP_STORED": "未压缩的归档成员的数字常量", "zipfile.html#zipfile.ZIP_DEFLATED": "常用ZIP压缩方法的数字常量", "zipfile.html#zipfile.ZIP_BZIP2": "BZIP2压缩方法的数字常量", "zipfile.html#zipfile.ZIP_LZMA": "LZMA压缩方法的数字常量", "zlib.html#zlib.adler32": "计算数据的Adler-32校验和", "zlib.html#zlib.compress": "压缩数据中的字节，返回包含压缩数据的字节对象", "zlib.html#zlib.compressobj": "返回一个压缩对象，用于压缩不能立即适合内存的数据流", "zlib.html#zlib.crc32": "计算数据的CRC（循环冗余校验）校验和", "zlib.html#zlib.decompress": "解压缩数据中的字节，返回包含未压缩数据的字节对象", "zlib.html#zlib.decompressobj": "返回解压缩对象，用于解压缩不能立即适合内存的数据流", "zlib.html#zlib.ZLIB_VERSION": "用于构建模块的zlib库的版本字符串", "zlib.html#zlib.ZLIB_RUNTIME_VERSION": "由解释器实际加载的zlib库的版本字符串", "_thread.html#_thread.start_new_thread": "启动一个新线程并返回其标识符", "_thread.html#_thread.interrupt_main": "引发主线程中的KeyboardInterrupt异常", "_thread.html#_thread.exit": "引发SystemExit异常", "_thread.html#_thread.allocate_lock": "返回一个新的锁对象", "_thread.html#_thread.get_ident": "返回当前线程的'线程标识符'", "_thread.html#_thread.stack_size": "返回创建新线程时使用的线程堆栈大小", "_thread.html#_thread.LockType": "这是锁对象的类型", "_thread.html#_thread.TIMEOUT_MAX": "Lock" }